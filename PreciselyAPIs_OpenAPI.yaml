openapi: 3.0.1
info:
  contact:
    name: Precisely APIs Support
    url: https://support.precisely.com
  description: Enhance & enrich your data, applications, business processes, and workflows
    with rich location, information, and identify APIs.
  license:
    name: Apache 2.0
    url: http://springdoc.org
  termsOfService: http://swagger.io/terms/
  title: Precisely APIs
  version: 15.0.0
externalDocs:
  description: Online Documentation
  url: https://docs.precisely.com/docs/sftw/precisely-apis/main/en-us/webhelp/apis/index.html
servers:
- url: https://api.precisely.com
security:
- oAuth2Password:
  - ""
tags:
- description: Addresses. Gather multiple Addresses if you don’t have them and use
    these to query all other Precisely APIs. The Addresses API accepts names of a
    boundary such as zip code, neighborhood, county, and city—as well as your custom
    geographic boundaries or drivetimes & drive distances—and returns all known &
    valid Addresses associated with these names, or Addresses contained with the supplied
    or chosen geographic boundary.
  name: Addresses Service.
- description: Audience Enrichment. Add local demographics and lifestyle segmentation
    to your audience profiles. The Demographics API returns household demographics
    and lifestyle characteristics with the input of an address, location coordinate,
    or geographic boundary.
  name: Demographics Service
- description: Accurate Geocoding. Convert individual or batch collections of addresses
    to latitude & longitude coordinates and vice versa. Useful for enhancing & enriching
    your customer addresses. This is a global service.
  name: Geocode Service
- description: Local Tax. Add hyperlocal U.S. tax rates to your applications, business
    processes, and workflows. The Local Tax API returns local tax rates with the input
    of location coordinates or addresses. Critical for any billing, commerce, payment,
    or payroll application or service.
  name: Local Tax Service
- description: Neighborhood Insights. Integrate global neighborhood names and classification
    information into your applications and enrich other data. The Neighborhood API
    accepts latitude & longitude coordinates and returns the corresponding neighborhood
    name & type. Useful for a wide range of data enrichment use cases.
  name: Neighborhoods Service.
- description: Global Place Data. Enrich your applications, business processes, and
    workflows with over 180 million of global retail businesses and landmark points-of-interest.
    The Places API accepts multiple powerful inputs & filtering options and returns
    thousands of records in a single API request. The Places API also supports global
    typeahead place search. Useful for enriching your data and/or analytics processes
    with rich commercial business information and place names.
  name: Places Service.
- description: Property Insights. Integrate extensive residential & commercial property
    information into your applications. The Property Information API returns hundreds
    of property attributes for millions of US properties with the input of Location
    Coordinates or Addresses. Useful for Real Estate use cases or those involving
    risk assessments.
  name: Property Information Service
- description: Emergency call handling. Integrate Public Safety Answering Point (PSAP)
    administrative call routing information plus Authority Having Jurisdiction (AHJ)
    phone numbers into your emergency services products and services. The 911/PSAP
    API retrieves 10-digit phone numbers and local contact info with the input of
    a location coordinate. Useful for emergency services administrators, call handlers,
    and dispatchers.
  name: PSAP/911 Service
- description: Risks Insights. Capture Crime, Earthquake, Flood, Fire, Fire Station
    and Distance-to-Flood-Hazard risk data for Analysis, Planning, Claims, and Mitigation.
    The Risks API returns risk intelligence with the input of Location Coordinates
    or Addresses. Critical for any impact analysis involving threats to lives or property.
  name: Risks Service
- description: Accurate Routing. The Routing API returns Point-to-Point and Multi-Point
    Travel Directions by Various Travel Modes. Critical for any Simple or Complex
    Routing Requirement.
  name: Routing Service
- description: School Listings. Gather local multiple school listings, types, districts
    and education levels for your applications. The Schools API accepts multiple powerful
    inputs & geographic filtering options and returns nearby school listings and additional
    data a single API request. Useful for enriching your applications and websites.
  name: Schools Service
- description: Global Street Information. Enrich your applications, business processes,
    and workflows with global street information including nearest intersections and
    speed limits. The Streets API accepts an address or location and returns nearest
    intersection information. The speed limit method accepts a series of locations
    and returns speed limits along a street segment.
  name: Streets Service
- description: Service Provider Intelligence. Identify Local Exchange Carrier presence,
    area codes, exchanges, and more within a Rate Center area. The Telecomm Info API
    retrieves Incumbent Local Exchange Carrier (ILEC) doing-business-as names along
    with NPA/NXX, LATA, and phone number ranges with the input of an address or location
    coordinates. Useful for local telecommunications competitive intelligence, partnerships,
    and provisioning subscribers.
  name: Telecomm Info Service
- description: Local time. The Time Zone API returns time zones and UTC offsets with
    the input of a location coordinate or address. Useful for do-not-call, logistics,
    and customer engagement applications, business processes and workflows.
  name: Time Zone Service
- description: Address Autocomplete. Build global Address Autocomplete into your websites.
    The Address Autocomplete API returns an autocompleted list of complete addresses
    based on partial address keystrokes. Useful for any local search, checkout, shipping,
    or billing experience on your website.
  name: Address Autocomplete Service
- description: Smart Zones. The Zones API returns geographic zones globally—by Radius,
    Drive Distance and Drive Time—as well as highly localized Precisely geofence zones.
    Useful for creating smarter geofence zones for Local Engagement and Analysis.
  name: Zones Service
- description: Real, accurate and complete address. Eliminate errors in address data,
    improve customer experience. The Address Verification API makes communication
    easier, faster and effortless by enriching customer details, keeping it up-to-date
    and maintaining its accuracy and consistency. It eliminates redundancy in reaching
    out to customers and makes it easy for distinct functional areas to work seamlessly
    in improving customer relationship
  name: Address Verification Service
- description: Global Email address verification. The Email Verification API corrects
    and validates your email addresses to protect your database from invalid, toxic
    and undesirable email addresses. We help you avoid a damaged sender reputations
    by flagging those bouncing emails, spam trap hits, honeypots, stale lists and
    do-not-contact list before you have a chance to use them.
  name: Email Verification Service
- description: Global Phone number verification. The Phone Verification API accepts
    any phone number as input and returns verification information, Service Provider
    name, and more. Useful to verify if phone numbers exist to reduce fraud and improve
    communications.
  name: Phone Verification Service
- description: Device Location. The Geolocation API returns location coordinates based
    on the input of an IP Address or Wi-Fi Access point MAC address. Useful for a
    variety of applications, business processes and workflows in eCommerce, Fraud
    Detection, Physical-Digital interactions, Field Service and more.
  name: Geolocation Service
paths:
  /addresses/v1/addresscount/byboundary:
    post:
      description: This service accepts custom geographic boundaries or drive time
        & drive distance, returns the total number of addresses within these boundaries.
      operationId: getAddressesCountbyBoundary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressesByBoundaryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressesCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/addressesCount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Addresses count by Boundary.
      tags:
      - Addresses Service.
      x-contentType: application/json
      x-accepts: application/json
  /addresses/v1/address/byboundary:
    post:
      description: This service accepts custom geographic boundaries or drive time
        & drive distance, returns all known & valid addresses within these boundaries.
      operationId: getAddressesbyBoundary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressesByBoundaryRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddressesByBoundaryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Addresses by Boundary.
      tags:
      - Addresses Service.
      x-contentType: application/json
      x-accepts: application/json
  /addresses/v1/addresscount/byboundaryname:
    get:
      description: This service accepts zip code, neighborhood, county, or city names,
        and returns the total number of addresses associated with these names.
      operationId: getAddressesCountByBoundaryName
      parameters:
      - description: Specifies the largest geographical area, typically a state or
          province.
        in: query
        name: areaName1
        required: false
        schema:
          type: string
      - description: Specifies the secondary geographic area, typically a county or
          district.
        in: query
        name: areaName2
        required: false
        schema:
          type: string
      - description: Specifies a city or town name.
        in: query
        name: areaName3
        required: false
        schema:
          type: string
      - description: Specifies a city subdivision or locality/neighborhood.
        in: query
        name: areaName4
        required: false
        schema:
          type: string
      - description: Specifies the postcode (ZIP code) in the appropriate format for
          the country.
        in: query
        name: postCode
        required: false
        schema:
          type: string
      - description: Name of country. Acceptable values are CAN, USA.
        in: query
        name: country
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressesCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/addressesCount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Addresses Count by Boundary Name.
      tags:
      - Addresses Service.
      x-accepts: application/json
  /addresses/v1/address/byboundaryname:
    get:
      description: This service accepts zip code, neighborhood, county, or city names,
        and returns all known & valid addresses associated with these names.
      operationId: getAddressesbyBoundaryName
      parameters:
      - description: Specifies the largest geographical area, typically a state or
          province.
        in: query
        name: areaName1
        required: false
        schema:
          type: string
      - description: Specifies the secondary geographic area, typically a county or
          district.
        in: query
        name: areaName2
        required: false
        schema:
          type: string
      - description: Specifies a city or town name.
        in: query
        name: areaName3
        required: false
        schema:
          type: string
      - description: Specifies a city subdivision or locality/neighborhood.
        in: query
        name: areaName4
        required: false
        schema:
          type: string
      - description: Specifies the postcode (ZIP code) in the appropriate format for
          the country.
        in: query
        name: postCode
        required: false
        schema:
          type: string
      - description: Name of country. Acceptable values are CAN, USA.
        in: query
        name: country
        required: true
        schema:
          type: string
      - description: Maximum number of addresses to be returned in response. Max.
          value is 100 for XML/JSON, and 2000 for CSV.
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Response will indicate the page number.
        in: query
        name: page
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/AddressesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Addresses by Boundary Name.
      tags:
      - Addresses Service.
      x-accepts: application/json
  /demographics-segmentation/v1/advanced/demographics:
    post:
      description: 'Demographics Advanced Endpoint will return the aggregated values
        of the selected demographics variables of the regions falling inside a user
        provided geometry or travel time/distance boundaries. All the intersecting
        demographic boundaries will be snapped completely, and user will have option
        to request these boundaries in response.  '
      operationId: getDemographicsAdvanced
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicsAdvancedRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
            application/xml:
              schema:
                $ref: '#/components/schemas/Demographics'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Demographics Advanced Endpoint
      tags:
      - Demographics Service
      x-contentType: application/json
      x-accepts: application/json
  /demographics-segmentation/v1/segmentation/bylocation:
    get:
      description: Provides the segmentation details around a specified location.
        GeoLife 'segmentation bylocation' service accepts longitude and latitude as
        an input to return the lifestyle characteristics of households in terms of
        their family status, children characteristics, income behaviors, financial
        preferences and interests.
      operationId: getSegmentationByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segmentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Segmentation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Segmentation By Location.
      tags:
      - Demographics Service
      x-accepts: application/json
  /demographics-segmentation/v1/segmentation/byaddress:
    get:
      description: Provides the segmentation details around a specified address. GeoLife
        'Segmentation by Address' service accepts address as an input to return the
        lifestyle characteristics of households in terms of their family status, children
        characteristics, income behaviors, financial preferences and interests.
      operationId: getSegmentationByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: 3 letter ISO code of the country to be searched.Allowed values
          USA,CAN,GBR,FRA,ITA,AUS,DEU.
        in: query
        name: country
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segmentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Segmentation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Segmentation By Address.
      tags:
      - Demographics Service
      x-accepts: application/json
  /demographics-segmentation/v1/demographics/bylocation:
    get:
      description: Provides the demographic details around a specified location. GeoLife
        'bylocation' service accepts longitude and latitude as an input to return
        a specific population segment's age group, ethnicity, income, purchasing behaviour,
        commuter patterns and more.
      operationId: getDemographicsByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Retrieves the sorted demographic data on the basis of pre-defined
          profiles that can display the top 3 or top 5 results (by location) either
          in ascending or descending order.Allowed values Top5Ascending,Top5Descending,Top3Ascending,Top3Descending
        in: query
        name: profile
        required: false
        schema:
          type: string
      - description: The 'filter' parameter retrieves the demographic data based upon
          specified input themes.
        in: query
        name: filter
        required: false
        schema:
          type: string
      - description: The 'valueFormat' parameter is applicable for few ranged variables
          where percent & count both are available and filter response based on the
          input value.
        in: query
        name: valueFormat
        required: false
        schema:
          type: string
      - description: The 'variableLevel' retrieves demographic facts in response based
          on the input value
        in: query
        name: variableLevel
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
            application/xml:
              schema:
                $ref: '#/components/schemas/Demographics'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Demographics By Location.
      tags:
      - Demographics Service
      x-accepts: application/json
  /demographics-segmentation/v1/demographics/byboundaryids:
    get:
      description: 'This endpoint will allow the user to request demographics details
        by census boundary id. Multiple comma separated boundary ids will be accepted. '
      operationId: getDemographicsByBoundaryIds
      parameters:
      - description: Accepts comma separated multiple boundary ids.
        in: query
        name: boundaryIds
        required: false
        schema:
          type: string
      - description: Applicable on ranged variables. Returns top sorted result based
          on the input value.
        in: query
        name: profile
        required: false
        schema:
          type: string
      - description: Accept the comma separated theme names and filter response based
          on value. Maximum 10 can be provided.
        in: query
        name: filter
        required: false
        schema:
          type: string
      - description: Applicable for few ranged variables where percent & count both
          are available and filter response based on the input value.
        in: query
        name: valueFormat
        required: false
        schema:
          type: string
      - description: Retrieves demographic facts in response based on the input value.
        in: query
        name: variableLevel
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
            application/xml:
              schema:
                $ref: '#/components/schemas/Demographics'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Demographics By Boundaryids.
      tags:
      - Demographics Service
      x-accepts: application/json
  /demographics-segmentation/v1/demographics/byaddress:
    get:
      description: Provides the demographic details around a specified address. GeoLife
        'byaddress' service accepts address as an input to return a specific population
        segment's age group, ethnicity, income, purchasing behaviour, commuter patterns
        and more.
      operationId: getDemographicsByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: 3 letter ISO code of the country to be searched.Allowed values
          USA,CAN,GBR,AUS.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Retrieves the sorted demographic data on the basis of pre-defined
          profiles that can display the top 3 or top 5 results (by location) either
          in ascending or descending order.Allowed values Top5Ascending,Top5Descending,Top3Ascending,Top3Descending
        in: query
        name: profile
        required: false
        schema:
          type: string
      - description: The 'filter' parameter retrieves the demographic data based upon
          specified input themes.
        in: query
        name: filter
        required: false
        schema:
          type: string
      - description: The 'valueFormat' parameter is applicable for few ranged variables
          where percent & count both are available and filter response based on the
          input value.
        in: query
        name: valueFormat
        required: false
        schema:
          type: string
      - description: The 'variableLevel' retrieves demographic facts in response based
          on the input value
        in: query
        name: variableLevel
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
            application/xml:
              schema:
                $ref: '#/components/schemas/Demographics'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Demographics By Address.
      tags:
      - Demographics Service
      x-accepts: application/json
  /demographics-segmentation/v1/basic/demographics:
    get:
      description: 'Demographics Basic Endpoint will return the aggregated values
        of the selected demographics variables of the regions falling inside the search
        radius. All the intersecting demographic boundaries will be snapped completely
        and user will have option to request these boundaries in response.  '
      operationId: getDemographicsBasic
      parameters:
      - description: Address to be searched
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Longitude of the location
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Radius within which demographics details are required. Max. value
          is 52800 Feet or 10 miles
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: 'Radius unit such as Feet, Kilometers, Miles or Meters '
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Travel Time based on ‘travelMode’ within which demographics details
          are required. Max. value is 1 hour.
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: minutes,hours,seconds,milliseconds. Default is meters.Default
          is minutes.
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Travel Distance based on ‘travelMode’ within which demographics
          details are required. Max. value is 10 miles.
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: feet,kilometers,miles,meters.  Default is feet.
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: Default is driving.
        in: query
        name: travelMode
        required: false
        schema:
          type: string
      - description: 3 digit ISO country code (Used in case address is mentioned).
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Applicable on ranged variables. Returns top sorted result based
          on the input value.
        in: query
        name: profile
        required: false
        schema:
          type: string
      - description: If Y, demographic boundaries are returned in response.
        in: query
        name: filter
        required: false
        schema:
          type: string
      - in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
            application/xml:
              schema:
                $ref: '#/components/schemas/Demographics'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Demographics Basic
      tags:
      - Demographics Service
      x-accepts: application/json
  /geocode/v1/{datapackBundle}/reverseGeocode:
    get:
      description: This service accepts location coordinate and returns an address.
      operationId: reverseGeocode
      parameters:
      - description: datapackBundle
        in: path
        name: datapackBundle
        required: true
        schema:
          enum:
          - premium
          - basic
          - advanced
          type: string
      - description: Longitude of the location.
        in: query
        name: x
        required: true
        schema:
          default: -105.240976
          type: string
      - description: Latitude of the location.
        in: query
        name: "y"
        required: true
        schema:
          default: "40.018301"
          type: string
      - description: Country name or ISO code.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Coordinate system to convert geometry to in format codespace:code.
        in: query
        name: coordSysName
        required: false
        schema:
          default: EPSG:4326
          type: string
      - description: Radius in which search is performed.
        in: query
        name: distance
        required: false
        schema:
          default: Radius in which search is performed.
          type: string
      - description: Unit of measurement.
        in: query
        name: distanceUnits
        required: false
        schema:
          default: METERS
          enum:
          - METERS
          - FEET
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Reverse Geocode(Basic/Premium/Advanced)
      tags:
      - Geocode Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for geocode service. It accepts a single
        address or a list of addresses and returns location coordinates
      operationId: reverseGeocodBatch
      parameters:
      - in: path
        name: datapackBundle
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReverseGeocodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReverseGeocodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Reverse Geocode
      tags:
      - Geocode Service
      x-contentType: application/json
      x-accepts: application/json
  /geocode/v1/{datapackBundle}/geocode:
    get:
      description: This service accepts an address and returns the location coordinates
        corresponding to that address. Premium offers the best accuracy and is a high
        precision geocoder leveraging Master Location Data - geocodes to Street or
        building level. Advanced offers advanced accuracy and geocodes to Street level.Basic
        offering will geocode to a Place or Postal level. Good accuracy.
      operationId: geocode
      parameters:
      - description: datapackBundle
        in: path
        name: datapackBundle
        required: true
        schema:
          enum:
          - premium
          - basic
          - advanced
          type: string
      - description: Country name or ISO code.
        in: query
        name: country
        required: false
        schema:
          default: USA
          type: string
      - description: Single line input, treated as collection of field elements.
        in: query
        name: mainAddress
        required: false
        schema:
          default: 4750 Walnut St., Boulder CO, 80301
          type: string
      - description: Match modes determine the leniency used to make a match between
          the input address and the reference data.
        in: query
        name: matchMode
        required: false
        schema:
          default: Standard
          enum:
          - Exact
          - Standard
          - Relaxed
          - Custom
          - Interactive(USA Only)
          - CASS(USA Only)
          type: string
      - description: Specifies whether to attempt to determine a geographic region
          centroid when an address-level geocode cannot be determined.
        in: query
        name: fallbackGeo
        required: false
        schema:
          default: "true"
          type: string
      - description: Specifies whether to attempt to determine a post code centroid
          when an address-level geocode cannot be determined.
        in: query
        name: fallbackPostal
        required: false
        schema:
          default: "true"
          type: string
      - description: The maximum number of candidates to return.
        in: query
        name: maxCands
        required: false
        schema:
          default: "1"
          type: string
      - description: Indicates the offset distance from the street segments to use
          in street-level geocoding.
        in: query
        name: streetOffset
        required: false
        schema:
          default: "7"
          type: string
      - description: Specifies the unit of measurement for the street offset.
        in: query
        name: streetOffsetUnits
        required: false
        schema:
          default: METERS
          enum:
          - METERS
          - FEET
          type: string
      - description: Specifies the distance to offset the street end points in street-level
          matching.
        in: query
        name: cornerOffset
        required: false
        schema:
          default: "7"
          type: string
      - description: Specifies the unit of measurement for the corner offset.
        in: query
        name: cornerOffsetUnits
        required: false
        schema:
          default: METERS
          enum:
          - METERS
          - FEET
          type: string
      - description: Specifies whether to Suppress accents and other diacritical marks.
        in: query
        name: removeAccentMarks
        required: false
        schema:
          default: "false"
          type: string
      - description: 'Specifies if Delivery Point Validation is required. Note: This
          parameter is only applicable for USA addresses.'
        in: query
        name: findDPV
        required: false
        schema:
          default: "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Forward Geocode(Basic/Premium/Advanced)
      tags:
      - Geocode Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for geocode service. It accepts a single
        address or a list of addresses and returns location coordinates
      operationId: geocodeBatch
      parameters:
      - in: path
        name: datapackBundle
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeocodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Forward Geocode
      tags:
      - Geocode Service
      x-contentType: application/json
      x-accepts: application/json
  /geocode/v1/keylookup:
    get:
      description: This service accepts a PreciselyID and returns the corresponding
        address associated with that PreciselyID.
      operationId: keyLookup
      parameters:
      - description: PreciselyID which maps to a unique address.
        in: query
        name: key
        required: true
        schema:
          type: string
      - description: Specifies the key type - PreciselyID and GNAF_PID for Aus.
        in: query
        name: type
        required: true
        schema:
          type: string
      - description: 3 letter ISO code of the country to be searched.
        in: query
        name: country
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Key Lookup
      tags:
      - Geocode Service
      x-accepts: application/json
    post:
      description: This service accepts batches of PreciselyID's and returns the corresponding
        address associated with those PreciselyID's.
      operationId: keyLookupBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyLookupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeocodeServiceResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Key Lookup
      tags:
      - Geocode Service
      x-contentType: application/json
      x-accepts: application/json
  /geocode/v1/key/byaddress:
    get:
      description: This service accepts an address and returns the corresponding PreciselyID
      operationId: getPBKey
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: 3 letter ISO code of the country to be searched.
        in: query
        name: country
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PBKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PBKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get PreciselyID By Address
      tags:
      - Geocode Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'PreciselyID By Address' service.
        It accepts a single address or a list of addresses and returns the corresponding
        PreciselyID.
      operationId: getPBKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PBKeyAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PBKeyResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PBKeyResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post PreciselyID By Address
      tags:
      - Geocode Service
      x-contentType: application/json
      x-accepts: application/json
  /localtax/v1/taxrate/{taxRateTypeId}/bylocation:
    get:
      description: Retrieves tax rates applicable to a specific location. This service
        accepts longitude, latitude and supported tax rate type as inputs to retrieve
        applicable tax rates.
      operationId: getSpecificTaxRateByLocation
      parameters:
      - description: The tax rate id
        in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      - description: Latitude of the location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Longitude of the location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Taxrate By Location
      tags:
      - Local Tax Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Taxrate By Location' service. It
        accepts a single location coordinate or a list of location coordinates and
        retrieve applicable tax rates.
      operationId: getBatchTaxRateByLocation
      parameters:
      - in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRateLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/taxResponses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Taxrate By Location
      tags:
      - Local Tax Service
      x-contentType: application/json
      x-accepts: application/json
  /localtax/v1/taxrate/{taxRateTypeId}/byaddress:
    get:
      description: Retrieves tax rates applicable to a specific address. This service
        accepts address and supported tax rate type as inputs to retrieve applicable
        tax rates.
      operationId: getSpecificTaxRateByAddress
      parameters:
      - description: The tax rate id
        in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Taxrate By Address
      tags:
      - Local Tax Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Taxrate By Address' service. It accepts
        a single address or a list of addresses and retrieve applicable tax rates.
      operationId: getBatchTaxRateByAddress
      parameters:
      - in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRateAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/taxResponses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Taxrate By Address
      tags:
      - Local Tax Service
      x-contentType: application/json
      x-accepts: application/json
  /localtax/v1/taxdistrict/ipd/byaddress:
    get:
      description: Retrieves IPD (Insurance Premium District) tax rates applicable
        to a specific address. This service accepts address as input and returns one
        or many IPD tax rate details for that region in which address falls.
      operationId: getIPDTaxByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Y or N (default is N) - Returns Latitude Longitude Fields.
        in: query
        name: returnLatLongFields
        required: false
        schema:
          type: string
      - description: (default is Decimal) - Returns Desired Latitude Longitude Format.
        in: query
        name: latLongFormat
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxDistrictResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxDistrictResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get IPD Tax by Address
      tags:
      - Local Tax Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'IPD Tax rates By Address'. It accepts
        multiple addresses as parameters along with geocoding and matching preferences
        and returns one or many IPD tax rate details for each address.
      operationId: getIPDTaxByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPDTaxByAddressBatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxDistrictResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxDistrictResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get IPD Tax for batch requests.
      tags:
      - Local Tax Service
      x-contentType: application/json
      x-accepts: application/json
  /localtax/v1/tax/{taxRateTypeId}/bylocation:
    get:
      description: This service calculates and returns tax applicable at a specific
        location. Longitude, latitude, purchase amount and supported tax rate type
        are inputs to the service.
      operationId: getSpecificTaxByLocation
      parameters:
      - description: The tax rate id
        in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      - description: Latitude of the location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Longitude of the location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: The amount on which tax to be calculated
        in: query
        name: purchaseAmount
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Tax By Location
      tags:
      - Local Tax Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Tax By Location' service. It accepts
        a single location coordinate, purchase amount or a list of location coordinates,
        purchase amounts and retrieve applicable tax.
      operationId: getBatchTaxByLocation
      parameters:
      - in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/taxResponses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Tax By Location
      tags:
      - Local Tax Service
      x-contentType: application/json
      x-accepts: application/json
  /localtax/v1/tax/{taxRateTypeId}/byaddress:
    get:
      description: This service calculates and returns taxes applicable at a specific
        address. Address, purchase amount and supported tax rate type are inputs to
        the service.
      operationId: getSpecificTaxByAddress
      parameters:
      - description: The tax rate id
        in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: The amount on which tax to be calculated
        in: query
        name: purchaseAmount
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Tax By Address
      tags:
      - Local Tax Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Tax By Address' service. It accepts
        a single address, purchase amount or a list of addresses, purchase amounts
        and retrieve applicable taxes.
      operationId: getBatchTaxByAddress
      parameters:
      - in: path
        name: taxRateTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/taxResponses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Tax By Address
      tags:
      - Local Tax Service
      x-contentType: application/json
      x-accepts: application/json
  /neighborhoods/v1/place/bylocation:
    get:
      description: Identifies and retrieves the nearest neighborhood around a specific
        location. This service accepts latitude & longitude as input and returns a
        place name.
      operationId: getPlaceByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Numeric code of geographic hierarchy level which is classified
          at six levels.Allowed values 1,2,3,4,5,6
        in: query
        name: levelHint
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeighborhoodsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/NeighborhoodsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Place By Location.
      tags:
      - Neighborhoods Service.
      x-accepts: application/json
  /places/v1/poicount:
    post:
      description: Accepts a user-defined boundary as input and returns the Count
        number of POIs within the boundary. Additionally, user can request the count
        of filtered POIs by name, type, standard industrial classifications and category
        codes within the given polygon.
      operationId: getPOIsCount
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoiCountRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PoiCountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poiCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/poiCount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Points Of Interest Count
      tags:
      - Places Service.
      x-contentType: application/json
      x-accepts: application/json
  /places/v1/poi/byboundary:
    post:
      description: Accepts a user-defined boundary as input and returns all Points
        of Interest within the boundary. Additionally, user can filter the response
        by name, type, standard industrial classifications and category codes.
      operationId: getPOIsByGeometry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POIByGeometryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Points Of Interest By Boundary
      tags:
      - Places Service.
      x-contentType: application/json
      x-accepts: application/json
  /places/v1/poi/{id}:
    get:
      description: This service returns complete details of a chosen point of interest
        by an identifier. The identifier could be selected from Autocomplete API response.
      operationId: getPOIById
      parameters:
      - description: POI unique Identifier.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poi'
            application/xml:
              schema:
                $ref: '#/components/schemas/poi'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Points Of Interest Details By Id
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/poi/bylocation:
    get:
      description: This service accepts latitude/longitude as input and returns nearby
        points-of-interest places around that location. Additional input features
        include retrieving data by name, type, standard industrial classifications
        and category codes, as well as geographic filtering by radius, travel times
        and travel distances. Response features include JSON/XML as well as CSV download
      operationId: getPOIsByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Specifies the name of the place (POI) to be searched. Also performs
          search on partially specified names. It requires minimum 3 characters to
          search.
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Filters the points of interest (POIs) by place types.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The category codes are unique 4, 6, or 11 digit numeric values.
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The SIC codes are unique 4 or 8 digit numerical values
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Maximum number of POIs that can be retrieved
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Radius range within which search is performed.
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Radius unit such as Feet, Kilometers, Miles or Meters (default).
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Travel time within which search is performed (POIs which can
          be reached within travel time).
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: Travel time unit such as minutes (default), hours, seconds or
          milliseconds.
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Travel distance within which search is performed (POIs which
          can be reached within travel distance).
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Travel distance unit such as Feet (default), Kilometers, Miles
          or Meters.
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: travelMode
        required: false
        schema:
          type: string
      - description: Whether to sort the results based on relevance (best match) or
          by nearest distance from input location.
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Whether to allow fuzzy seacrh on name input.
        in: query
        name: fuzzyOnName
        required: false
        schema:
          type: string
      - description: Specifies the page number of results where page size is the value
          of maxCandidates input in request.
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Determine the leniency used to make a match between the input
          name and the reference data.
        in: query
        name: matchMode
        required: false
        schema:
          type: string
      - description: Specifies the field for the Specific Match Mode.
        in: query
        name: specificMatchOn
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get POIs By Location.
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/poi/byarea:
    get:
      description: This service accepts city or postcode (alongwith country) and returns
        points-of-interest places within a city or postcode. Additional input features
        include retrieving data by name, type, standard industrial classifications
        and category codes, as well as geographic filtering by radius, travel times
        and travel distances. Response features include JSON/XML as well as CSV download.
      operationId: getPOIsByArea
      parameters:
      - description: Specifies the largest geographical area, typically a state or
          province
        in: query
        name: areaName1
        required: false
        schema:
          type: string
      - description: Specifies a city or town name
        in: query
        name: areaName3
        required: false
        schema:
          type: string
      - description: Specifies the postcode(ZIP code) in the appropriate format for
          the country
        in: query
        name: postcode1
        required: false
        schema:
          type: string
      - description: Specifies the postcode(ZIP code) extension
        in: query
        name: postcode2
        required: false
        schema:
          type: string
      - description: Country ISO code
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Specifies the name of the place (POI) to be searched. Also performs
          search on partially specified names. It requires minimum 3 characters to
          search
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Filters the points of interest (POIs) by place types
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The category codes are unique 4, 6, or 11 digit numeric values
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The SIC codes are unique 4 or 8 digit numerical values
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Maximum number of POIs that can be retrieved
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Whether to allow fuzzy seacrh on name input
        in: query
        name: fuzzyOnName
        required: false
        schema:
          type: string
      - description: Specifies the page number of results where page size is the value
          of maxCandidates input in request
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Determine the leniency used to make a match between the input
          name and the reference data
        in: query
        name: matchMode
        required: false
        schema:
          type: string
      - description: Specifies the field for the Specific Match Mode
        in: query
        name: specificMatchOn
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: GET Points Of Interest By Area.
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/poi/byaddress:
    get:
      description: This service accepts an address as input and returns nearby points-of-interest
        places around that address. Additional input features include retrieving data
        by name, type, standard industrial classifications and category codes, as
        well as geographic filtering by radius, travel times and travel distances.
        Response features include JSON/XML as well as CSV download.
      operationId: getPOIsByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Country ISO code.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Specifies the name of the place (POI) to be searched. Also performs
          search on partially specified names. It requires minimum 3 characters to
          search.
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Filters the points of interest (POIs) by place types.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The category codes are unique 4, 6, or 11 digit numeric values.
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The SIC codes are unique 4 or 8 digit numerical values
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Maximum number of POIs that can be retrieved
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Radius range within which search is performed.
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Radius unit such as Feet, Kilometers, Miles or Meters (default).
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Travel time within which search is performed (POIs which can
          be reached within travel time).
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: Travel time unit such as minutes (default), hours, seconds or
          milliseconds.
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Travel distance within which search is performed (POIs which
          can be reached within travel distance).
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Travel distance unit such as Feet (default), Kilometers, Miles
          or Meters.
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: travelMode
        required: false
        schema:
          default: driving
          type: string
      - description: Whether to sort the results based on relevance (best match) or
          by nearest distance from input location.
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Whether to allow fuzzy seacrh on name input.
        in: query
        name: fuzzyOnName
        required: false
        schema:
          type: string
      - description: Specifies the page number of results where page size is the value
          of maxCandidates input in request.
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Determine the leniency used to make a match between the input
          name and the reference data.
        in: query
        name: matchMode
        required: false
        schema:
          type: string
      - description: Specifies the field for the Specific Match Mode.
        in: query
        name: specificMatchOn
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get POIs By Address.
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/poi/autocomplete:
    get:
      description: This service accepts partial text input and returns matching points
        of interest, sorted by relevance or distance.
      operationId: poisAutocomplete
      parameters:
      - in: header
        name: X-Forwarded-For
        required: false
        schema:
          type: string
      - description: Longitude of the location.
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Free text which will accept a multi-word string. Combination
          of POI name and address is possible.
        in: query
        name: searchText
        required: false
        schema:
          type: string
      - in: query
        name: searchOnNameOnly
        required: false
        schema:
          default: "N"
          type: string
      - description: Radius range within which search is performed.
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Radius unit such as Feet, Kilometers, Miles or Meters (default).
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Travel time within which search is performed (POIs which can
          be reached within travel time).
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: Travel time unit such as minutes (default), hours, seconds or
          milliseconds.
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Travel distance within which search is performed (POIs which
          can be reached within travel distance).
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Travel distance unit such as Feet (default), Kilometers, Miles
          or Meters.
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: travelMode
        required: false
        schema:
          default: driving
          type: string
      - description: Country ISO code.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Specifies the largest geographical area, typically a state or
          province.
        in: query
        name: areaName1
        required: false
        schema:
          type: string
      - description: Specifies a city or town name.
        in: query
        name: areaName3
        required: false
        schema:
          type: string
      - description: Specifies the postcode(ZIP code) in the appropriate format for
          the country.
        in: query
        name: postcode1
        required: false
        schema:
          type: string
      - description: Specifies the postcode(ZIP code) extension.
        in: query
        name: postcode2
        required: false
        schema:
          type: string
      - description: IP address which will be used to auto detect the location in
          order to serve contextually relevant results.
        in: query
        name: ipAddress
        required: false
        schema:
          type: string
      - description: Specifies whether to detect client's location using IP address.
          If IP address(below) is not provided and autoDetectLocation is set 'True'
          then IP address will be picked from HTTP request automatically.
        in: query
        name: autoDetectLocation
        required: false
        schema:
          type: string
      - description: Filters the points of interest (POIs) by place types.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The category codes are unique 4, 6, or 11 digit numeric values.
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Acts as a filter to narrow down and refine POI search results.
          The SIC codes are unique 4 or 8 digit numerical values.
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Maximum number of POIs that can be retrieved.
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: sortBy
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Determine the leniency used to make a match between the input
          name and the reference data.
        in: query
        name: matchMode
        required: false
        schema:
          type: string
      - description: Specifies the field for the Specific Match Mode.
        in: query
        name: specificMatchOn
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Points Of Interest Autocomplete
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/metadata/sic:
    get:
      description: This service returns a list of standard industrial classification
        codes & associated metadata which can then be used as inputs for querying
        the Points of Interest By Address or Location methods listed above.
      operationId: getSICMetadata
      parameters:
      - description: 4 or 8 digits SIC code to filter the response.
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: 1 or 2.
        in: query
        name: level
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get SIC Metadata
      tags:
      - Places Service.
      x-accepts: application/json
  /places/v1/metadata/category:
    get:
      description: This service returns a list of Category codes & associated metadata
        which can then be used as inputs for querying the Points of Interest By Address
        or Location methods listed above.
      operationId: getCategoryCodeMetadata
      parameters:
      - description: 4, 6, or 11 digits category code to filter the response.
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: 1, 2, or 3.
        in: query
        name: level
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Category Code Metadata.
      tags:
      - Places Service.
      x-accepts: application/json
  /property/v2/attributes/byaddress:
    get:
      description: GetPropertyAttributesbyAddress Endpoint will take address as an
        input and will return key property attributes in response. Optionally user
        will have the option to filter the attributes and will pay for only returned
        attributes.
      operationId: getPropertyAttributesByAddress
      parameters:
      - description: free form address text
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Case-insensitive comma separated values of property attributes.
          Response will contain only the input attributes.
        in: query
        name: attributes
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: PropertyV2 Attributes By Address.
      tags:
      - Property Information Service
      x-accepts: application/json
    post:
      description: GetPropertyAttributesbyAddressBatch Endpoint will take the list
        of addresses as an input and will return key property attributes for the given
        addresses in response. Optionally user will have the option to filter the
        attributes and will pay for only returned attributes.
      operationId: getPropertyAttributesByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyInfoAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyInfoResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyInfoResponses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: PropertyV2 Attributes By Address Batch.
      tags:
      - Property Information Service
      x-contentType: application/json
      x-accepts: application/json
  /911/v1/psap/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns contact details
        for local Public Safety Answering Points (PSAP). 911/PSAP accepts a location
        coordinate and returns the relevant PSAP address and contact details including
        dispatch name, phone number, county name, coverage, contact person's details,
        site details and mailing address.
      operationId: getPSAPByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PSAPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PSAPResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: PSAP By Location.
      tags:
      - PSAP/911 Service
      x-accepts: application/json
  /911/v1/psap/byaddress:
    get:
      description: Accepts addresses as input and Returns contact details for local
        Public Safety Answering Points (PSAP). 911/PSAP accepts an address as input
        and returns the relevant PSAP address and contact details including agency
        name, phone number, county name, coverage, contact person's details, site
        details and mailing address.
      operationId: getPSAPByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PSAPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PSAPResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: PSAP By Address.
      tags:
      - PSAP/911 Service
      x-accepts: application/json
  /911/v1/ahj-psap/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns contact details
        for Authorities Having Jurisdiction (AHJ) on-behalf-of local Public Safety
        Answering Points (PSAP). 911/PSAP accepts a location coordinate and returns
        PSAP contact data plus contact data for an AHJ to communicate directly with
        a PSAP. Details include agency name, phone number, city name, coverage, contact
        person's details, site details and mailing addresses for EMS, Fire, and Police
        PSAP contacts.
      operationId: getAHJPlusPSAPByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AHJPlusPSAPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AHJPlusPSAPResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: AHJ & PSAP By Location
      tags:
      - PSAP/911 Service
      x-accepts: application/json
  /911/v1/ahj-psap/byaddress:
    get:
      description: Accepts addresses as input and Returns contact details for Authorities
        Having Jurisdiction (AHJ) on-behalf-of local Public Safety Answering Points
        (PSAP). 911/PSAP accepts an address and returns PSAP contact data plus contact
        data for an AHJ to communicate directly with a PSAP. Details include agency
        name, phone number, city name, coverage, contact person's details, site details
        and mailing addresses for EMS, Fire, and Police PSAP contacts.
      operationId: getAHJPlusPSAPByAddress
      parameters:
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AHJPlusPSAPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AHJPlusPSAPResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: AHJ & PSAP By Address.
      tags:
      - PSAP/911 Service
      x-accepts: application/json
  /risks/v1/shoreline/distancetofloodhazard/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns the distance
        from nearest water bodies along with body name and location.
      operationId: getDistanceToCoastByLocation
      parameters:
      - description: The longitude of the location
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: The latitude of the location
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: This specifies the value of maxCandidates
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: This specifies the value of waterBodyType
        in: query
        name: waterBodyType
        required: false
        schema:
          type: string
      - description: This specifies the search distance
        in: query
        name: searchDistance
        required: false
        schema:
          type: string
      - description: miles (default value),feet, kilometers, meters
        in: query
        name: searchDistanceUnit
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterBodyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WaterBodyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Distance To Flood Hazard By Location
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Distance To Flood Hazard By Location'
        service. It accepts a single location coordinate or a list of location coordinates
        and retrieve the distance from nearest water bodies along with body name and
        location.
      operationId: getDistanceToCoastByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistanceToFloodHazardLocationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/DistanceToFloodHazardLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistanceToFloodHazardResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DistanceToFloodHazardResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Distance To Flood Hazard By Location
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/shoreline/distancetofloodhazard/byaddress:
    get:
      description: Accepts addresses as input and Returns the distance from nearest
        water bodies along with body name and location.
      operationId: getDistanceToCoastByAddress
      parameters:
      - description: The address of the location
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: This specifies the value of maxCandidates
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: This specifies the value of waterBodyType
        in: query
        name: waterBodyType
        required: false
        schema:
          type: string
      - description: This specifies the search distance
        in: query
        name: searchDistance
        required: false
        schema:
          type: string
      - description: miles (default value),feet, kilometers, meters
        in: query
        name: searchDistanceUnit
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterBodyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WaterBodyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Distance To Flood Hazard By Address
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Distance To Flood Hazard By Address'
        service. It accepts a single address or a list of addresses and retrieve the
        distance from nearest water bodies along with body name and location.
      operationId: getDistanceToCoastByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistanceToFloodHazardAddressRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/DistanceToFloodHazardAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistanceToFloodHazardResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DistanceToFloodHazardResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Distance To Flood Hazard By Address
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/flood/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns flood risk data
        for flood zones and base flood elevation values.
      operationId: getFloodRiskByLocation
      parameters:
      - description: Longitude of Location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of Location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Flag to return zone description
        in: query
        name: includeZoneDesc
        required: false
        schema:
          type: string
      - description: Flag to return Geometry
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FloodRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Flood Risk By Location
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Flood Risk By Location' service.
        It accepts a single location coordinate or a list of location coordinates
        and retrieve flood risk data for flood zones and base flood elevation values.
      operationId: getFloodRiskByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodRiskByLocationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/FloodRiskByLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FloodRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Flood Risk By Location
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/flood/byaddress:
    get:
      description: Accepts addresses as input and Returns flood risk data for flood
        zones and base flood elevation values.
      operationId: getFloodRiskByAddress
      parameters:
      - description: Free text Address
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Flag to return zone description
        in: query
        name: includeZoneDesc
        required: false
        schema:
          type: string
      - description: Flag to return Geometry
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FloodRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Flood Risk By Address
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Flood Risk By Address' service. It
        accepts a single address or a list of addresses and retrieve flood risk data
        for flood zones and base flood elevation values.
      operationId: getFloodRiskByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodRiskByAddressRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/FloodRiskByAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FloodRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Flood Risk By Address
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/fire/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns fire risk data
        by risk types.
      operationId: getFireRiskByLocation
      parameters:
      - description: Longitude of Location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of Location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Flag to return Geometry default is N
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FireRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Fire Risk By Location
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Fire Risk By Location' service. It
        accepts a single location coordinate or a list of location coordinates and
        retrieve fire risk data by risk types.
      operationId: getFireRiskByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FireRiskByLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FireRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Fire Risk By Location
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/fire/byaddress:
    get:
      description: Accepts addresses as input and Returns fire risk data by risk types.
      operationId: getFireRiskByAddress
      parameters:
      - description: Free form address text
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Flag to return Geometry default is N
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FireRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Fire Risk By Address
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Fire Risk By Address' service. It
        accepts a single address or a list of addresses and retrieve fire risk data
        by risk types.
      operationId: getFireRiskByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FireRiskByAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FireRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Fire Risk By Address
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/earthquake/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns counts of earthquakes
        for various richter measurements and values.
      operationId: getEarthquakeRiskByLocation
      parameters:
      - description: The longitude of the location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: The latitude of the location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: all (default value), R0, R1, R2, R3, R4, R5, R6, R7, R0_GE, R1_GE,
          R2_GE, R3_GE, R4_GE, R5_GE, R6_GE, R7_GE
        in: query
        name: richterValue
        required: false
        schema:
          type: string
      - description: Y or N (default is N) - if it is Y, then geometry will be part
          of response
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Earthquake Risk By Location
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Earthquake Risk By Location' service.
        It accepts a single location coordinate or a list of location coordinates
        and retrieve counts of earthquakes for various richter measurements and values.
      operationId: getEarthquakeRiskByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarthquakeRiskByLocationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EarthquakeRiskByLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Earthquake Risk By Location
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/earthquake/byaddress:
    get:
      description: Accepts addresses as input and Returns counts of earthquakes for
        various richter measurements and values.
      operationId: getEarthquakeRiskByAddress
      parameters:
      - description: free form address text
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: all (default value), R0, R1, R2, R3, R4, R5, R6, R7, R0_GE, R1_GE,
          R2_GE, R3_GE, R4_GE, R5_GE, R6_GE, R7_GE
        in: query
        name: richterValue
        required: false
        schema:
          type: string
      - description: Y or N (default is N) - if it is Y, then geometry will be part
          of response
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Earthquake Risk By Address
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Earthquake Risk By Address' service.
        It accepts a single address or a list of addresses and retrieve counts of
        earthquakes for various richter measurements and values.
      operationId: getEarthquakeRiskByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarthquakeRiskByAddressRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EarthquakeRiskByAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarthquakeRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Earthquake Risk By Address
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/crime/bylocation:
    get:
      description: Accepts latitude/longitude as input and returns and Returns local
        crime indexes.
      operationId: getCrimeRiskByLocation
      parameters:
      - description: The longitude of the location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: The latitude of the location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: this is crime type; valid values are following 11 crime types
          with 'all' as default (more than one can also be given as comma separated
          types)
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Y or N (default is N) - if it is Y, then geometry will be part
          of response
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Crime Risk By  Location
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Crime Risk By Location' service.
        It accepts a single location coordinate or a list of location coordinates
        and retrieve local crime indexes.
      operationId: getCrimeRiskByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrimeRiskByLocationBatchRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CrimeRiskByLocationBatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Crime Risk By Location
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/crime/byaddress:
    get:
      description: Accepts addresses as input and Returns local crime indexes.
      operationId: getCrimeRiskByAddress
      parameters:
      - description: free form address text
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: this is crime type; valid values are following 11 crime types
          with 'all' as default (more than one can also be given as comma separated
          types)
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Y or N (default is N) - if it is Y, then geometry will be part
          of response
        in: query
        name: includeGeometry
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Crime Risk By Address
      tags:
      - Risks Service
      x-accepts: application/json
    post:
      description: This is a Batch offering for 'Crime Risk By Address' service. It
        accepts a single address or a list of addresses and retrieve local crime indexes.
      operationId: getCrimeRiskByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrimeRiskByAddressBatchRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CrimeRiskByAddressBatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/CrimeRiskResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Post Crime Risk By Address
      tags:
      - Risks Service
      x-contentType: application/json
      x-accepts: application/json
  /risks/v1/firestation/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns nearest fire
        stations.
      operationId: getFireStationByLocation
      parameters:
      - description: Longitude of Location
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of Location
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Specifies the maximum number of fire stations that this service
          retrieves. The default value is 3 and maximum value is 5. The retrieved
          results are traveldistance sorted from the input location.
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Max travel time from input location to fire station. Maximum
          allowed is 2 hours
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: minutes (default), hours, seconds, milliseconds
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Max travel distance from input location to fire station. Maximum
          allowed is 50 miles
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Feet (default), Kilometers, Miles, Meters
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: time (default), distance
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Historic traffic time slab
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fireStations'
            application/xml:
              schema:
                $ref: '#/components/schemas/fireStations'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Fire Station By Location
      tags:
      - Risks Service
      x-accepts: application/json
  /risks/v1/firestation/byaddress:
    get:
      description: Accepts addresses as input and Returns nearest fire stations.
      operationId: getFireStationByAddress
      parameters:
      - description: Free Address
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Specifies the maximum number of fire stations that this service
          retrieves. The default value is 3 and maximum value is 5. The retrieved
          results are traveldistance sorted from the input location.
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Max travel time from input location to fire station. Maximum
          allowed is 2 hours
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: minutes (default), hours, seconds, milliseconds
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Max travel distance from input location to fire station. Maximum
          allowed is 50 miles
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Feet (default), Kilometers, Miles, Meters
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: time (default), distance
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Historic traffic time slab
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fireStations'
            application/xml:
              schema:
                $ref: '#/components/schemas/fireStations'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Fire Station By Address
      tags:
      - Risks Service
      x-accepts: application/json
  /risks/v1/firehistory:
    get:
      description: Accepts postcode as input and Returns fire event details for a
        particular postcode.
      operationId: getFireHistory
      parameters:
      - description: 5 digit Postal code to search
        in: query
        name: postCode
        required: true
        schema:
          type: string
      - description: Start time in milliseconds(UTC)
        in: query
        name: startDate
        required: false
        schema:
          type: string
      - description: End time in milliseconds(UTC)
        in: query
        name: endDate
        required: false
        schema:
          type: string
      - description: Maximum response events
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireHistory'
            application/xml:
              schema:
                $ref: '#/components/schemas/FireHistory'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Fire History
      tags:
      - Risks Service
      x-accepts: application/json
  /risks/v1/earthquakehistory:
    get:
      description: Accepts postcode as input and Returns historical earthquake details
        for a particular postcode.
      operationId: getEarthquakeHistory
      parameters:
      - description: 5 digit Postal code to search
        in: query
        name: postCode
        required: true
        schema:
          type: string
      - description: Start time in milliseconds(UTC)
        in: query
        name: startDate
        required: false
        schema:
          type: string
      - description: End time in milliseconds(UTC)
        in: query
        name: endDate
        required: false
        schema:
          type: string
      - description: Minimum richter scale magnitude
        in: query
        name: minMagnitude
        required: false
        schema:
          type: string
      - description: Maximum Richter scale magnitude
        in: query
        name: maxMagnitude
        required: false
        schema:
          type: string
      - description: Maximum response events
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/earthquakeHistory'
            application/xml:
              schema:
                $ref: '#/components/schemas/earthquakeHistory'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Earthquake History
      tags:
      - Risks Service
      x-accepts: application/json
  /routing/v1/travelcostmatrix/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns travel distances
        and times for multiple origins to multiple destinations by various travel
        modes.
      operationId: getTravelCostMatrixByLocation
      parameters:
      - description: The address to be searched.
        in: query
        name: startPoints
        required: false
        schema:
          type: string
      - description: The address to be searched.
        in: query
        name: endPoints
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          default: driving
          type: string
      - description: Specifies whether routes should be optimized by time or distance.
        in: query
        name: optimizeBy
        required: false
        schema:
          default: time
          type: string
      - description: Specifies whether distance needs to be returned in response.
        in: query
        name: returnDistance
        required: false
        schema:
          default: "true"
          type: string
      - description: Specifies the desired coordinate system of returned routes.
        in: query
        name: destinationSrs
        required: false
        schema:
          default: epsg:4326
          type: string
      - description: Return Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: distanceUnit
        required: false
        schema:
          default: m
          type: string
      - description: Specifies whether time needs to be returned in response.
        in: query
        name: returnTime
        required: false
        schema:
          default: "true"
          type: string
      - description: Return time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond).
        in: query
        name: timeUnit
        required: false
        schema:
          default: min
          type: string
      - description: Whether to include all roads in routes calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether to return only the optimized route for each
          start and end point combination.
        in: query
        name: returnOptimalRoutesOnly
        required: false
        schema:
          default: "true"
          type: string
      - description: Specifies whether routing calculation uses the historic traffic
          speeds.
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          default: None
          type: string
      - description: This parameter will enable/disable CVR (Commercial Vehicle Restrictions)
          capability in our APIs.
        in: query
        name: useCvr
        required: false
        schema:
          default: "N"
          type: string
      - description: Specifies that barriers will be removed when determining the
          route.
        in: query
        name: looseningBarrierRestrictions
        required: false
        schema:
          default: "Y"
          type: string
      - description: vehicle type.
        in: query
        name: vehicleType
        required: false
        schema:
          default: ALL
          type: string
      - description: Specifies the maximum weight of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: weight
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of weight eg. kg(kilogram), lb(pound), mt(metric ton),
          t(ton).
        in: query
        name: weightUnit
        required: false
        schema:
          default: kg
          type: string
      - description: Specifies the maximum height of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: height
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of height e.g m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: heightUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum length of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: length
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of length eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: lengthUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum width of a vehicle. Any vehicles over this
          value will be restricted when determining the route.
        in: query
        name: width
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of width eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: widthUnit
        required: false
        schema:
          default: ft
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelCostMatrixResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Cost Matrix By Location.
      tags:
      - Routing Service
      x-accepts: application/json
  /routing/v1/travelcostmatrix/byaddress:
    get:
      description: Accepts addresses as input and Returns travel distances and times
        for multiple origins to multiple destinations by various travel modes.
      operationId: getTravelCostMatrixByAddress
      parameters:
      - description: Start locations in text based addresses.
        in: query
        name: startAddresses
        required: false
        schema:
          type: string
      - description: End locations in text based addresses.
        in: query
        name: endAddresses
        required: false
        schema:
          type: string
      - description: 3 Digit ISO country code.
        in: query
        name: country
        required: false
        schema:
          default: USA
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          default: driving
          type: string
      - description: Specifies whether routes should be optimized by time or distance.
        in: query
        name: optimizeBy
        required: false
        schema:
          default: time
          type: string
      - description: Specifies whether distance needs to be returned in response.
        in: query
        name: returnDistance
        required: false
        schema:
          default: "true"
          type: string
      - description: Specifies the desired coordinate system of returned routes.
        in: query
        name: destinationSrs
        required: false
        schema:
          type: string
      - description: Return Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: distanceUnit
        required: false
        schema:
          default: m
          type: string
      - description: Specifies whether time needs to be returned in response.
        in: query
        name: returnTime
        required: false
        schema:
          default: "true"
          type: string
      - description: Return time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond).
        in: query
        name: timeUnit
        required: false
        schema:
          default: min
          type: string
      - description: Whether to include all roads in routes calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether to return only the optimized route for each
          start and end point combination.
        in: query
        name: returnOptimalRoutesOnly
        required: false
        schema:
          default: "true"
          type: string
      - description: Specifies whether routing calculation uses the historic traffic
          speeds.
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          default: None
          type: string
      - description: This parameter will enable/disable CVR (Commercial Vehicle Restrictions)
          capability in our APIs.
        in: query
        name: useCvr
        required: false
        schema:
          default: "N"
          type: string
      - description: Specifies that barriers will be removed when determining the
          route.
        in: query
        name: looseningBarrierRestrictions
        required: false
        schema:
          default: "Y"
          type: string
      - description: vehicle type.
        in: query
        name: vehicleType
        required: false
        schema:
          default: ALL
          type: string
      - description: Specifies the maximum weight of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: weight
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of weight eg. kg(kilogram), lb(pound), mt(metric ton),
          t(ton).
        in: query
        name: weightUnit
        required: false
        schema:
          default: kg
          type: string
      - description: Specifies the maximum height of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: height
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of height e.g m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: heightUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum length of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: length
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of length eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: lengthUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum width of a vehicle. Any vehicles over this
          value will be restricted when determining the route.
        in: query
        name: width
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of width eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: widthUnit
        required: false
        schema:
          default: ft
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelCostMatrixResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Cost Matrix By Address.
      tags:
      - Routing Service
      x-accepts: application/json
  /routing/v1/route/bylocation:
    get:
      description: Accepts latitude & longitude as input and Returns Point-to-Point
        and Multi-Point travel directions by various travel modes.
      operationId: getRouteByLocation
      parameters:
      - description: Start Point in 'Lat,Long,coordsys' format.
        in: query
        name: startPoint
        required: false
        schema:
          type: string
      - description: End Point in 'Lat,Long,coordsys' format.
        in: query
        name: endPoint
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          default: driving
          type: string
      - description: List of intermediate points of the route.
        in: query
        name: intermediatePoints
        required: false
        schema:
          type: string
      - description: returnIntermediatePoints route.
        in: query
        name: returnIntermediatePoints
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether waypoints need to be optimized.
        in: query
        name: oip
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies the desired coordinate system of the returned route.
        in: query
        name: destinationSrs
        required: false
        schema:
          type: string
      - description: Specifies whether the route should be optimized by time or distance.
        in: query
        name: optimizeBy
        required: false
        schema:
          default: time
          type: string
      - description: Specifies whether distance needs to be part of direction information
          in response.
        in: query
        name: returnDistance
        required: false
        schema:
          default: "true"
          type: string
      - description: Return Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: distanceUnit
        required: false
        schema:
          default: m
          type: string
      - description: Specifies whether time needs to be part of direction information
          in response.
        in: query
        name: returnTime
        required: false
        schema:
          default: "true"
          type: string
      - description: Return time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond)
        in: query
        name: timeUnit
        required: false
        schema:
          default: min
          type: string
      - description: Specifies the language of travel directions.
        in: query
        name: language
        required: false
        schema:
          type: string
      - description: Specifies whether route directions text is to be returned in
          the response and in what detail (Normal or Terse).
        in: query
        name: directionsStyle
        required: false
        schema:
          default: None
          type: string
      - description: Specifies whether the route geometry is to be returned in the
          response and in what detail (End or All).
        in: query
        name: segmentGeometryStyle
        required: false
        schema:
          default: none
          type: string
      - description: If true then only the primary street name is returned otherwise
          all the names for a street.
        in: query
        name: primaryNameOnly
        required: false
        schema:
          default: "false"
          type: string
      - description: Whether to include all roads in route calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether routing calculation uses the historic traffic
          speeds.
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          default: None
          type: string
      - description: Whether to include geometry associated with each route instruction
          in response.
        in: query
        name: returnDirectionGeometry
        required: false
        schema:
          default: "false"
          type: string
      - description: This parameter will enable/disable CVR (Commercial Vehicle Restrictions)
          capability in our APIs.
        in: query
        name: useCvr
        required: false
        schema:
          default: "N"
          type: string
      - description: Specifies that barriers will be removed when determining the
          route.
        in: query
        name: looseningBarrierRestrictions
        required: false
        schema:
          default: "Y"
          type: string
      - description: vehicle type.
        in: query
        name: vehicleType
        required: false
        schema:
          default: ALL
          type: string
      - description: Specifies the maximum weight of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: weight
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of weight eg. kg(kilogram), lb(pound), mt(metric ton),
          t(ton).
        in: query
        name: weightUnit
        required: false
        schema:
          default: kg
          type: string
      - description: Specifies the maximum height of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: height
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of height e.g m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: heightUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum length of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: length
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of length eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: lengthUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum width of a vehicle. Any vehicles over this
          value will be restricted when determining the route.
        in: query
        name: width
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of width eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: widthUnit
        required: false
        schema:
          default: ft
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Gets Route By Location.
      tags:
      - Routing Service
      x-accepts: application/json
  /routing/v1/route/byaddress:
    get:
      description: Accepts addresses as input and Returns Point-to-Point and Multi-Point
        travel directions by various travel modes.
      operationId: getRouteByAddress
      parameters:
      - description: Starting address of the route.
        in: query
        name: startAddress
        required: false
        schema:
          type: string
      - description: Ending address of the route.
        in: query
        name: endAddress
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          default: driving
          type: string
      - description: Three digit ISO country code.
        in: query
        name: country
        required: false
        schema:
          default: USA
          type: string
      - description: List of intermediate points of the route.
        in: query
        name: intermediateAddresses
        required: false
        schema:
          type: string
      - description: return intermediate points
        in: query
        name: returnIntermediatePoints
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether waypoints need to be optimized.
        in: query
        name: oip
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies the desired coordinate system of the returned route.
        in: query
        name: destinationSrs
        required: false
        schema:
          type: string
      - description: Specifies whether the route should be optimized by time or distance.
        in: query
        name: optimizeBy
        required: false
        schema:
          default: time
          type: string
      - description: Specifies whether distance needs to be part of direction information
          in response.
        in: query
        name: returnDistance
        required: false
        schema:
          default: "true"
          type: string
      - description: Return Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: distanceUnit
        required: false
        schema:
          default: m
          type: string
      - description: Specifies whether time needs to be part of direction information
          in response.
        in: query
        name: returnTime
        required: false
        schema:
          default: "true"
          type: string
      - description: Return time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond)
        in: query
        name: timeUnit
        required: false
        schema:
          default: min
          type: string
      - description: Specifies the language of travel directions.
        in: query
        name: language
        required: false
        schema:
          type: string
      - description: Specifies whether route directions text is to be returned in
          the response and in what detail (Normal or Terse).
        in: query
        name: directionsStyle
        required: false
        schema:
          default: None
          type: string
      - description: Specifies whether the route geometry is to be returned in the
          response and in what detail (End or All).
        in: query
        name: segmentGeometryStyle
        required: false
        schema:
          default: none
          type: string
      - description: If true then only the primary street name is returned otherwise
          all the names for a street.
        in: query
        name: primaryNameOnly
        required: false
        schema:
          default: "false"
          type: string
      - description: Whether to include all roads in route calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "false"
          type: string
      - description: Specifies whether routing calculation uses the historic traffic
          speeds.
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          default: None
          type: string
      - description: Whether to include geometry associated with each route instruction
          in response.
        in: query
        name: returnDirectionGeometry
        required: false
        schema:
          default: "false"
          type: string
      - description: This parameter will enable/disable CVR (Commercial Vehicle Restrictions)
          capability in our APIs.
        in: query
        name: useCvr
        required: false
        schema:
          default: "N"
          type: string
      - description: Specifies that barriers will be removed when determining the
          route.
        in: query
        name: looseningBarrierRestrictions
        required: false
        schema:
          default: "Y"
          type: string
      - description: vehicle type.
        in: query
        name: vehicleType
        required: false
        schema:
          default: ALL
          type: string
      - description: Specifies the maximum weight of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: weight
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of weight eg. kg(kilogram), lb(pound), mt(metric ton),
          t(ton).
        in: query
        name: weightUnit
        required: false
        schema:
          default: kg
          type: string
      - description: Specifies the maximum height of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: height
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of height e.g m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: heightUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum length of a vehicle. Any vehicles over
          this value will be restricted when determining the route.
        in: query
        name: length
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of length eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: lengthUnit
        required: false
        schema:
          default: ft
          type: string
      - description: Specifies the maximum width of a vehicle. Any vehicles over this
          value will be restricted when determining the route.
        in: query
        name: width
        required: false
        schema:
          default: ""
          type: string
      - description: The unit of width eg. m(meter), km(kilometer), yd(yard), ft(foot),
          mi(mile).
        in: query
        name: widthUnit
        required: false
        schema:
          default: ft
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Gets Route By Address.
      tags:
      - Routing Service
      x-accepts: application/json
  /schools/v1/school/byaddress:
    get:
      description: Search Nearby Schools by Address
      operationId: getSchoolsByAddress
      parameters:
      - description: free form address text
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: 'Single digit code for education level applicable values are
          P -> primary, M -> Middle, H -> High, O -> Mixed Grades for public school
          type andE -> Elementary , S -> Secondary , O -> Others mixed grades for
          private schools '
        in: query
        name: edLevel
        required: false
        schema:
          type: string
      - description: Single digit code for schoolTypes applicable values are PRI and
          PUB
        in: query
        name: schoolType
        required: false
        schema:
          type: string
      - description: Single digit code for schoolSubType Applicable values are C,
          M, A, R, I, L, P, V, U, S (i.e. Charter, Magnet, Alternative, Regular, Indian,
          Military, Reportable Program, Vocational, Unknown, Special Education)
        in: query
        name: schoolSubType
        required: false
        schema:
          type: string
      - description: Single digit code for gender Applicable values are C, F, M (Coed,
          All Females, All Males) Applicable for Private Schools Only
        in: query
        name: gender
        required: false
        schema:
          type: string
      - description: 'Single digit code for assignedSchoolOnly applicable values are  Y/N '
        in: query
        name: assignedSchoolsOnly
        required: false
        schema:
          type: string
      - description: 'Single digit code for districtSchoolOnly applicable values are
          Y/N '
        in: query
        name: districtSchoolsOnly
        required: false
        schema:
          type: string
      - description: Search Radius within which schools are searched
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Search Radius unit applicable values are feet,kilometers,miles,meters
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Travel Time based on ‘travelMode’ within which schools are searched.
        in: query
        name: travelTime
        required: false
        schema:
          type: string
      - description: 'Travel Time unit applicable values are minutes,hours,seconds,milliseconds '
        in: query
        name: travelTimeUnit
        required: false
        schema:
          type: string
      - description: Travel Distance based on ‘travelMode’ within which schools are
          searched.
        in: query
        name: travelDistance
        required: false
        schema:
          type: string
      - description: Travel distanceUnit applicable values are feet,kilometers,miles,meters
        in: query
        name: travelDistanceUnit
        required: false
        schema:
          type: string
      - description: Travel mode Required when travelDistance or travelTime is specified.
          Accepted values are walking,driving
        in: query
        name: travelMode
        required: false
        schema:
          type: string
      - description: 'Max result to search '
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolsNearByResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SchoolsNearByResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Search Nearby Schools by Address
      tags:
      - Schools Service
      x-accepts: application/json
  /streets/v1/speedlimit:
    get:
      description: This service accepts point coordinates of a path as input and returns
        the posted speed limit of the road segment on which this path will snap.
      operationId: getNearestSpeedLimit
      parameters:
      - description: Accepts multiple points which will be snapped to the nearest
          road segment. Longitude and Latitude will be comma separated (longitude,latitude)
          and Point Coordinates will be separated by semi-colon(;)
        in: query
        name: path
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeedLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/SpeedLimit'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Nearest Speedlimit.
      tags:
      - Streets Service
      x-accepts: application/json
  /streets/v1/intersection/bylocation:
    get:
      description: This service accepts latitude/longitude as input and returns the
        Nearest Intersection.
      operationId: getIntersectionByLocation
      parameters:
      - description: Longitude of the location.
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Filters roads with specified class, allowed values are (Major,
          Secondary, Other and All), default is All
        in: query
        name: roadClass
        required: false
        schema:
          type: string
      - description: Returns Intersection in specified drive time
        in: query
        name: driveTime
        required: false
        schema:
          type: string
      - description: Drive time unit, allowed values are (hours, minutes, seconds
          and milliseconds), default is minutes
        in: query
        name: driveTimeUnit
        required: false
        schema:
          type: string
      - description: Search radius within which user wants to search, default is 50
          miles
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Search radius unit, allowed values are (feet, meter, kilometers
          and miles)
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Traffic flow in peak time, allowed values are (AMPEAK,PMPEAK,OFFPEAK,NIGHT)
        in: query
        name: historicSpeed
        required: false
        schema:
          type: string
      - description: max candidates to be returned default is 1
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntersectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/IntersectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Nearest Intesection By Location.
      tags:
      - Streets Service
      x-accepts: application/json
  /streets/v1/intersection/byaddress:
    get:
      description: This service accepts an address as input and returns the Nearest
        Intersection.
      operationId: getIntersectionByAddress
      parameters:
      - description: Address
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Filters roads with specified class, allowed values are (Major,
          Secondary, Other and All), default is All
        in: query
        name: roadClass
        required: false
        schema:
          type: string
      - description: Returns Intersection in specified drive time
        in: query
        name: driveTime
        required: false
        schema:
          type: string
      - description: Drive time unit, allowed values are (hours, minutes, seconds
          and milliseconds), default is minutes
        in: query
        name: driveTimeUnit
        required: false
        schema:
          type: string
      - description: Search radius within which user wants to search, default is 50
          miles
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Search radius unit, allowed values are (feet, meter, kilometers
          and miles)
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Traffic flow in peak time, allowed values are (AMPEAK,PMPEAK,OFFPEAK,NIGHT)
        in: query
        name: historicSpeed
        required: false
        schema:
          type: string
      - description: max candidates to be returned default is 1
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntersectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/IntersectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Nearest Intesection By Address.
      tags:
      - Streets Service
      x-accepts: application/json
  /telecomm/v1/ratecenter/bylocation:
    get:
      description: Accepts latitude & longitude as input and returns Incumbent Local
        Exchange Carrier (ILEC) doing-business-as names.
      operationId: getRateCenterByLocation
      parameters:
      - description: Longitude of the location
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Latitude of the location
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Specifies whether area code information will be part of response.Allowed
          values True,False.
        in: query
        name: areaCodeInfo
        required: false
        schema:
          type: string
      - description: Level (basic/detail).Allowed values detail,basic.
        in: query
        name: level
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCenterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RateCenterResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Rate Center By Location.
      tags:
      - Telecomm Info Service
      x-accepts: application/json
  /telecomm/v1/ratecenter/byaddress:
    get:
      description: Accepts addresses as input and returns Incumbent Local Exchange
        Carrier (ILEC) doing-business-as names.
      operationId: getRateCenterByAddress
      parameters:
      - description: The address to be searched
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: 3 letter ISO code of the country to be searched. Allowed values
          USA,CAN
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Specifies whether area code information will be part of response.Allowed
          values True,False.
        in: query
        name: areaCodeInfo
        required: false
        schema:
          type: string
      - description: Level (basic/detail).Allowed values detail,basic.
        in: query
        name: level
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCenterResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RateCenterResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Rate Center By Address.
      tags:
      - Telecomm Info Service
      x-accepts: application/json
  /timezone/v1/timezone/bylocation:
    get:
      description: Identifies and retrieves the local time of any location in the
        world for a given latitude, longitude and time. The input and retrieved time
        format is in milliseconds.
      operationId: getTimezoneByLocation
      parameters:
      - description: Timestamp in miliseconds.
        in: query
        name: timestamp
        required: true
        schema:
          type: string
      - description: Longitude of the location.
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Latitude of the location.
        in: query
        name: latitude
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimezoneResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Timezone By Location.
      tags:
      - Time Zone Service
      x-accepts: application/json
    post:
      description: Identifies and retrieves the local time of any location in the
        world for a given latitude, longitude and time. The input and retrieved time
        format is in milliseconds.
      operationId: getBatchTimezoneByLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timezoneLocationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/timezoneLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimezoneResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Timezone Batch by Location.
      tags:
      - Time Zone Service
      x-contentType: application/json
      x-accepts: application/json
  /timezone/v1/timezone/byaddress:
    get:
      description: Identifies and retrieves the local time of any location in the
        world for a given address and time. The input and retrieved time format is
        in milliseconds.
      operationId: getTimezoneByAddress
      parameters:
      - description: Timestamp in miliseconds.
        in: query
        name: timestamp
        required: true
        schema:
          type: string
      - description: The address to be searched.
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Match modes determine the leniency used to make a match between
          the input address and the reference data (Default is relaxed)
        example: Relaxed
        in: query
        name: matchMode
        required: false
        schema:
          type: string
      - description: Country ISO code (Default is USA)
        example: USA
        in: query
        name: country
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimezoneResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Timezone By Address.
      tags:
      - Time Zone Service
      x-accepts: application/json
    post:
      description: Identifies and retrieves the local time of any location in the
        world for a given address and time. The input and retrieved time format is
        in milliseconds.
      operationId: getTimezoneByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timezoneAddressRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/timezoneAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimezoneResponseList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Timezone Batch by Address.
      tags:
      - Time Zone Service
      x-contentType: application/json
      x-accepts: application/json
  /typeahead/v1/locations:
    get:
      description: Performs search to retrieve list of places by input text and location
        vicinity.
      operationId: searchV2
      parameters:
      - description: The input to be searched.
        in: query
        name: searchText
        required: true
        schema:
          type: string
      - description: Latitude of the location. We need to make sure that either Lat/Lng
          or Country is provided to API
        in: query
        name: latitude
        required: false
        schema:
          type: string
      - description: Longitude of the location. We need to make sure that either Lat/Lng
          or Country is provided to API
        in: query
        name: longitude
        required: false
        schema:
          type: string
      - description: Radius range within which search is performed.
        in: query
        name: searchRadius
        required: false
        schema:
          type: string
      - description: Radius unit such as Feet, Kilometers, Miles or Meters.
        in: query
        name: searchRadiusUnit
        required: false
        schema:
          type: string
      - description: Maximum number of POIs that can be retrieved.
        in: query
        name: maxCandidates
        required: false
        schema:
          type: string
      - description: Country ISO code. We need to make sure that either Lat/Lng or
          Country is provided to API
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Option so that we force api to match on address number
        in: query
        name: matchOnAddressNumber
        required: false
        schema:
          type: string
      - description: Option to allow API to detect origin of API request automatically
        in: query
        name: autoDetectLocation
        required: false
        schema:
          type: string
      - in: query
        name: ipAddress
        required: false
        schema:
          type: string
      - description: State province of the input to be searched
        in: query
        name: areaName1
        required: false
        schema:
          type: string
      - description: City of the input to be searched
        in: query
        name: areaName3
        required: false
        schema:
          type: string
      - description: Postal Code of the input to be searched
        in: query
        name: postCode
        required: false
        schema:
          type: string
      - description: if value set 'Y' then it will only do a matching on postcode
          or areaName1, areaName2, areaName3 and areaName4 fields in the data
        in: query
        name: returnAdminAreasOnly
        required: false
        schema:
          type: string
      - description: if value set 'Y' then display all unit info of ranges, if value
          set 'N' then don't show ranges
        in: query
        name: includeRangesDetails
        required: false
        schema:
          type: string
      - description: Preference to control search type of interactive requests.
        in: query
        name: searchType
        required: false
        schema:
          type: string
      - description: Preference to search on address number.
        in: query
        name: searchOnAddressNumber
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeaheadLocations'
            application/xml:
              schema:
                $ref: '#/components/schemas/TypeaheadLocations'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Address Autocomplete Search
      tags:
      - Address Autocomplete Service
      x-accepts: application/json
  /zones/v1/poiboundary/bylocation:
    get:
      description: Get Point of Interests Boundary by Location.
      operationId: getPOIBoundaryByLocation
      parameters:
      - description: Latitude around which POI Boundary is requested
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Longitude around which POI Boundary is requested
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: Specific Category/Categories Codes for the desired POIs. Accepts
          a mix of 4 digit (Top Category), 6 digit (Second-Level Category) and 11
          digit (Low-Level Category) Category Codes
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Specify starting digits or full sic code to filter the response
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Will accept naicsCode to filter POIs in results. Max 10 allowed.
        in: query
        name: naicsCode
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poiBoundary'
            application/xml:
              schema:
                $ref: '#/components/schemas/poiBoundary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get Point of Interests Boundary by Location.
      tags:
      - Zones Service
      x-accepts: application/json
    post:
      description: Batch method for getting Point of Interests Boundary by Location.
      operationId: getPOIBoundaryByLocationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POIBoundaryLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POIBoundaryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/POIBoundaryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Batch method for getting Point of Interests Boundary by Location.
      tags:
      - Zones Service
      x-contentType: application/json
      x-accepts: application/json
  /zones/v1/poiboundary/byaddress:
    get:
      description: Gets Point of Interests Boundary by Address.
      operationId: getPOIBoundaryByAddress
      parameters:
      - description: Address around which POI Boundary is requested
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Specific Category/Categories Codes for the desired POIs. Accepts
          a mix of 4 digit (Top Category), 6 digit (Second-Level Category) and 11
          digit (Low-Level Category) Category Codes.
        in: query
        name: categoryCode
        required: false
        schema:
          type: string
      - description: Specify starting digits or full sic code to filter the response
        in: query
        name: sicCode
        required: false
        schema:
          type: string
      - description: Will accept naicsCode to filter POIs in results. Max 10 allowed.
        in: query
        name: naicsCode
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poiBoundary'
            application/xml:
              schema:
                $ref: '#/components/schemas/poiBoundary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Gets Point of Interests Boundary by Address.
      tags:
      - Zones Service
      x-accepts: application/json
    post:
      description: Batch method for getting Point of Interests Boundary by Address.
      operationId: getPOIBoundaryByAddressBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POIBoundaryAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POIBoundaryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/POIBoundaryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Batch method for getting Point of Interests Boundary by Address.
      tags:
      - Zones Service
      x-contentType: application/json
      x-accepts: application/json
  /zones/v1/travelboundary/bytime:
    get:
      description: Travel boundary based on travel time.
      operationId: getTravelBoundaryByTime
      parameters:
      - description: Starting point from where the travel boundary is calculated.
          Point in Lat,Long,coordsys format
        in: query
        name: point
        required: false
        schema:
          type: string
      - description: Starting address from where the travel boundary is calculated.
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Travel time used to calculate the travel boundary.
        in: query
        name: costs
        required: false
        schema:
          type: string
      - description: Travel time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond).
        in: query
        name: costUnit
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          type: string
      - description: 3 character ISO code or country name.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Maximum distance to allow travel off the road network.
        in: query
        name: maxOffroadDistance
        required: false
        schema:
          type: string
      - description: MaxOffroad Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: maxOffroadDistanceUnit
        required: false
        schema:
          type: string
      - description: Desired coordinate system of the travel boundary.
        in: query
        name: destinationSrs
        required: false
        schema:
          type: string
      - description: Whether to include all roads in the calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "true"
          type: string
      - description: Whether to return holes, which are areas within the larger boundary
          that cannot be reached within the desired time
        in: query
        name: returnHoles
        required: false
        schema:
          type: string
      - description: Whether to return islands, which are small areas outside the
          main boundary that can be reached within the desired time
        in: query
        name: returnIslands
        required: false
        schema:
          type: string
      - description: Number between 0.0 and 1.0 where 0.0 is very simple and 1.0 means
          the most complex
        in: query
        name: simplificationFactor
        required: false
        schema:
          type: string
      - description: Style of banding to be used in the result
        in: query
        name: bandingStyle
        required: false
        schema:
          type: string
      - description: Whether routing calculation uses the historic traffic speeds
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          type: string
      - description: The speed to travel when going off a network road to find the
          travel boundary (for all road types).
        in: query
        name: defaultAmbientSpeed
        required: false
        schema:
          type: string
      - description: The unit of measure to use to calculate the ambient speed.
        in: query
        name: ambientSpeedUnit
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelBoundaries'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get TravelBoundary By Time.
      tags:
      - Zones Service
      x-accepts: application/json
  /zones/v1/travelboundary/bydistance:
    get:
      description: Returns the travel boundary based on travel distance.
      operationId: getTravelBoundaryByDistance
      parameters:
      - description: Starting point from where the travel boundary is calculated.
          Point in Lat,Long,coordsys format
        in: query
        name: point
        required: false
        schema:
          type: string
      - description: Address around which Basic Boundary is requested.
        in: query
        name: address
        required: false
        schema:
          type: string
      - description: Travel time used to calculate the travel boundary.
        in: query
        name: costs
        required: false
        schema:
          type: string
      - description: Travel time unit such as min(Minute), h(Hour), s(Second) or msec(Millisecond).
        in: query
        name: costUnit
        required: false
        schema:
          type: string
      - description: Mode of commute.
        in: query
        name: db
        required: false
        schema:
          type: string
      - description: 3 character ISO code or country name.
        in: query
        name: country
        required: false
        schema:
          type: string
      - description: Maximum distance to allow travel off the road network.
        in: query
        name: maxOffroadDistance
        required: false
        schema:
          type: string
      - description: MaxOffroad Distance Unit such as ft(Foot), km(Kilometer), mi(Mile),
          m(Meter) or yd(Yard).
        in: query
        name: maxOffroadDistanceUnit
        required: false
        schema:
          type: string
      - description: Desired coordinate system of the travel boundary.
        in: query
        name: destinationSrs
        required: false
        schema:
          type: string
      - description: Whether to include all roads in the calculation or just major
          roads.
        in: query
        name: majorRoads
        required: false
        schema:
          default: "true"
          type: string
      - description: Whether to return holes, which are areas within the larger boundary
          that cannot be reached within the desired time
        in: query
        name: returnHoles
        required: false
        schema:
          type: string
      - description: Whether to return islands, which are small areas outside the
          main boundary that can be reached within the desired time
        in: query
        name: returnIslands
        required: false
        schema:
          type: string
      - description: Number between 0.0 and 1.0 where 0.0 is very simple and 1.0 means
          the most complex
        in: query
        name: simplificationFactor
        required: false
        schema:
          type: string
      - description: Style of banding to be used in the result
        in: query
        name: bandingStyle
        required: false
        schema:
          type: string
      - description: Whether routing calculation uses the historic traffic speeds
        in: query
        name: historicTrafficTimeBucket
        required: false
        schema:
          type: string
      - description: The speed to travel when going off a network road to find the
          travel boundary (for all road types).
        in: query
        name: defaultAmbientSpeed
        required: false
        schema:
          type: string
      - description: The unit of measure to use to calculate the ambient speed.
        in: query
        name: ambientSpeedUnit
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelBoundaries'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Get TravelBoundary By Distance.
      tags:
      - Zones Service
      x-accepts: application/json
  /zones/v1/basicboundary/bylocation:
    get:
      description: Gets Basic Boundary by Location.
      operationId: getBasicBoundaryByLocation
      parameters:
      - description: Latitude around which Basic Boundary is requested
        in: query
        name: latitude
        required: true
        schema:
          type: string
      - description: Longitude around which Basic Boundary is requested
        in: query
        name: longitude
        required: true
        schema:
          type: string
      - description: This is width of the buffer (in a complete circular buffer, it
          would be radius of the buffer). This has to be a positive number.
        in: query
        name: distance
        required: true
        schema:
          type: string
      - in: query
        name: distanceUnit
        required: false
        schema:
          type: string
      - description: This is resolution of the buffer. Curves generated in buffer
          are approximated by line segments and it is measured in segments per circle.
          The higher the resolution, the smoother the curves of the buffer but more
          points would be required in the boundary geometry. Number greater than 0
          and in multiple of 4. If not in 4, then it is approximated to nearest multiple
          of 4.
        in: query
        name: resolution
        required: false
        schema:
          type: string
      - in: query
        name: responseSrs
        required: false
        schema:
          type: string
      - in: query
        name: srsName
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicBoundary'
            application/xml:
              schema:
                $ref: '#/components/schemas/basicBoundary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Gets Basic Boundary by Location.
      tags:
      - Zones Service
      x-accepts: application/json
  /zones/v1/basicboundary/byaddress:
    get:
      description: Gets Basic Boundary by Address.
      operationId: getBasicBoundaryByAddress
      parameters:
      - description: Address around which Basic Boundary is requested
        in: query
        name: address
        required: true
        schema:
          type: string
      - description: Three digit ISO country code
        in: query
        name: country
        required: false
        schema:
          type: string
      - in: query
        name: distance
        required: false
        schema:
          type: string
      - in: query
        name: distanceUnit
        required: false
        schema:
          type: string
      - description: This is resolution of the buffer. Curves generated in buffer
          are approximated by line segments and it is measured in segments per circle.
          The higher the resolution, the smoother the curves of the buffer but more
          points would be required in the boundary geometry. Number greater than 0
          and in multiple of 4. If not in 4, then it is approximated to nearest multiple
          of 4.
        in: query
        name: resolution
        required: false
        schema:
          type: string
      - in: query
        name: responseSrs
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicBoundary'
            application/xml:
              schema:
                $ref: '#/components/schemas/basicBoundary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Gets Basic Boundary by Address.
      tags:
      - Zones Service
      x-accepts: application/json
  /addressverification/v1/getpostalcodes/results.json:
    post:
      deprecated: false
      description: GetPostalCodes takes a city and state as input for U.S. addresses
        and returns the postal codes for that city.
      operationId: GetPostalCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPostalCodesAPIRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostalCodesAPIResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: GetPostalCodes
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /addressverification/v1/getcitystateprovince/results.json:
    post:
      deprecated: false
      description: GetCityStateProvince returns a city and state/province for a given
        input postal code for U.S. and Canadian addresses.
      operationId: GetCityStateProvince
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCityStateProvinceAPIRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCityStateProvinceAPIResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: GetCityStateProvince
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /addressverification/v1/validatemailingaddressuscan/results.json:
    post:
      deprecated: false
      description: ValidateMailingAddressUSCAN analyses and compares the input addresses
        against the known address databases around the world to output a standardized
        detail for US and CANADAIt gives RDI and DPV also along with other US/CAN
        specific functionalities.
      operationId: ValidateMailingAddressUSCAN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: ValidateMailingAddressUSCAN
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /addressverification/v1/validatemailingaddress/results.json:
    post:
      deprecated: false
      description: ValidateMailingAddress analyses and compares the input addresses
        against the known address databases around the world to output a standardized
        detail.
      operationId: ValidateMailingAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMailingAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMailingAddressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: ValidateMailingAddress
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /addressverification/v1/validatemailingaddresspro/results.json:
    post:
      deprecated: false
      description: ValidateMailingAddressPro builds upon the ValidateMailingAddress
        service by using additional address databases so it can provide enhanced detail.
      operationId: ValidateMailingAddressPro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMailingAddressProRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMailingAddressProResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: ValidateMailingAddressPro
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /addressverification/v1/validatemailingaddresspremium/results.json:
    post:
      deprecated: false
      description: ValidateMailing AddressPremium expands on the ValidateMailingAddressPro
        service by adding premium address data sources to get the best address validation
        result possible.
      operationId: ValidateMailingAddressPremium
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMailingAddressPremiumRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMailingAddressPremiumResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: ValidateMailingAddressPremium
      tags:
      - Address Verification Service
      x-codegen-request-body-name: InputAddress
      x-contentType: application/json
      x-accepts: application/json
  /emailverification/v1/validateemailaddress/results.json:
    post:
      deprecated: false
      description: Confirm that your customer’s mailing address exists and that mail
        and packages can be delivered to it.
      operationId: ValidateEmailAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateEmailAddressAPIRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateEmailAddressAPIResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: ValidateEmailAddress
      tags:
      - Email Verification Service
      x-codegen-request-body-name: InputEmailAddress
      x-contentType: application/json
      x-accepts: application/json
  /phoneverification/v2/validatephonenumber/results.json:
    post:
      description: This service accepts a phone number as input and returns details
        distinguishing landline and wireless numbers.
      operationId: validatephonenumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePhoneNumberAPIRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneVerification'
            application/xml:
              schema:
                $ref: '#/components/schemas/PhoneVerification'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Internal Server Error
      security:
      - oAuth2Password: []
      summary: Phone verification.
      tags:
      - Phone Verification Service
      x-contentType: application/json
      x-accepts: application/json
  /geolocation/v1/location/byipaddress:
    get:
      description: This service accepts an IP address and returns the location coordinates
        corresponding to that IP address.
      operationId: getLocationByIPAddress
      parameters:
      - description: This is the ip address of network connected device. It must be
          a standard IPv4 octet and a valid external address.
        in: query
        name: ipAddress
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GeoLocationIpAddr'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoLocationIpAddr'
          description: successful operation
      security:
      - oAuth2Password: []
      summary: Location By IP Address.
      tags:
      - Geolocation Service
      x-accepts: application/json
  /geolocation/v1/location/byaccesspoint:
    get:
      description: This service accepts a WiFi access point MAC address and returns
        the location coordinates corresponding to that access point. Only mac or accessPoint
        are mandatory parameters (one of them has to be provided), rest are optional.
      operationId: getLocationByWiFiAccessPoint
      parameters:
      - description: This should be the 48 bit mac address (or BSSID) of wireless
          access point. Accepted format is Six groups of two hexadecimal digits, separated
          by hyphens (-) or colons.
        in: query
        name: mac
        schema:
          type: string
      - description: The service set identifier for wi-fi access point. It should
          be alphanumeric with maximum 32 characters.
        in: query
        name: ssid
        schema:
          type: string
      - description: This is the received signal strength indicator from particular
          wi-fi access point. It should be a number from -113 to 0 and the unit of
          this strength is dBm.
        in: query
        name: rsid
        schema:
          type: string
      - description: This is the connection speed for wi-fi. It should be a number
          from 0 to 6930 and the unit should be Mbps.
        in: query
        name: speed
        schema:
          type: string
      - description: This is the JSON based list of wifi access points in the vicinity
          of device to be located. This parameter is helpful in case, multiple wifi
          points are visible and we want to make sure that the location of device
          is best calculated considering all the access points location.
        in: query
        name: accessPoint
        schema:
          type: string
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/GeoLocationAccessPoint'
            application/json:
              schema:
                $ref: '#/components/schemas/GeoLocationAccessPoint'
          description: successful operation
      security:
      - oAuth2Password: []
      summary: Location by WiFi Access Point.
      tags:
      - Geolocation Service
      x-accepts: application/json
components:
  schemas:
    addressesCount:
      example:
        totalAddressesFound: 0
      properties:
        totalAddressesFound:
          format: int32
          type: integer
      type: object
      xml:
        name: addressesCount
    ErrorInfo:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorCode'
          type: array
          xml:
            name: error
      type: object
      xml:
        name: errors
    ErrorCode:
      properties:
        errorCode:
          type: string
        errorDescription:
          type: string
      type: object
    AddressesByBoundaryRequest:
      example:
        travelDistanceUnit: travelDistanceUnit
        preferences:
          maxCandidates: maxCandidates
          page: page
        travelTime: travelTime
        latitude: 6.027456183070403
        travelTimeUnit: travelTimeUnit
        travelDistance: travelDistance
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        geometryAsText: geometryAsText
        longitude: 1.4658129805029452
        travelMode: travelMode
      properties:
        preferences:
          $ref: '#/components/schemas/AddressesPreferences'
        geometry:
          $ref: '#/components/schemas/Geometry'
        geometryAsText:
          type: string
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        travelTime:
          type: string
        travelTimeUnit:
          type: string
        travelDistance:
          type: string
        travelDistanceUnit:
          type: string
        travelMode:
          type: string
      type: object
      xml:
        name: addressesByBoundaryRequest
    AddressesPreferences:
      example:
        maxCandidates: maxCandidates
        page: page
      properties:
        maxCandidates:
          type: string
        page:
          type: string
      type: object
    Geometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      type: object
    AddressesResponse:
      example:
        candidates: candidates
        addressList:
        - country: country
          parentPbKey: parentPbKey
          type:
            description: description
            value: value
          unitType: unitType
          areaName1: areaName1
          streetName: streetName
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          propertyType: propertyType
          geoId: geoId
          addressNumber: addressNumber
          propertyTypeDescription: propertyTypeDescription
          pbKey: pbKey
          postCode: postCode
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          postCodeExt: postCodeExt
          unitValue: unitValue
        - country: country
          parentPbKey: parentPbKey
          type:
            description: description
            value: value
          unitType: unitType
          areaName1: areaName1
          streetName: streetName
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          propertyType: propertyType
          geoId: geoId
          addressNumber: addressNumber
          propertyTypeDescription: propertyTypeDescription
          pbKey: pbKey
          postCode: postCode
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          postCodeExt: postCodeExt
          unitValue: unitValue
        page: page
      properties:
        page:
          type: string
          xml:
            attribute: true
        candidates:
          type: string
          xml:
            attribute: true
        addressList:
          items:
            $ref: '#/components/schemas/AddressesDTO'
          type: array
          xml:
            name: address
      type: object
      xml:
        name: addresses
    AddressesDTO:
      example:
        country: country
        parentPbKey: parentPbKey
        type:
          description: description
          value: value
        unitType: unitType
        areaName1: areaName1
        streetName: streetName
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        propertyType: propertyType
        geoId: geoId
        addressNumber: addressNumber
        propertyTypeDescription: propertyTypeDescription
        pbKey: pbKey
        postCode: postCode
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        postCodeExt: postCodeExt
        unitValue: unitValue
      properties:
        pbKey:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        type:
          $ref: '#/components/schemas/AddressType'
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        propertyType:
          type: string
        propertyTypeDescription:
          type: string
        parentPbKey:
          type: string
        geoId:
          type: string
      type: object
    AddressType:
      example:
        description: description
        value: value
      properties:
        value:
          type: string
        description:
          type: string
      type: object
    Demographics:
      example:
        themes:
          householdsTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          supplyAndDemandTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          housingTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          employmentTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          boundaryId: boundaryId
          incomeTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          assetsAndWealthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          healthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          educationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          raceAndEthnicityTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          expenditureTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          populationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
        boundaryThemes:
        - householdsTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          supplyAndDemandTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          housingTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          employmentTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          boundaryId: boundaryId
          incomeTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          assetsAndWealthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          healthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          educationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          raceAndEthnicityTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          expenditureTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          populationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
        - householdsTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          supplyAndDemandTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          housingTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          employmentTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          boundaryId: boundaryId
          incomeTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          assetsAndWealthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          healthTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          educationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          raceAndEthnicityTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          expenditureTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
          populationTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
        boundaries:
          boundary:
          - boundaryId: boundaryId
            boundaryRef: boundaryRef
            boundaryType: boundaryType
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            url: url
          - boundaryId: boundaryId
            boundaryRef: boundaryRef
            boundaryType: boundaryType
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            url: url
          boundaryRef: boundaryRef
          boundaryType: boundaryType
      properties:
        boundaries:
          $ref: '#/components/schemas/Boundaries'
        themes:
          $ref: '#/components/schemas/DemographicsThemesV2'
        boundaryThemes:
          items:
            $ref: '#/components/schemas/DemographicsThemesV2'
          type: array
          xml:
            name: themes
            wrapped: true
      required:
      - boundaries
      - themes
      type: object
      xml:
        name: demographics
    Boundaries:
      example:
        boundary:
        - boundaryId: boundaryId
          boundaryRef: boundaryRef
          boundaryType: boundaryType
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          url: url
        - boundaryId: boundaryId
          boundaryRef: boundaryRef
          boundaryType: boundaryType
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          url: url
        boundaryRef: boundaryRef
        boundaryType: boundaryType
      properties:
        boundaryType:
          type: string
          xml:
            attribute: true
        boundaryRef:
          type: string
          xml:
            attribute: true
        boundary:
          items:
            $ref: '#/components/schemas/Boundary'
          type: array
      required:
      - boundary
      type: object
      xml:
        name: boundaries
    Boundary:
      example:
        boundaryId: boundaryId
        boundaryRef: boundaryRef
        boundaryType: boundaryType
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
        url: url
      properties:
        boundaryId:
          type: string
          xml:
            attribute: true
        boundaryType:
          type: string
          xml:
            attribute: true
        boundaryRef:
          type: string
          xml:
            attribute: true
        geometry:
          $ref: '#/components/schemas/DemographicsGeometry'
        url:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: boundary
    DemographicsGeometry:
      example:
        crs:
          type: type
          properties:
            name: name
        coordinates: '{}'
        type: type
      properties:
        type:
          type: string
        crs:
          $ref: '#/components/schemas/DemographicsGeometryCRC'
        coordinates:
          type: object
      type: object
    DemographicsGeometryCRC:
      example:
        type: type
        properties:
          name: name
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/GeometryProperties'
      type: object
    GeometryProperties:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    DemographicsThemesV2:
      example:
        householdsTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        supplyAndDemandTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        housingTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        employmentTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        boundaryId: boundaryId
        incomeTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        assetsAndWealthTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        healthTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        educationTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        raceAndEthnicityTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        expenditureTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
        populationTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
      properties:
        boundaryId:
          type: string
          xml:
            attribute: true
        populationTheme:
          $ref: '#/components/schemas/PopulationTheme'
        raceAndEthnicityTheme:
          $ref: '#/components/schemas/RaceAndEthnicityTheme'
        healthTheme:
          $ref: '#/components/schemas/HealthTheme'
        educationTheme:
          $ref: '#/components/schemas/EducationTheme'
        incomeTheme:
          $ref: '#/components/schemas/IncomeTheme'
        assetsAndWealthTheme:
          $ref: '#/components/schemas/AssetsAndWealthTheme'
        householdsTheme:
          $ref: '#/components/schemas/HouseholdsTheme'
        housingTheme:
          $ref: '#/components/schemas/HousingTheme'
        employmentTheme:
          $ref: '#/components/schemas/EmploymentTheme'
        expenditureTheme:
          $ref: '#/components/schemas/ExpenditureTheme'
        supplyAndDemandTheme:
          $ref: '#/components/schemas/SupplyAndDemandTheme'
      type: object
      xml:
        name: themes
    PopulationTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: populationTheme
    IndividualValueVariable:
      example:
        year: year
        name: name
        description: description
        value: value
      properties:
        name:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
        year:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: individualValueVariable
    RangeVariable:
      example:
        field:
        - name: name
          description: description
          value: value
        - name: name
          description: description
          value: value
        year: year
        count: count
        name: name
        baseVariable: baseVariable
        alias: alias
        description: description
        order: order
      properties:
        count:
          type: string
          xml:
            attribute: true
        order:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        alias:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
        baseVariable:
          type: string
          xml:
            attribute: true
        year:
          type: string
          xml:
            attribute: true
        field:
          items:
            $ref: '#/components/schemas/Field'
          type: array
      required:
      - field
      type: object
      xml:
        name: rangeVariable
    Field:
      example:
        name: name
        description: description
        value: value
      properties:
        value:
          type: string
        name:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
      type: object
    RaceAndEthnicityTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: raceAndEthnicityTheme
    HealthTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: healthTheme
    EducationTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: educationTheme
    IncomeTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: incomeTheme
    AssetsAndWealthTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: assetsAndWealthTheme
    HouseholdsTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: householdsTheme
    HousingTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: housingTheme
    EmploymentTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: employmentTheme
    ExpenditureTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: expenditureTheme
    SupplyAndDemandTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: supplyAndDemandTheme
    DemographicsAdvancedRequest:
      example:
        preferences:
          filter: filter
          profile: profile
          includeGeometry: includeGeometry
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
        geometryAsText: geometryAsText
      properties:
        preferences:
          $ref: '#/components/schemas/DemographicsAdvancedPreferences'
        geometry:
          $ref: '#/components/schemas/DemographicsGeometry'
        geometryAsText:
          type: string
      type: object
      xml:
        name: demographicsAdvancedRequest
    DemographicsAdvancedPreferences:
      example:
        filter: filter
        profile: profile
        includeGeometry: includeGeometry
      properties:
        profile:
          type: string
        filter:
          type: string
        includeGeometry:
          type: string
      type: object
    Segmentation:
      example:
        themes:
          lifeStyleTheme:
            rangeVariable:
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            - field:
              - name: name
                description: description
                value: value
              - name: name
                description: description
                value: value
              year: year
              count: count
              name: name
              baseVariable: baseVariable
              alias: alias
              description: description
              order: order
            individualValueVariable:
            - year: year
              name: name
              description: description
              value: value
            - year: year
              name: name
              description: description
              value: value
            boundaryRef: boundaryRef
        boundaries:
          boundary:
          - boundaryId: boundaryId
            boundaryRef: boundaryRef
            boundaryType: boundaryType
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            url: url
          - boundaryId: boundaryId
            boundaryRef: boundaryRef
            boundaryType: boundaryType
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            url: url
          boundaryRef: boundaryRef
          boundaryType: boundaryType
      properties:
        boundaries:
          $ref: '#/components/schemas/Boundaries'
        themes:
          $ref: '#/components/schemas/SegmentationThemes'
      required:
      - boundaries
      - themes
      type: object
      xml:
        name: segmentation
    SegmentationThemes:
      example:
        lifeStyleTheme:
          rangeVariable:
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          - field:
            - name: name
              description: description
              value: value
            - name: name
              description: description
              value: value
            year: year
            count: count
            name: name
            baseVariable: baseVariable
            alias: alias
            description: description
            order: order
          individualValueVariable:
          - year: year
            name: name
            description: description
            value: value
          - year: year
            name: name
            description: description
            value: value
          boundaryRef: boundaryRef
      properties:
        lifeStyleTheme:
          $ref: '#/components/schemas/LifeStyleTheme'
      type: object
      xml:
        name: themes
    LifeStyleTheme:
      example:
        rangeVariable:
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        - field:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          year: year
          count: count
          name: name
          baseVariable: baseVariable
          alias: alias
          description: description
          order: order
        individualValueVariable:
        - year: year
          name: name
          description: description
          value: value
        - year: year
          name: name
          description: description
          value: value
        boundaryRef: boundaryRef
      properties:
        boundaryRef:
          type: string
        individualValueVariable:
          items:
            $ref: '#/components/schemas/IndividualValueVariable'
          type: array
        rangeVariable:
          items:
            $ref: '#/components/schemas/RangeVariable'
          type: array
      type: object
      xml:
        name: lifeStyleTheme
    GeocodeServiceResponse:
      example:
        candidates:
        - identifier: identifier
          formattedStreetAddress: formattedStreetAddress
          address:
            country: country
            customFields:
              key: '{}'
            postCode2: postCode2
            unitType: unitType
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            streetName: streetName
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            mainAddressLine: mainAddressLine
            placeName: placeName
            objectId: objectId
            addressLastLine: addressLastLine
            unitValue: unitValue
          ranges:
          - lowHouse: lowHouse
            side: UNKNOWN
            highHouse: highHouse
            oddEvenIndicator: UNKNOWN
            units:
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            placeName: placeName
            customValues:
              key: '{}'
          - lowHouse: lowHouse
            side: UNKNOWN
            highHouse: highHouse
            oddEvenIndicator: UNKNOWN
            units:
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            placeName: placeName
            customValues:
              key: '{}'
          precisionCode: precisionCode
          sourceDictionary: sourceDictionary
          formattedLocationAddress: formattedLocationAddress
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates:
            - 5.962133916683182
            - 5.962133916683182
            type: type
          precisionLevel: 1
          matching:
            matchOnAreaName1: true
            matchOnAreaName3: true
            matchOnAreaName2: true
            matchOnAreaName4: true
            matchOnStreetType: true
            matchOnStreetDirectional: true
            matchOnAddressNumber: true
            matchOnAllStreetFields: true
            matchOnPlaceName: true
            matchOnInputFields: true
            matchOnStreetName: true
            matchOnPostCode1: true
            matchOnPostCode2: true
        - identifier: identifier
          formattedStreetAddress: formattedStreetAddress
          address:
            country: country
            customFields:
              key: '{}'
            postCode2: postCode2
            unitType: unitType
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            streetName: streetName
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            mainAddressLine: mainAddressLine
            placeName: placeName
            objectId: objectId
            addressLastLine: addressLastLine
            unitValue: unitValue
          ranges:
          - lowHouse: lowHouse
            side: UNKNOWN
            highHouse: highHouse
            oddEvenIndicator: UNKNOWN
            units:
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            placeName: placeName
            customValues:
              key: '{}'
          - lowHouse: lowHouse
            side: UNKNOWN
            highHouse: highHouse
            oddEvenIndicator: UNKNOWN
            units:
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            - unitType: unitType
              lowUnitValue: lowUnitValue
              placeName: placeName
              highUnitValue: highUnitValue
              customValues:
                key: '{}'
            placeName: placeName
            customValues:
              key: '{}'
          precisionCode: precisionCode
          sourceDictionary: sourceDictionary
          formattedLocationAddress: formattedLocationAddress
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates:
            - 5.962133916683182
            - 5.962133916683182
            type: type
          precisionLevel: 1
          matching:
            matchOnAreaName1: true
            matchOnAreaName3: true
            matchOnAreaName2: true
            matchOnAreaName4: true
            matchOnStreetType: true
            matchOnStreetDirectional: true
            matchOnAddressNumber: true
            matchOnAllStreetFields: true
            matchOnPlaceName: true
            matchOnInputFields: true
            matchOnStreetName: true
            matchOnPostCode1: true
            matchOnPostCode2: true
        totalPossibleCandidates: 0
        totalMatches: 6
        objectId: objectId
      properties:
        objectId:
          type: string
        totalPossibleCandidates:
          format: int32
          type: integer
        totalMatches:
          format: int32
          type: integer
        candidates:
          items:
            $ref: '#/components/schemas/Candidate'
          type: array
      type: object
      xml:
        name: GeocodeServiceResponse
    Candidate:
      example:
        identifier: identifier
        formattedStreetAddress: formattedStreetAddress
        address:
          country: country
          customFields:
            key: '{}'
          postCode2: postCode2
          unitType: unitType
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          streetName: streetName
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          mainAddressLine: mainAddressLine
          placeName: placeName
          objectId: objectId
          addressLastLine: addressLastLine
          unitValue: unitValue
        ranges:
        - lowHouse: lowHouse
          side: UNKNOWN
          highHouse: highHouse
          oddEvenIndicator: UNKNOWN
          units:
          - unitType: unitType
            lowUnitValue: lowUnitValue
            placeName: placeName
            highUnitValue: highUnitValue
            customValues:
              key: '{}'
          - unitType: unitType
            lowUnitValue: lowUnitValue
            placeName: placeName
            highUnitValue: highUnitValue
            customValues:
              key: '{}'
          placeName: placeName
          customValues:
            key: '{}'
        - lowHouse: lowHouse
          side: UNKNOWN
          highHouse: highHouse
          oddEvenIndicator: UNKNOWN
          units:
          - unitType: unitType
            lowUnitValue: lowUnitValue
            placeName: placeName
            highUnitValue: highUnitValue
            customValues:
              key: '{}'
          - unitType: unitType
            lowUnitValue: lowUnitValue
            placeName: placeName
            highUnitValue: highUnitValue
            customValues:
              key: '{}'
          placeName: placeName
          customValues:
            key: '{}'
        precisionCode: precisionCode
        sourceDictionary: sourceDictionary
        formattedLocationAddress: formattedLocationAddress
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates:
          - 5.962133916683182
          - 5.962133916683182
          type: type
        precisionLevel: 1
        matching:
          matchOnAreaName1: true
          matchOnAreaName3: true
          matchOnAreaName2: true
          matchOnAreaName4: true
          matchOnStreetType: true
          matchOnStreetDirectional: true
          matchOnAddressNumber: true
          matchOnAllStreetFields: true
          matchOnPlaceName: true
          matchOnInputFields: true
          matchOnStreetName: true
          matchOnPostCode1: true
          matchOnPostCode2: true
      properties:
        precisionLevel:
          format: int32
          type: integer
        formattedStreetAddress:
          type: string
        formattedLocationAddress:
          type: string
        identifier:
          type: string
        precisionCode:
          type: string
        sourceDictionary:
          type: string
        matching:
          $ref: '#/components/schemas/FieldsMatching'
        geometry:
          $ref: '#/components/schemas/GeoPos'
        address:
          $ref: '#/components/schemas/GeocodeAddress'
        ranges:
          items:
            $ref: '#/components/schemas/CandidateRange'
          type: array
      type: object
    FieldsMatching:
      example:
        matchOnAreaName1: true
        matchOnAreaName3: true
        matchOnAreaName2: true
        matchOnAreaName4: true
        matchOnStreetType: true
        matchOnStreetDirectional: true
        matchOnAddressNumber: true
        matchOnAllStreetFields: true
        matchOnPlaceName: true
        matchOnInputFields: true
        matchOnStreetName: true
        matchOnPostCode1: true
        matchOnPostCode2: true
      properties:
        matchOnAddressNumber:
          type: boolean
        matchOnPostCode1:
          type: boolean
        matchOnPostCode2:
          type: boolean
        matchOnAreaName1:
          type: boolean
        matchOnAreaName2:
          type: boolean
        matchOnAreaName3:
          type: boolean
        matchOnAreaName4:
          type: boolean
        matchOnAllStreetFields:
          type: boolean
        matchOnStreetName:
          type: boolean
        matchOnStreetType:
          type: boolean
        matchOnStreetDirectional:
          type: boolean
        matchOnPlaceName:
          type: boolean
        matchOnInputFields:
          type: boolean
      type: object
    GeoPos:
      example:
        crs:
          type: type
          properties:
            name: name
        coordinates:
        - 5.962133916683182
        - 5.962133916683182
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
        crs:
          $ref: '#/components/schemas/Crs'
      required:
      - crs
      - type
      type: object
    Crs:
      example:
        type: type
        properties:
          name: name
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/Properties'
      required:
      - properties
      - type
      type: object
    Properties:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    GeocodeAddress:
      example:
        country: country
        customFields:
          key: '{}'
        postCode2: postCode2
        unitType: unitType
        areaName1: areaName1
        postCode1: postCode1
        areaName2: areaName2
        streetName: streetName
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        mainAddressLine: mainAddressLine
        placeName: placeName
        objectId: objectId
        addressLastLine: addressLastLine
        unitValue: unitValue
      properties:
        objectId:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode1:
          type: string
        postCode2:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        customFields:
          additionalProperties:
            type: object
          type: object
      type: object
    CandidateRange:
      example:
        lowHouse: lowHouse
        side: UNKNOWN
        highHouse: highHouse
        oddEvenIndicator: UNKNOWN
        units:
        - unitType: unitType
          lowUnitValue: lowUnitValue
          placeName: placeName
          highUnitValue: highUnitValue
          customValues:
            key: '{}'
        - unitType: unitType
          lowUnitValue: lowUnitValue
          placeName: placeName
          highUnitValue: highUnitValue
          customValues:
            key: '{}'
        placeName: placeName
        customValues:
          key: '{}'
      properties:
        placeName:
          type: string
        lowHouse:
          type: string
        highHouse:
          type: string
        side:
          enum:
          - UNKNOWN
          - LEFT
          - RIGHT
          - BOTH
          type: string
        oddEvenIndicator:
          enum:
          - UNKNOWN
          - BOTH
          - ODD
          - EVEN
          - IRREGULAR
          type: string
        units:
          items:
            $ref: '#/components/schemas/CandidateRangeUnit'
          type: array
        customValues:
          additionalProperties:
            type: object
          type: object
      type: object
    CandidateRangeUnit:
      example:
        unitType: unitType
        lowUnitValue: lowUnitValue
        placeName: placeName
        highUnitValue: highUnitValue
        customValues:
          key: '{}'
      properties:
        placeName:
          type: string
        unitType:
          type: string
        highUnitValue:
          type: string
        lowUnitValue:
          type: string
        customValues:
          additionalProperties:
            type: object
          type: object
      type: object
    GeocodeServiceResponseList:
      example:
        responses:
        - candidates:
          - identifier: identifier
            formattedStreetAddress: formattedStreetAddress
            address:
              country: country
              customFields:
                key: '{}'
              postCode2: postCode2
              unitType: unitType
              areaName1: areaName1
              postCode1: postCode1
              areaName2: areaName2
              streetName: streetName
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              mainAddressLine: mainAddressLine
              placeName: placeName
              objectId: objectId
              addressLastLine: addressLastLine
              unitValue: unitValue
            ranges:
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            precisionCode: precisionCode
            sourceDictionary: sourceDictionary
            formattedLocationAddress: formattedLocationAddress
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates:
              - 5.962133916683182
              - 5.962133916683182
              type: type
            precisionLevel: 1
            matching:
              matchOnAreaName1: true
              matchOnAreaName3: true
              matchOnAreaName2: true
              matchOnAreaName4: true
              matchOnStreetType: true
              matchOnStreetDirectional: true
              matchOnAddressNumber: true
              matchOnAllStreetFields: true
              matchOnPlaceName: true
              matchOnInputFields: true
              matchOnStreetName: true
              matchOnPostCode1: true
              matchOnPostCode2: true
          - identifier: identifier
            formattedStreetAddress: formattedStreetAddress
            address:
              country: country
              customFields:
                key: '{}'
              postCode2: postCode2
              unitType: unitType
              areaName1: areaName1
              postCode1: postCode1
              areaName2: areaName2
              streetName: streetName
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              mainAddressLine: mainAddressLine
              placeName: placeName
              objectId: objectId
              addressLastLine: addressLastLine
              unitValue: unitValue
            ranges:
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            precisionCode: precisionCode
            sourceDictionary: sourceDictionary
            formattedLocationAddress: formattedLocationAddress
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates:
              - 5.962133916683182
              - 5.962133916683182
              type: type
            precisionLevel: 1
            matching:
              matchOnAreaName1: true
              matchOnAreaName3: true
              matchOnAreaName2: true
              matchOnAreaName4: true
              matchOnStreetType: true
              matchOnStreetDirectional: true
              matchOnAddressNumber: true
              matchOnAllStreetFields: true
              matchOnPlaceName: true
              matchOnInputFields: true
              matchOnStreetName: true
              matchOnPostCode1: true
              matchOnPostCode2: true
          totalPossibleCandidates: 0
          totalMatches: 6
          objectId: objectId
        - candidates:
          - identifier: identifier
            formattedStreetAddress: formattedStreetAddress
            address:
              country: country
              customFields:
                key: '{}'
              postCode2: postCode2
              unitType: unitType
              areaName1: areaName1
              postCode1: postCode1
              areaName2: areaName2
              streetName: streetName
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              mainAddressLine: mainAddressLine
              placeName: placeName
              objectId: objectId
              addressLastLine: addressLastLine
              unitValue: unitValue
            ranges:
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            precisionCode: precisionCode
            sourceDictionary: sourceDictionary
            formattedLocationAddress: formattedLocationAddress
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates:
              - 5.962133916683182
              - 5.962133916683182
              type: type
            precisionLevel: 1
            matching:
              matchOnAreaName1: true
              matchOnAreaName3: true
              matchOnAreaName2: true
              matchOnAreaName4: true
              matchOnStreetType: true
              matchOnStreetDirectional: true
              matchOnAddressNumber: true
              matchOnAllStreetFields: true
              matchOnPlaceName: true
              matchOnInputFields: true
              matchOnStreetName: true
              matchOnPostCode1: true
              matchOnPostCode2: true
          - identifier: identifier
            formattedStreetAddress: formattedStreetAddress
            address:
              country: country
              customFields:
                key: '{}'
              postCode2: postCode2
              unitType: unitType
              areaName1: areaName1
              postCode1: postCode1
              areaName2: areaName2
              streetName: streetName
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              mainAddressLine: mainAddressLine
              placeName: placeName
              objectId: objectId
              addressLastLine: addressLastLine
              unitValue: unitValue
            ranges:
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            - lowHouse: lowHouse
              side: UNKNOWN
              highHouse: highHouse
              oddEvenIndicator: UNKNOWN
              units:
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              - unitType: unitType
                lowUnitValue: lowUnitValue
                placeName: placeName
                highUnitValue: highUnitValue
                customValues:
                  key: '{}'
              placeName: placeName
              customValues:
                key: '{}'
            precisionCode: precisionCode
            sourceDictionary: sourceDictionary
            formattedLocationAddress: formattedLocationAddress
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates:
              - 5.962133916683182
              - 5.962133916683182
              type: type
            precisionLevel: 1
            matching:
              matchOnAreaName1: true
              matchOnAreaName3: true
              matchOnAreaName2: true
              matchOnAreaName4: true
              matchOnStreetType: true
              matchOnStreetDirectional: true
              matchOnAddressNumber: true
              matchOnAllStreetFields: true
              matchOnPlaceName: true
              matchOnInputFields: true
              matchOnStreetName: true
              matchOnPostCode1: true
              matchOnPostCode2: true
          totalPossibleCandidates: 0
          totalMatches: 6
          objectId: objectId
      properties:
        responses:
          items:
            $ref: '#/components/schemas/GeocodeServiceResponse'
          type: array
      type: object
      xml:
        name: GeocodeServiceResponseList
    ReverseGeocodeRequest:
      example:
        preferences:
          clientCoordSysName: clientCoordSysName
          squeeze: squeeze
          distance: distance
          outputRecordType: outputRecordType
          latLongFormat: latLongFormat
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnFieldsDescriptor:
            returnStreetAddressFields: true
            returnAllCustomFields: true
            returnUnitInformation: true
            returnMatchDescriptor: true
            returnedCustomFieldKeys:
            - returnedCustomFieldKeys
            - returnedCustomFieldKeys
          clientLocale: clientLocale
          maxReturnedCandidates: maxReturnedCandidates
          preferredDictionaryOrders:
          - preferredDictionaryOrders
          - preferredDictionaryOrders
          streetOffset: streetOffset
          matchMode: matchMode
          mustMatchFields:
            matchOnAreaName1: true
            matchOnAreaName3: true
            matchOnAreaName2: true
            matchOnAreaName4: true
            matchOnStreetType: true
            matchOnStreetDirectional: true
            matchOnAddressNumber: true
            matchOnAllStreetFields: true
            matchOnPlaceName: true
            matchOnInputFields: true
            matchOnStreetName: true
            matchOnPostCode1: true
            matchOnPostCode2: true
          latLongOffset: latLongOffset
          returnCensusFields: returnCensusFields
          streetOffsetUnits: streetOffsetUnits
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          fallbackToPostal: fallbackToPostal
          outputCasing: outputCasing
          cornerOffsetUnits: cornerOffsetUnits
          returnAllCandidateInfo: true
          returnLatLongFields: returnLatLongFields
          fallbackToGeographic: fallbackToGeographic
          distanceUnits: distanceUnits
          cornerOffset: cornerOffset
        points:
        - country: country
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates:
            - 5.962133916683182
            - 5.962133916683182
            type: type
          objectId: objectId
        - country: country
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates:
            - 5.962133916683182
            - 5.962133916683182
            type: type
          objectId: objectId
      properties:
        preferences:
          $ref: '#/components/schemas/GeocodePreferences'
        points:
          items:
            $ref: '#/components/schemas/Points'
          type: array
      required:
      - points
      type: object
    GeocodePreferences:
      example:
        clientCoordSysName: clientCoordSysName
        squeeze: squeeze
        distance: distance
        outputRecordType: outputRecordType
        latLongFormat: latLongFormat
        useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
        returnFieldsDescriptor:
          returnStreetAddressFields: true
          returnAllCustomFields: true
          returnUnitInformation: true
          returnMatchDescriptor: true
          returnedCustomFieldKeys:
          - returnedCustomFieldKeys
          - returnedCustomFieldKeys
        clientLocale: clientLocale
        maxReturnedCandidates: maxReturnedCandidates
        preferredDictionaryOrders:
        - preferredDictionaryOrders
        - preferredDictionaryOrders
        streetOffset: streetOffset
        matchMode: matchMode
        mustMatchFields:
          matchOnAreaName1: true
          matchOnAreaName3: true
          matchOnAreaName2: true
          matchOnAreaName4: true
          matchOnStreetType: true
          matchOnStreetDirectional: true
          matchOnAddressNumber: true
          matchOnAllStreetFields: true
          matchOnPlaceName: true
          matchOnInputFields: true
          matchOnStreetName: true
          matchOnPostCode1: true
          matchOnPostCode2: true
        latLongOffset: latLongOffset
        returnCensusFields: returnCensusFields
        streetOffsetUnits: streetOffsetUnits
        customPreferences:
          key: '{}'
        defaultBufferWidth: defaultBufferWidth
        fallbackToPostal: fallbackToPostal
        outputCasing: outputCasing
        cornerOffsetUnits: cornerOffsetUnits
        returnAllCandidateInfo: true
        returnLatLongFields: returnLatLongFields
        fallbackToGeographic: fallbackToGeographic
        distanceUnits: distanceUnits
        cornerOffset: cornerOffset
      properties:
        returnAllCandidateInfo:
          type: boolean
        fallbackToGeographic:
          type: string
        fallbackToPostal:
          type: string
        maxReturnedCandidates:
          type: string
        distance:
          type: string
        streetOffset:
          type: string
        cornerOffset:
          type: string
        matchMode:
          type: string
        clientLocale:
          type: string
        clientCoordSysName:
          type: string
        distanceUnits:
          type: string
        streetOffsetUnits:
          type: string
        cornerOffsetUnits:
          type: string
        mustMatchFields:
          $ref: '#/components/schemas/FieldsMatching'
        returnFieldsDescriptor:
          $ref: '#/components/schemas/ReturnFieldsDescriptor'
        outputRecordType:
          type: string
        customPreferences:
          additionalProperties:
            type: object
          type: object
        preferredDictionaryOrders:
          items:
            type: string
          type: array
        outputCasing:
          type: string
        latLongOffset:
          type: string
        squeeze:
          type: string
        returnLatLongFields:
          type: string
        useGeoTaxAuxiliaryFile:
          type: string
        latLongFormat:
          type: string
        defaultBufferWidth:
          type: string
        returnCensusFields:
          type: string
      required:
      - cornerOffset
      - distance
      - fallbackToGeographic
      - fallbackToPostal
      - maxReturnedCandidates
      - returnAllCandidateInfo
      - streetOffset
      type: object
    ReturnFieldsDescriptor:
      example:
        returnStreetAddressFields: true
        returnAllCustomFields: true
        returnUnitInformation: true
        returnMatchDescriptor: true
        returnedCustomFieldKeys:
        - returnedCustomFieldKeys
        - returnedCustomFieldKeys
      properties:
        returnAllCustomFields:
          type: boolean
        returnMatchDescriptor:
          type: boolean
        returnStreetAddressFields:
          type: boolean
        returnUnitInformation:
          type: boolean
        returnedCustomFieldKeys:
          items:
            type: string
          type: array
      type: object
    Points:
      example:
        country: country
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates:
          - 5.962133916683182
          - 5.962133916683182
          type: type
        objectId: objectId
      properties:
        objectId:
          type: string
        country:
          type: string
        geometry:
          $ref: '#/components/schemas/GeoPos'
      required:
      - country
      - geometry
      type: object
    GeocodeRequest:
      example:
        preferences:
          clientCoordSysName: clientCoordSysName
          squeeze: squeeze
          distance: distance
          outputRecordType: outputRecordType
          latLongFormat: latLongFormat
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnFieldsDescriptor:
            returnStreetAddressFields: true
            returnAllCustomFields: true
            returnUnitInformation: true
            returnMatchDescriptor: true
            returnedCustomFieldKeys:
            - returnedCustomFieldKeys
            - returnedCustomFieldKeys
          clientLocale: clientLocale
          maxReturnedCandidates: maxReturnedCandidates
          preferredDictionaryOrders:
          - preferredDictionaryOrders
          - preferredDictionaryOrders
          streetOffset: streetOffset
          matchMode: matchMode
          mustMatchFields:
            matchOnAreaName1: true
            matchOnAreaName3: true
            matchOnAreaName2: true
            matchOnAreaName4: true
            matchOnStreetType: true
            matchOnStreetDirectional: true
            matchOnAddressNumber: true
            matchOnAllStreetFields: true
            matchOnPlaceName: true
            matchOnInputFields: true
            matchOnStreetName: true
            matchOnPostCode1: true
            matchOnPostCode2: true
          latLongOffset: latLongOffset
          returnCensusFields: returnCensusFields
          streetOffsetUnits: streetOffsetUnits
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          fallbackToPostal: fallbackToPostal
          outputCasing: outputCasing
          cornerOffsetUnits: cornerOffsetUnits
          returnAllCandidateInfo: true
          returnLatLongFields: returnLatLongFields
          fallbackToGeographic: fallbackToGeographic
          distanceUnits: distanceUnits
          cornerOffset: cornerOffset
        addresses:
        - country: country
          customFields:
            key: '{}'
          postCode2: postCode2
          unitType: unitType
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          streetName: streetName
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          mainAddressLine: mainAddressLine
          placeName: placeName
          objectId: objectId
          addressLastLine: addressLastLine
          unitValue: unitValue
        - country: country
          customFields:
            key: '{}'
          postCode2: postCode2
          unitType: unitType
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          streetName: streetName
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          mainAddressLine: mainAddressLine
          placeName: placeName
          objectId: objectId
          addressLastLine: addressLastLine
          unitValue: unitValue
        type: type
      properties:
        type:
          type: string
        preferences:
          $ref: '#/components/schemas/GeocodePreferences'
        addresses:
          items:
            $ref: '#/components/schemas/GeocodeAddress'
          type: array
      required:
      - addresses
      type: object
    KeyLookupRequest:
      example:
        preferences:
          clientCoordSysName: clientCoordSysName
          squeeze: squeeze
          distance: distance
          outputRecordType: outputRecordType
          latLongFormat: latLongFormat
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnFieldsDescriptor:
            returnStreetAddressFields: true
            returnAllCustomFields: true
            returnUnitInformation: true
            returnMatchDescriptor: true
            returnedCustomFieldKeys:
            - returnedCustomFieldKeys
            - returnedCustomFieldKeys
          clientLocale: clientLocale
          maxReturnedCandidates: maxReturnedCandidates
          preferredDictionaryOrders:
          - preferredDictionaryOrders
          - preferredDictionaryOrders
          streetOffset: streetOffset
          matchMode: matchMode
          mustMatchFields:
            matchOnAreaName1: true
            matchOnAreaName3: true
            matchOnAreaName2: true
            matchOnAreaName4: true
            matchOnStreetType: true
            matchOnStreetDirectional: true
            matchOnAddressNumber: true
            matchOnAllStreetFields: true
            matchOnPlaceName: true
            matchOnInputFields: true
            matchOnStreetName: true
            matchOnPostCode1: true
            matchOnPostCode2: true
          latLongOffset: latLongOffset
          returnCensusFields: returnCensusFields
          streetOffsetUnits: streetOffsetUnits
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          fallbackToPostal: fallbackToPostal
          outputCasing: outputCasing
          cornerOffsetUnits: cornerOffsetUnits
          returnAllCandidateInfo: true
          returnLatLongFields: returnLatLongFields
          fallbackToGeographic: fallbackToGeographic
          distanceUnits: distanceUnits
          cornerOffset: cornerOffset
        keys:
        - country: country
          value: value
          objectId: objectId
        - country: country
          value: value
          objectId: objectId
        type: type
      properties:
        type:
          type: string
        preferences:
          $ref: '#/components/schemas/GeocodePreferences'
        keys:
          items:
            $ref: '#/components/schemas/keys'
          type: array
      type: object
      xml:
        name: keyLookupRequest
    keys:
      example:
        country: country
        value: value
        objectId: objectId
      properties:
        objectId:
          type: string
        country:
          type: string
        value:
          type: string
      type: object
      xml:
        name: keys
    PBKeyResponse:
      example:
        key: key
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        key:
          type: string
        matchedAddress:
          $ref: '#/components/schemas/address'
      type: object
      xml:
        name: pbKeyResponse
    address:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    PBKeyResponseList:
      example:
        pbkey:
        - objectId: objectId
          key: key
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - objectId: objectId
          key: key
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        pbkey:
          items:
            $ref: '#/components/schemas/pbkey'
          type: array
      type: object
      xml:
        name: pbKeyResponse
    pbkey:
      example:
        objectId: objectId
        key: key
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        key:
          type: string
        matchedAddress:
          $ref: '#/components/schemas/address'
      type: object
      xml:
        name: pbkey
    PBKeyAddressRequest:
      example:
        addresses:
        - country: country
          customFields:
            key: '{}'
          postCode2: postCode2
          unitType: unitType
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          streetName: streetName
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          mainAddressLine: mainAddressLine
          placeName: placeName
          objectId: objectId
          addressLastLine: addressLastLine
          unitValue: unitValue
        - country: country
          customFields:
            key: '{}'
          postCode2: postCode2
          unitType: unitType
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          streetName: streetName
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          mainAddressLine: mainAddressLine
          placeName: placeName
          objectId: objectId
          addressLastLine: addressLastLine
          unitValue: unitValue
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/GeocodeAddress'
          type: array
          xml:
            name: address
      required:
      - addresses
      type: object
      xml:
        name: keyByAddressRequest
    TaxRateResponse:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        gnisCode: gnisCode
        confidence: 0.8008281904610115
        jurisdiction:
          county:
            code: code
            name: name
          spds:
          - updateDate: updateDate
            districtCode: districtCode
            districtName: districtName
            compiledDate: compiledDate
            versionDate: versionDate
            districtNumber: districtNumber
            effectiveDate: effectiveDate
          - updateDate: updateDate
            districtCode: districtCode
            districtName: districtName
            compiledDate: compiledDate
            versionDate: versionDate
            districtNumber: districtNumber
            effectiveDate: effectiveDate
          state:
            code: code
            name: name
          place:
            lastVerifiedDate: lastVerifiedDate
            classCode: classCode
            lastAnnexedDate: lastAnnexedDate
            lastUpdatedDate: lastUpdatedDate
            code: code
            gnisCode: gnisCode
            name: name
            selfCollected: true
            incorporatedFlag: incorporatedFlag
        census:
          cbsa:
            code: code
            name: name
          matchCode: matchCode
          tract: tract
          matchLevel: matchLevel
          mcd:
            code: code
            name: name
        latLongFields:
          matchCode: matchCode
          matchLevel: matchLevel
          geometry:
            coordinates:
            - coordinates
            - coordinates
            type: type
          streetMatchCode: streetMatchCode
          streetMatchLevel: streetMatchLevel
        vendorName: vendorName
        salesTax:
          specialTaxRulesApplied: true
          stateTaxRate: 5.962133916683182
          municipalTaxRate: 9.301444243932576
          totalTaxRate: 6.027456183070403
          municipalTaxAmount: 3.616076749251911
          countyTaxRate: 2.3021358869347655
          totalTaxAmount: 1.4658129805029452
          countyTaxAmount: 7.061401241503109
          spdsTax:
          - taxRate: 2.027123023002322
            taxAmount: 4.145608029883936
            districtNumber: districtNumber
          - taxRate: 2.027123023002322
            taxAmount: 4.145608029883936
            districtNumber: districtNumber
          specialTaxRulesDescriptor: specialTaxRulesDescriptor
          stateTaxAmount: 5.637376656633329
        objectId: objectId
        useTax:
          specialTaxRulesApplied: true
          stateTaxRate: 1.0246457001441578
          municipalTaxRate: 1.1730742509559433
          totalTaxRate: 7.386281948385884
          municipalTaxAmount: 4.965218492984954
          countyTaxRate: 6.84685269835264
          totalTaxAmount: 1.2315135367772556
          countyTaxAmount: 7.457744773683766
          spdsTax:
          - taxRate: 2.027123023002322
            taxAmount: 4.145608029883936
            districtNumber: districtNumber
          - taxRate: 2.027123023002322
            taxAmount: 4.145608029883936
            districtNumber: districtNumber
          specialTaxRulesDescriptor: specialTaxRulesDescriptor
          stateTaxAmount: 1.4894159098541704
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        vendorName:
          type: string
        gnisCode:
          type: string
        confidence:
          format: double
          type: number
        jurisdiction:
          $ref: '#/components/schemas/TaxJurisdiction'
        matchedAddress:
          $ref: '#/components/schemas/TaxRateMatchedAddress'
        salesTax:
          $ref: '#/components/schemas/SalesTax'
        useTax:
          $ref: '#/components/schemas/UseTax'
        census:
          $ref: '#/components/schemas/Census'
        latLongFields:
          $ref: '#/components/schemas/LatLongFields'
        address:
          $ref: '#/components/schemas/TaxRateMatchedAddress'
      type: object
      xml:
        name: taxResponse
    TaxJurisdiction:
      example:
        county:
          code: code
          name: name
        spds:
        - updateDate: updateDate
          districtCode: districtCode
          districtName: districtName
          compiledDate: compiledDate
          versionDate: versionDate
          districtNumber: districtNumber
          effectiveDate: effectiveDate
        - updateDate: updateDate
          districtCode: districtCode
          districtName: districtName
          compiledDate: compiledDate
          versionDate: versionDate
          districtNumber: districtNumber
          effectiveDate: effectiveDate
        state:
          code: code
          name: name
        place:
          lastVerifiedDate: lastVerifiedDate
          classCode: classCode
          lastAnnexedDate: lastAnnexedDate
          lastUpdatedDate: lastUpdatedDate
          code: code
          gnisCode: gnisCode
          name: name
          selfCollected: true
          incorporatedFlag: incorporatedFlag
      properties:
        state:
          $ref: '#/components/schemas/TaxState'
        county:
          $ref: '#/components/schemas/TaxCounty'
        place:
          $ref: '#/components/schemas/TaxPlace'
        spds:
          items:
            $ref: '#/components/schemas/SpecialPurposeDistrict'
          type: array
          xml:
            wrapped: true
      type: object
    TaxState:
      example:
        code: code
        name: name
      properties:
        code:
          type: string
        name:
          type: string
      type: object
    TaxCounty:
      example:
        code: code
        name: name
      properties:
        code:
          type: string
        name:
          type: string
      type: object
    TaxPlace:
      example:
        lastVerifiedDate: lastVerifiedDate
        classCode: classCode
        lastAnnexedDate: lastAnnexedDate
        lastUpdatedDate: lastUpdatedDate
        code: code
        gnisCode: gnisCode
        name: name
        selfCollected: true
        incorporatedFlag: incorporatedFlag
      properties:
        name:
          type: string
        code:
          type: string
        gnisCode:
          type: string
        selfCollected:
          type: boolean
        classCode:
          type: string
        incorporatedFlag:
          type: string
        lastAnnexedDate:
          type: string
        lastUpdatedDate:
          type: string
        lastVerifiedDate:
          type: string
      type: object
    SpecialPurposeDistrict:
      example:
        updateDate: updateDate
        districtCode: districtCode
        districtName: districtName
        compiledDate: compiledDate
        versionDate: versionDate
        districtNumber: districtNumber
        effectiveDate: effectiveDate
      properties:
        districtName:
          type: string
        districtCode:
          type: string
        districtNumber:
          type: string
          xml:
            attribute: true
        versionDate:
          type: string
        effectiveDate:
          type: string
        compiledDate:
          type: string
        updateDate:
          type: string
      type: object
      xml:
        name: spd
    TaxRateMatchedAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        postCode1: postCode1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCode1:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    SalesTax:
      example:
        specialTaxRulesApplied: true
        stateTaxRate: 5.962133916683182
        municipalTaxRate: 9.301444243932576
        totalTaxRate: 6.027456183070403
        municipalTaxAmount: 3.616076749251911
        countyTaxRate: 2.3021358869347655
        totalTaxAmount: 1.4658129805029452
        countyTaxAmount: 7.061401241503109
        spdsTax:
        - taxRate: 2.027123023002322
          taxAmount: 4.145608029883936
          districtNumber: districtNumber
        - taxRate: 2.027123023002322
          taxAmount: 4.145608029883936
          districtNumber: districtNumber
        specialTaxRulesDescriptor: specialTaxRulesDescriptor
        stateTaxAmount: 5.637376656633329
      properties:
        specialTaxRulesApplied:
          type: boolean
        specialTaxRulesDescriptor:
          type: string
        totalTaxRate:
          format: double
          type: number
        totalTaxAmount:
          format: double
          type: number
        stateTaxRate:
          format: double
          type: number
        stateTaxAmount:
          format: double
          type: number
        countyTaxRate:
          format: double
          type: number
        countyTaxAmount:
          format: double
          type: number
        municipalTaxRate:
          format: double
          type: number
        municipalTaxAmount:
          format: double
          type: number
        spdsTax:
          items:
            $ref: '#/components/schemas/SpecialPurposeDistrictTax'
          type: array
          xml:
            wrapped: true
      type: object
    SpecialPurposeDistrictTax:
      example:
        taxRate: 2.027123023002322
        taxAmount: 4.145608029883936
        districtNumber: districtNumber
      properties:
        districtNumber:
          type: string
          xml:
            attribute: true
        taxRate:
          format: double
          type: number
        taxAmount:
          format: double
          type: number
      type: object
      xml:
        name: spdTax
    UseTax:
      example:
        specialTaxRulesApplied: true
        stateTaxRate: 1.0246457001441578
        municipalTaxRate: 1.1730742509559433
        totalTaxRate: 7.386281948385884
        municipalTaxAmount: 4.965218492984954
        countyTaxRate: 6.84685269835264
        totalTaxAmount: 1.2315135367772556
        countyTaxAmount: 7.457744773683766
        spdsTax:
        - taxRate: 2.027123023002322
          taxAmount: 4.145608029883936
          districtNumber: districtNumber
        - taxRate: 2.027123023002322
          taxAmount: 4.145608029883936
          districtNumber: districtNumber
        specialTaxRulesDescriptor: specialTaxRulesDescriptor
        stateTaxAmount: 1.4894159098541704
      properties:
        specialTaxRulesApplied:
          type: boolean
        specialTaxRulesDescriptor:
          type: string
        totalTaxRate:
          format: double
          type: number
        totalTaxAmount:
          format: double
          type: number
        stateTaxRate:
          format: double
          type: number
        stateTaxAmount:
          format: double
          type: number
        countyTaxRate:
          format: double
          type: number
        countyTaxAmount:
          format: double
          type: number
        municipalTaxRate:
          format: double
          type: number
        municipalTaxAmount:
          format: double
          type: number
        spdsTax:
          items:
            $ref: '#/components/schemas/SpecialPurposeDistrictTax'
          type: array
          xml:
            wrapped: true
      type: object
    Census:
      example:
        cbsa:
          code: code
          name: name
        matchCode: matchCode
        tract: tract
        matchLevel: matchLevel
        mcd:
          code: code
          name: name
      properties:
        cbsa:
          $ref: '#/components/schemas/Cbsa'
        matchLevel:
          type: string
        matchCode:
          type: string
        tract:
          type: string
        mcd:
          $ref: '#/components/schemas/Mcd'
      type: object
    Cbsa:
      example:
        code: code
        name: name
      properties:
        name:
          type: string
        code:
          type: string
      type: object
    Mcd:
      example:
        code: code
        name: name
      properties:
        name:
          type: string
        code:
          type: string
      type: object
    LatLongFields:
      example:
        matchCode: matchCode
        matchLevel: matchLevel
        geometry:
          coordinates:
          - coordinates
          - coordinates
          type: type
        streetMatchCode: streetMatchCode
        streetMatchLevel: streetMatchLevel
      properties:
        matchCode:
          type: string
        matchLevel:
          type: string
        streetMatchCode:
          type: string
        streetMatchLevel:
          type: string
        geometry:
          $ref: '#/components/schemas/LocalTaxGeometry'
      type: object
    LocalTaxGeometry:
      example:
        coordinates:
        - coordinates
        - coordinates
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            type: string
          type: array
      required:
      - type
      type: object
    taxResponses:
      example:
        taxResponses:
        - address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          gnisCode: gnisCode
          confidence: 0.8008281904610115
          jurisdiction:
            county:
              code: code
              name: name
            spds:
            - updateDate: updateDate
              districtCode: districtCode
              districtName: districtName
              compiledDate: compiledDate
              versionDate: versionDate
              districtNumber: districtNumber
              effectiveDate: effectiveDate
            - updateDate: updateDate
              districtCode: districtCode
              districtName: districtName
              compiledDate: compiledDate
              versionDate: versionDate
              districtNumber: districtNumber
              effectiveDate: effectiveDate
            state:
              code: code
              name: name
            place:
              lastVerifiedDate: lastVerifiedDate
              classCode: classCode
              lastAnnexedDate: lastAnnexedDate
              lastUpdatedDate: lastUpdatedDate
              code: code
              gnisCode: gnisCode
              name: name
              selfCollected: true
              incorporatedFlag: incorporatedFlag
          census:
            cbsa:
              code: code
              name: name
            matchCode: matchCode
            tract: tract
            matchLevel: matchLevel
            mcd:
              code: code
              name: name
          latLongFields:
            matchCode: matchCode
            matchLevel: matchLevel
            geometry:
              coordinates:
              - coordinates
              - coordinates
              type: type
            streetMatchCode: streetMatchCode
            streetMatchLevel: streetMatchLevel
          vendorName: vendorName
          salesTax:
            specialTaxRulesApplied: true
            stateTaxRate: 5.962133916683182
            municipalTaxRate: 9.301444243932576
            totalTaxRate: 6.027456183070403
            municipalTaxAmount: 3.616076749251911
            countyTaxRate: 2.3021358869347655
            totalTaxAmount: 1.4658129805029452
            countyTaxAmount: 7.061401241503109
            spdsTax:
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            specialTaxRulesDescriptor: specialTaxRulesDescriptor
            stateTaxAmount: 5.637376656633329
          objectId: objectId
          useTax:
            specialTaxRulesApplied: true
            stateTaxRate: 1.0246457001441578
            municipalTaxRate: 1.1730742509559433
            totalTaxRate: 7.386281948385884
            municipalTaxAmount: 4.965218492984954
            countyTaxRate: 6.84685269835264
            totalTaxAmount: 1.2315135367772556
            countyTaxAmount: 7.457744773683766
            spdsTax:
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            specialTaxRulesDescriptor: specialTaxRulesDescriptor
            stateTaxAmount: 1.4894159098541704
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          gnisCode: gnisCode
          confidence: 0.8008281904610115
          jurisdiction:
            county:
              code: code
              name: name
            spds:
            - updateDate: updateDate
              districtCode: districtCode
              districtName: districtName
              compiledDate: compiledDate
              versionDate: versionDate
              districtNumber: districtNumber
              effectiveDate: effectiveDate
            - updateDate: updateDate
              districtCode: districtCode
              districtName: districtName
              compiledDate: compiledDate
              versionDate: versionDate
              districtNumber: districtNumber
              effectiveDate: effectiveDate
            state:
              code: code
              name: name
            place:
              lastVerifiedDate: lastVerifiedDate
              classCode: classCode
              lastAnnexedDate: lastAnnexedDate
              lastUpdatedDate: lastUpdatedDate
              code: code
              gnisCode: gnisCode
              name: name
              selfCollected: true
              incorporatedFlag: incorporatedFlag
          census:
            cbsa:
              code: code
              name: name
            matchCode: matchCode
            tract: tract
            matchLevel: matchLevel
            mcd:
              code: code
              name: name
          latLongFields:
            matchCode: matchCode
            matchLevel: matchLevel
            geometry:
              coordinates:
              - coordinates
              - coordinates
              type: type
            streetMatchCode: streetMatchCode
            streetMatchLevel: streetMatchLevel
          vendorName: vendorName
          salesTax:
            specialTaxRulesApplied: true
            stateTaxRate: 5.962133916683182
            municipalTaxRate: 9.301444243932576
            totalTaxRate: 6.027456183070403
            municipalTaxAmount: 3.616076749251911
            countyTaxRate: 2.3021358869347655
            totalTaxAmount: 1.4658129805029452
            countyTaxAmount: 7.061401241503109
            spdsTax:
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            specialTaxRulesDescriptor: specialTaxRulesDescriptor
            stateTaxAmount: 5.637376656633329
          objectId: objectId
          useTax:
            specialTaxRulesApplied: true
            stateTaxRate: 1.0246457001441578
            municipalTaxRate: 1.1730742509559433
            totalTaxRate: 7.386281948385884
            municipalTaxAmount: 4.965218492984954
            countyTaxRate: 6.84685269835264
            totalTaxAmount: 1.2315135367772556
            countyTaxAmount: 7.457744773683766
            spdsTax:
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            - taxRate: 2.027123023002322
              taxAmount: 4.145608029883936
              districtNumber: districtNumber
            specialTaxRulesDescriptor: specialTaxRulesDescriptor
            stateTaxAmount: 1.4894159098541704
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        taxResponses:
          items:
            $ref: '#/components/schemas/TaxRateResponse'
          type: array
      type: object
      xml:
        name: taxResponses
    TaxRateLocationRequest:
      example:
        preferences:
          squeeze: squeeze
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          taxRatetypeID: taxRatetypeID
          latLongFormat: latLongFormat
          outputCasing: outputCasing
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnLatLongFields: returnLatLongFields
          distanceUnits: distanceUnits
          fallbackToGeographic: fallbackToGeographic
          latLongOffset: latLongOffset
          matchMode: matchMode
          returnCensusFields: returnCensusFields
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        preferences:
          $ref: '#/components/schemas/LocalTaxPreferences'
        locations:
          items:
            $ref: '#/components/schemas/TaxLocations'
          type: array
      required:
      - locations
      type: object
      xml:
        name: taxRateLocationRequest
    LocalTaxPreferences:
      example:
        squeeze: squeeze
        customPreferences:
          key: '{}'
        defaultBufferWidth: defaultBufferWidth
        taxRatetypeID: taxRatetypeID
        latLongFormat: latLongFormat
        outputCasing: outputCasing
        useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
        returnLatLongFields: returnLatLongFields
        distanceUnits: distanceUnits
        fallbackToGeographic: fallbackToGeographic
        latLongOffset: latLongOffset
        matchMode: matchMode
        returnCensusFields: returnCensusFields
      properties:
        customPreferences:
          additionalProperties:
            type: object
          type: object
        defaultBufferWidth:
          type: string
        distanceUnits:
          type: string
        fallbackToGeographic:
          type: string
        latLongFormat:
          type: string
        latLongOffset:
          type: string
        matchMode:
          type: string
        outputCasing:
          type: string
        returnCensusFields:
          type: string
        returnLatLongFields:
          type: string
        squeeze:
          type: string
        taxRatetypeID:
          type: string
        useGeoTaxAuxiliaryFile:
          type: string
      required:
      - fallbackToGeographic
      type: object
    TaxLocations:
      example:
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        objectId: objectId
        purchaseAmount: purchaseAmount
      properties:
        geometry:
          $ref: '#/components/schemas/TaxGeometry'
        purchaseAmount:
          type: string
        objectId:
          type: string
      required:
      - geometry
      type: object
    TaxGeometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      required:
      - type
      type: object
    TaxRateAddressRequest:
      example:
        taxRateAddresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          userBufferWidth: userBufferWidth
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          bufferWidth: bufferWidth
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          distanceUnits: distanceUnits
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          userBufferWidth: userBufferWidth
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          bufferWidth: bufferWidth
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          distanceUnits: distanceUnits
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          squeeze: squeeze
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          taxRatetypeID: taxRatetypeID
          latLongFormat: latLongFormat
          outputCasing: outputCasing
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnLatLongFields: returnLatLongFields
          distanceUnits: distanceUnits
          fallbackToGeographic: fallbackToGeographic
          latLongOffset: latLongOffset
          matchMode: matchMode
          returnCensusFields: returnCensusFields
      properties:
        preferences:
          $ref: '#/components/schemas/LocalTaxPreferences'
        taxRateAddresses:
          items:
            $ref: '#/components/schemas/TaxRateAddress'
          type: array
      required:
      - taxRateAddresses
      type: object
      xml:
        name: taxRateAddressRequest
    TaxRateAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        userBufferWidth: userBufferWidth
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        bufferWidth: bufferWidth
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        postCode1: postCode1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        distanceUnits: distanceUnits
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCode1:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        distanceUnits:
          type: string
        bufferWidth:
          type: string
        userBufferWidth:
          type: string
      type: object
      xml:
        name: TaxRateAddress
    TaxDistrictResponse:
      example:
        numOfIpdsFound: 6
        confidence: 0.8008281904610115
        jurisdiction:
          county:
            code: code
            name: name
          state:
            code: code
            name: name
          place:
            lastVerifiedDate: lastVerifiedDate
            classCode: classCode
            lastAnnexedDate: lastAnnexedDate
            lastUpdatedDate: lastUpdatedDate
            code: code
            gnisCode: gnisCode
            name: name
            selfCollected: true
            incorporatedFlag: incorporatedFlag
        ipds:
        - districtName: districtName
          taxCodeDescription: taxCodeDescription
          rates:
          - formatDescription: formatDescription
            name: name
            format: format
            value: value
          - formatDescription: formatDescription
            name: name
            format: format
            value: value
          districtType:
            description: description
            value: value
          boundaryBuffer:
            distanceToBorder:
              unit: unit
              value: value
            bufferRelation:
              description: description
              value: value
          id: id
          effectiveDate: effectiveDate
          expirationDate: expirationDate
        - districtName: districtName
          taxCodeDescription: taxCodeDescription
          rates:
          - formatDescription: formatDescription
            name: name
            format: format
            value: value
          - formatDescription: formatDescription
            name: name
            format: format
            value: value
          districtType:
            description: description
            value: value
          boundaryBuffer:
            distanceToBorder:
              unit: unit
              value: value
            bufferRelation:
              description: description
              value: value
          id: id
          effectiveDate: effectiveDate
          expirationDate: expirationDate
        census:
          cbsa:
            code: code
            name: name
          matchCode: matchCode
          tract: tract
          matchLevel: matchLevel
          mcd:
            code: code
            name: name
        latLongFields:
          matchCode: matchCode
          matchLevel: matchLevel
          geometry:
            coordinates:
            - coordinates
            - coordinates
            type: type
          streetMatchCode: streetMatchCode
          streetMatchLevel: streetMatchLevel
        vendorName: vendorName
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        vendorName:
          type: string
        objectId:
          type: string
        confidence:
          format: double
          type: number
        jurisdiction:
          $ref: '#/components/schemas/IPDTaxJurisdiction'
        numOfIpdsFound:
          format: int32
          type: integer
        ipds:
          items:
            $ref: '#/components/schemas/ipd'
          type: array
          xml:
            wrapped: true
        matchedAddress:
          $ref: '#/components/schemas/TaxRateMatchedAddress'
        census:
          $ref: '#/components/schemas/Census'
        latLongFields:
          $ref: '#/components/schemas/LatLongFields'
      type: object
      xml:
        name: taxDistrictResponse
    IPDTaxJurisdiction:
      example:
        county:
          code: code
          name: name
        state:
          code: code
          name: name
        place:
          lastVerifiedDate: lastVerifiedDate
          classCode: classCode
          lastAnnexedDate: lastAnnexedDate
          lastUpdatedDate: lastUpdatedDate
          code: code
          gnisCode: gnisCode
          name: name
          selfCollected: true
          incorporatedFlag: incorporatedFlag
      properties:
        state:
          $ref: '#/components/schemas/TaxState'
        county:
          $ref: '#/components/schemas/TaxCounty'
        place:
          $ref: '#/components/schemas/TaxPlace'
      type: object
    ipd:
      example:
        districtName: districtName
        taxCodeDescription: taxCodeDescription
        rates:
        - formatDescription: formatDescription
          name: name
          format: format
          value: value
        - formatDescription: formatDescription
          name: name
          format: format
          value: value
        districtType:
          description: description
          value: value
        boundaryBuffer:
          distanceToBorder:
            unit: unit
            value: value
          bufferRelation:
            description: description
            value: value
        id: id
        effectiveDate: effectiveDate
        expirationDate: expirationDate
      properties:
        id:
          type: string
          xml:
            attribute: true
        districtName:
          type: string
        districtType:
          $ref: '#/components/schemas/DistrictType'
        taxCodeDescription:
          type: string
        effectiveDate:
          type: string
        expirationDate:
          type: string
        boundaryBuffer:
          $ref: '#/components/schemas/BoundaryBuffer'
        rates:
          items:
            $ref: '#/components/schemas/rate'
          type: array
          xml:
            wrapped: true
      type: object
      xml:
        name: ipd
    DistrictType:
      example:
        description: description
        value: value
      properties:
        description:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BoundaryBuffer:
      example:
        distanceToBorder:
          unit: unit
          value: value
        bufferRelation:
          description: description
          value: value
      properties:
        bufferRelation:
          $ref: '#/components/schemas/BufferRelation'
        distanceToBorder:
          $ref: '#/components/schemas/DistanceToBorder'
      type: object
    BufferRelation:
      example:
        description: description
        value: value
      properties:
        description:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    DistanceToBorder:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    rate:
      example:
        formatDescription: formatDescription
        name: name
        format: format
        value: value
      properties:
        name:
          type: string
          xml:
            attribute: true
        format:
          type: string
          xml:
            attribute: true
        formatDescription:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: rate
    TaxDistrictResponseList:
      example:
        taxDistrictResponse:
        - numOfIpdsFound: 6
          confidence: 0.8008281904610115
          jurisdiction:
            county:
              code: code
              name: name
            state:
              code: code
              name: name
            place:
              lastVerifiedDate: lastVerifiedDate
              classCode: classCode
              lastAnnexedDate: lastAnnexedDate
              lastUpdatedDate: lastUpdatedDate
              code: code
              gnisCode: gnisCode
              name: name
              selfCollected: true
              incorporatedFlag: incorporatedFlag
          ipds:
          - districtName: districtName
            taxCodeDescription: taxCodeDescription
            rates:
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            districtType:
              description: description
              value: value
            boundaryBuffer:
              distanceToBorder:
                unit: unit
                value: value
              bufferRelation:
                description: description
                value: value
            id: id
            effectiveDate: effectiveDate
            expirationDate: expirationDate
          - districtName: districtName
            taxCodeDescription: taxCodeDescription
            rates:
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            districtType:
              description: description
              value: value
            boundaryBuffer:
              distanceToBorder:
                unit: unit
                value: value
              bufferRelation:
                description: description
                value: value
            id: id
            effectiveDate: effectiveDate
            expirationDate: expirationDate
          census:
            cbsa:
              code: code
              name: name
            matchCode: matchCode
            tract: tract
            matchLevel: matchLevel
            mcd:
              code: code
              name: name
          latLongFields:
            matchCode: matchCode
            matchLevel: matchLevel
            geometry:
              coordinates:
              - coordinates
              - coordinates
              type: type
            streetMatchCode: streetMatchCode
            streetMatchLevel: streetMatchLevel
          vendorName: vendorName
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - numOfIpdsFound: 6
          confidence: 0.8008281904610115
          jurisdiction:
            county:
              code: code
              name: name
            state:
              code: code
              name: name
            place:
              lastVerifiedDate: lastVerifiedDate
              classCode: classCode
              lastAnnexedDate: lastAnnexedDate
              lastUpdatedDate: lastUpdatedDate
              code: code
              gnisCode: gnisCode
              name: name
              selfCollected: true
              incorporatedFlag: incorporatedFlag
          ipds:
          - districtName: districtName
            taxCodeDescription: taxCodeDescription
            rates:
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            districtType:
              description: description
              value: value
            boundaryBuffer:
              distanceToBorder:
                unit: unit
                value: value
              bufferRelation:
                description: description
                value: value
            id: id
            effectiveDate: effectiveDate
            expirationDate: expirationDate
          - districtName: districtName
            taxCodeDescription: taxCodeDescription
            rates:
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            - formatDescription: formatDescription
              name: name
              format: format
              value: value
            districtType:
              description: description
              value: value
            boundaryBuffer:
              distanceToBorder:
                unit: unit
                value: value
              bufferRelation:
                description: description
                value: value
            id: id
            effectiveDate: effectiveDate
            expirationDate: expirationDate
          census:
            cbsa:
              code: code
              name: name
            matchCode: matchCode
            tract: tract
            matchLevel: matchLevel
            mcd:
              code: code
              name: name
          latLongFields:
            matchCode: matchCode
            matchLevel: matchLevel
            geometry:
              coordinates:
              - coordinates
              - coordinates
              type: type
            streetMatchCode: streetMatchCode
            streetMatchLevel: streetMatchLevel
          vendorName: vendorName
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            postCode1: postCode1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        taxDistrictResponse:
          items:
            $ref: '#/components/schemas/TaxDistrictResponse'
          type: array
      type: object
      xml:
        name: taxDistrictResponses
    IPDTaxByAddressBatchRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          squeeze: squeeze
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          taxRatetypeID: taxRatetypeID
          latLongFormat: latLongFormat
          outputCasing: outputCasing
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnLatLongFields: returnLatLongFields
          distanceUnits: distanceUnits
          fallbackToGeographic: fallbackToGeographic
          latLongOffset: latLongOffset
          matchMode: matchMode
          returnCensusFields: returnCensusFields
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/TaxRateMatchedAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/LocalTaxPreferences'
      required:
      - addresses
      type: object
      xml:
        name: taxDistrictAddressRequest
    TaxLocationRequest:
      example:
        preferences:
          squeeze: squeeze
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          taxRatetypeID: taxRatetypeID
          latLongFormat: latLongFormat
          outputCasing: outputCasing
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnLatLongFields: returnLatLongFields
          distanceUnits: distanceUnits
          fallbackToGeographic: fallbackToGeographic
          latLongOffset: latLongOffset
          matchMode: matchMode
          returnCensusFields: returnCensusFields
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        preferences:
          $ref: '#/components/schemas/LocalTaxPreferences'
        locations:
          items:
            $ref: '#/components/schemas/TaxLocations'
          type: array
      required:
      - locations
      type: object
      xml:
        name: taxLocationRequest
    TaxAddressRequest:
      example:
        taxAddresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          userBufferWidth: userBufferWidth
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          bufferWidth: bufferWidth
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          purchaseAmount: purchaseAmount
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          distanceUnits: distanceUnits
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          userBufferWidth: userBufferWidth
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          bufferWidth: bufferWidth
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          purchaseAmount: purchaseAmount
          areaName1: areaName1
          postCode1: postCode1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          distanceUnits: distanceUnits
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          squeeze: squeeze
          customPreferences:
            key: '{}'
          defaultBufferWidth: defaultBufferWidth
          taxRatetypeID: taxRatetypeID
          latLongFormat: latLongFormat
          outputCasing: outputCasing
          useGeoTaxAuxiliaryFile: useGeoTaxAuxiliaryFile
          returnLatLongFields: returnLatLongFields
          distanceUnits: distanceUnits
          fallbackToGeographic: fallbackToGeographic
          latLongOffset: latLongOffset
          matchMode: matchMode
          returnCensusFields: returnCensusFields
      properties:
        preferences:
          $ref: '#/components/schemas/LocalTaxPreferences'
        taxAddresses:
          items:
            $ref: '#/components/schemas/TaxAddress'
          type: array
      required:
      - taxAddresses
      type: object
      xml:
        name: taxAddressRequest
    TaxAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        userBufferWidth: userBufferWidth
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        bufferWidth: bufferWidth
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        purchaseAmount: purchaseAmount
        areaName1: areaName1
        postCode1: postCode1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        distanceUnits: distanceUnits
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCode1:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        distanceUnits:
          type: string
        bufferWidth:
          type: string
        userBufferWidth:
          type: string
        purchaseAmount:
          type: string
      type: object
      xml:
        name: TaxAddress
    NeighborhoodsResponse:
      example:
        location:
        - place:
            level: level
            name:
            - langISOCode: langISOCode
              langType: langType
              value: value
            - langISOCode: langISOCode
              langType: langType
              value: value
            levelName: levelName
        - place:
            level: level
            name:
            - langISOCode: langISOCode
              langType: langType
              value: value
            - langISOCode: langISOCode
              langType: langType
              value: value
            levelName: levelName
      properties:
        location:
          items:
            $ref: '#/components/schemas/location'
          type: array
      type: object
      xml:
        name: locations
    location:
      example:
        place:
          level: level
          name:
          - langISOCode: langISOCode
            langType: langType
            value: value
          - langISOCode: langISOCode
            langType: langType
            value: value
          levelName: levelName
      properties:
        place:
          $ref: '#/components/schemas/place'
      type: object
      xml:
        name: location
    place:
      example:
        level: level
        name:
        - langISOCode: langISOCode
          langType: langType
          value: value
        - langISOCode: langISOCode
          langType: langType
          value: value
        levelName: levelName
      properties:
        name:
          items:
            $ref: '#/components/schemas/name'
          type: array
        levelName:
          type: string
          xml:
            attribute: true
        level:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: place
    name:
      example:
        langISOCode: langISOCode
        langType: langType
        value: value
      properties:
        langISOCode:
          type: string
          xml:
            attribute: true
        langType:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: name
    poiCount:
      example:
        totalPoisFound: 0
      properties:
        totalPoisFound:
          format: int32
          type: integer
      type: object
      xml:
        name: poiCount
    PoiCountRequest:
      example:
        fuzzyOnName: fuzzyOnName
        sicCode: sicCode
        name: name
        specificMatchOn: specificMatchOn
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        categoryCode: categoryCode
        type: type
        matchMode: matchMode
        geometryAsText: geometryAsText
      properties:
        name:
          type: string
        type:
          type: string
        categoryCode:
          type: string
        sicCode:
          type: string
        fuzzyOnName:
          type: string
        matchMode:
          type: string
        specificMatchOn:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        geometryAsText:
          type: string
      type: object
      xml:
        name: poiCountRequest
    PlacesResponse:
      example:
        candidates: candidates
        page: page
        poi:
        - parentPbkey: parentPbkey
          distance:
            unit: unit
            value: value
          salesVolume:
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          hierarchyCode: hierarchyCode
          businessId:
            type: type
            value: value
          open24Hours: open24Hours
          employeeCount:
            inLocalBranch: inLocalBranch
            inOrganization: inOrganization
          subsidaryIndicator: subsidaryIndicator
          domesticUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          globalUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          familyMembers: familyMembers
          poiClassification:
            alternateIndustryCode: alternateIndustryCode
            sic:
              sicCode: sicCode
              primarySicCode: primarySicCode
              businessLine: businessLine
              sicCodeDescription: sicCodeDescription
              secondarySicCode: secondarySicCode
            category:
              tradeGroup: tradeGroup
              subClass: subClass
              tradeDivision: tradeDivision
              categoryCode: categoryCode
              class: class
          globalUltimateIndicator: globalUltimateIndicator
          tradeName: tradeName
          geocodeConfidence: geocodeConfidence
          goodsAgentCodeDescription: goodsAgentCodeDescription
          organizationStatusCodeDescription: organizationStatusCodeDescription
          subsidaryIndicatorDescription: subsidaryIndicatorDescription
          parentBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          id: id
          poiId: poiId
          ceoName: ceoName
          yearStart: yearStart
          franchiseName: franchiseName
          brandName: brandName
          tickerSymbol: tickerSymbol
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            countryAccessCode: countryAccessCode
            fax: fax
            email: email
            url: url
          ceoTitle: ceoTitle
          goodsAgentCode: goodsAgentCode
          organizationStatusCode: organizationStatusCode
          relevanceScore: relevanceScore
          pbkey: pbkey
          name: name
          exchangeName: exchangeName
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          legalStatusCode: legalStatusCode
        - parentPbkey: parentPbkey
          distance:
            unit: unit
            value: value
          salesVolume:
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          hierarchyCode: hierarchyCode
          businessId:
            type: type
            value: value
          open24Hours: open24Hours
          employeeCount:
            inLocalBranch: inLocalBranch
            inOrganization: inOrganization
          subsidaryIndicator: subsidaryIndicator
          domesticUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          globalUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          familyMembers: familyMembers
          poiClassification:
            alternateIndustryCode: alternateIndustryCode
            sic:
              sicCode: sicCode
              primarySicCode: primarySicCode
              businessLine: businessLine
              sicCodeDescription: sicCodeDescription
              secondarySicCode: secondarySicCode
            category:
              tradeGroup: tradeGroup
              subClass: subClass
              tradeDivision: tradeDivision
              categoryCode: categoryCode
              class: class
          globalUltimateIndicator: globalUltimateIndicator
          tradeName: tradeName
          geocodeConfidence: geocodeConfidence
          goodsAgentCodeDescription: goodsAgentCodeDescription
          organizationStatusCodeDescription: organizationStatusCodeDescription
          subsidaryIndicatorDescription: subsidaryIndicatorDescription
          parentBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          id: id
          poiId: poiId
          ceoName: ceoName
          yearStart: yearStart
          franchiseName: franchiseName
          brandName: brandName
          tickerSymbol: tickerSymbol
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            countryAccessCode: countryAccessCode
            fax: fax
            email: email
            url: url
          ceoTitle: ceoTitle
          goodsAgentCode: goodsAgentCode
          organizationStatusCode: organizationStatusCode
          relevanceScore: relevanceScore
          pbkey: pbkey
          name: name
          exchangeName: exchangeName
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          legalStatusCode: legalStatusCode
        totalMatchingCandidates: totalMatchingCandidates
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        page:
          type: string
          xml:
            attribute: true
        candidates:
          type: string
          xml:
            attribute: true
        totalMatchingCandidates:
          type: string
          xml:
            attribute: true
        poi:
          items:
            $ref: '#/components/schemas/poi'
          type: array
        matchedAddress:
          $ref: '#/components/schemas/address'
      type: object
      xml:
        name: pois
    poi:
      example:
        parentPbkey: parentPbkey
        distance:
          unit: unit
          value: value
        salesVolume:
        - currencyCode: currencyCode
          worldBaseCurrencyCode: worldBaseCurrencyCode
          value: value
        - currencyCode: currencyCode
          worldBaseCurrencyCode: worldBaseCurrencyCode
          value: value
        hierarchyCode: hierarchyCode
        businessId:
          type: type
          value: value
        open24Hours: open24Hours
        employeeCount:
          inLocalBranch: inLocalBranch
          inOrganization: inOrganization
        subsidaryIndicator: subsidaryIndicator
        domesticUltimateBusiness:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          name: name
          id: id
        globalUltimateBusiness:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          name: name
          id: id
        familyMembers: familyMembers
        poiClassification:
          alternateIndustryCode: alternateIndustryCode
          sic:
            sicCode: sicCode
            primarySicCode: primarySicCode
            businessLine: businessLine
            sicCodeDescription: sicCodeDescription
            secondarySicCode: secondarySicCode
          category:
            tradeGroup: tradeGroup
            subClass: subClass
            tradeDivision: tradeDivision
            categoryCode: categoryCode
            class: class
        globalUltimateIndicator: globalUltimateIndicator
        tradeName: tradeName
        geocodeConfidence: geocodeConfidence
        goodsAgentCodeDescription: goodsAgentCodeDescription
        organizationStatusCodeDescription: organizationStatusCodeDescription
        subsidaryIndicatorDescription: subsidaryIndicatorDescription
        parentBusiness:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          name: name
          id: id
        id: id
        poiId: poiId
        ceoName: ceoName
        yearStart: yearStart
        franchiseName: franchiseName
        brandName: brandName
        tickerSymbol: tickerSymbol
        contactDetails:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          phone: phone
          countryAccessCode: countryAccessCode
          fax: fax
          email: email
          url: url
        ceoTitle: ceoTitle
        goodsAgentCode: goodsAgentCode
        organizationStatusCode: organizationStatusCode
        relevanceScore: relevanceScore
        pbkey: pbkey
        name: name
        exchangeName: exchangeName
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        legalStatusCode: legalStatusCode
      properties:
        id:
          type: string
        poiId:
          type: string
        name:
          type: string
        pbkey:
          type: string
        parentPbkey:
          type: string
        geocodeConfidence:
          type: string
        brandName:
          type: string
        tradeName:
          type: string
        franchiseName:
          type: string
        open24Hours:
          type: string
        distance:
          $ref: '#/components/schemas/distance'
        businessId:
          $ref: '#/components/schemas/businessId'
        relevanceScore:
          type: string
        contactDetails:
          $ref: '#/components/schemas/ContactDetails'
        poiClassification:
          $ref: '#/components/schemas/PoiClassification'
        salesVolume:
          items:
            $ref: '#/components/schemas/salesVolume'
          type: array
        employeeCount:
          $ref: '#/components/schemas/EmployeeCount'
        yearStart:
          type: string
        goodsAgentCode:
          type: string
        goodsAgentCodeDescription:
          type: string
        legalStatusCode:
          type: string
        organizationStatusCode:
          type: string
        organizationStatusCodeDescription:
          type: string
        subsidaryIndicator:
          type: string
        subsidaryIndicatorDescription:
          type: string
        parentBusiness:
          $ref: '#/components/schemas/ParentBusiness'
        domesticUltimateBusiness:
          $ref: '#/components/schemas/DomesticUltimateBusiness'
        globalUltimateIndicator:
          type: string
        globalUltimateBusiness:
          $ref: '#/components/schemas/GlobalUltimateBusiness'
        familyMembers:
          type: string
        hierarchyCode:
          type: string
        tickerSymbol:
          type: string
        exchangeName:
          type: string
        ceoName:
          type: string
        ceoTitle:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
      type: object
      xml:
        name: poi
    distance:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: distance
    businessId:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: businessId
    ContactDetails:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        phone: phone
        countryAccessCode: countryAccessCode
        fax: fax
        email: email
        url: url
      properties:
        address:
          $ref: '#/components/schemas/address'
        phone:
          type: string
        fax:
          type: string
        countryAccessCode:
          type: string
        email:
          type: string
        url:
          type: string
      type: object
    PoiClassification:
      example:
        alternateIndustryCode: alternateIndustryCode
        sic:
          sicCode: sicCode
          primarySicCode: primarySicCode
          businessLine: businessLine
          sicCodeDescription: sicCodeDescription
          secondarySicCode: secondarySicCode
        category:
          tradeGroup: tradeGroup
          subClass: subClass
          tradeDivision: tradeDivision
          categoryCode: categoryCode
          class: class
      properties:
        sic:
          $ref: '#/components/schemas/Sic'
        category:
          $ref: '#/components/schemas/Category'
        alternateIndustryCode:
          type: string
      type: object
    Sic:
      example:
        sicCode: sicCode
        primarySicCode: primarySicCode
        businessLine: businessLine
        sicCodeDescription: sicCodeDescription
        secondarySicCode: secondarySicCode
      properties:
        businessLine:
          type: string
        sicCode:
          type: string
        sicCodeDescription:
          type: string
        primarySicCode:
          type: string
        secondarySicCode:
          type: string
      type: object
    Category:
      example:
        tradeGroup: tradeGroup
        subClass: subClass
        tradeDivision: tradeDivision
        categoryCode: categoryCode
        class: class
      properties:
        categoryCode:
          type: string
        tradeDivision:
          type: string
        tradeGroup:
          type: string
        subClass:
          type: string
        class:
          type: string
      type: object
    salesVolume:
      example:
        currencyCode: currencyCode
        worldBaseCurrencyCode: worldBaseCurrencyCode
        value: value
      properties:
        currencyCode:
          type: string
          xml:
            attribute: true
        worldBaseCurrencyCode:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
      xml:
        name: salesVolume
    EmployeeCount:
      example:
        inLocalBranch: inLocalBranch
        inOrganization: inOrganization
      properties:
        inLocalBranch:
          type: string
        inOrganization:
          type: string
      type: object
    ParentBusiness:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
      type: object
    DomesticUltimateBusiness:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
      type: object
    GlobalUltimateBusiness:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
      type: object
    POIByGeometryRequest:
      example:
        maxCandidates: maxCandidates
        fuzzyOnName: fuzzyOnName
        sicCode: sicCode
        name: name
        specificMatchOn: specificMatchOn
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        categoryCode: categoryCode
        page: page
        type: type
        matchMode: matchMode
        geometryAsText: geometryAsText
      properties:
        name:
          type: string
        type:
          type: string
        categoryCode:
          type: string
        sicCode:
          type: string
        maxCandidates:
          type: string
        fuzzyOnName:
          type: string
        page:
          type: string
        matchMode:
          type: string
        specificMatchOn:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        geometryAsText:
          type: string
      type: object
      xml:
        name: poisByGeometryRequest
    MetadataResponse:
      example:
        sic:
        - tradeGroup: tradeGroup
          code: code
          subClass: subClass
          tradeDivision: tradeDivision
          description: description
          categoryCode: categoryCode
          class: class
        - tradeGroup: tradeGroup
          code: code
          subClass: subClass
          tradeDivision: tradeDivision
          description: description
          categoryCode: categoryCode
          class: class
        category:
        - tradeGroup: tradeGroup
          code: code
          subClass: subClass
          tradeDivision: tradeDivision
          description: description
          sic: sic
          class: class
        - tradeGroup: tradeGroup
          code: code
          subClass: subClass
          tradeDivision: tradeDivision
          description: description
          sic: sic
          class: class
      properties:
        sic:
          items:
            $ref: '#/components/schemas/SicMetadata'
          type: array
        category:
          items:
            $ref: '#/components/schemas/CategoryMetadata'
          type: array
      type: object
      xml:
        name: metadata
    SicMetadata:
      example:
        tradeGroup: tradeGroup
        code: code
        subClass: subClass
        tradeDivision: tradeDivision
        description: description
        categoryCode: categoryCode
        class: class
      properties:
        code:
          type: string
        categoryCode:
          type: string
        tradeDivision:
          type: string
        tradeGroup:
          type: string
        class:
          type: string
        subClass:
          type: string
        description:
          type: string
      type: object
    CategoryMetadata:
      example:
        tradeGroup: tradeGroup
        code: code
        subClass: subClass
        tradeDivision: tradeDivision
        description: description
        sic: sic
        class: class
      properties:
        code:
          type: string
        sic:
          type: string
        tradeDivision:
          type: string
        tradeGroup:
          type: string
        class:
          type: string
        subClass:
          type: string
        description:
          type: string
      type: object
    PropertyInfoResponse:
      example:
        propertyAttributes:
          caExemptions:
            code: code
            value: value
          buildgSqFtSource:
            code: code
            value: value
          legalLotCode: legalLotCode
          propSqFt: propSqFt
          owners:
          - firstName: firstName
            lastName: lastName
            ownerName: ownerName
            middleName: middleName
            ownerId: ownerId
          - firstName: firstName
            lastName: lastName
            ownerName: ownerName
            middleName: middleName
            ownerId: ownerId
          propFrontFootage: propFrontFootage
          lastUpdated: lastUpdated
          buildgCount: buildgCount
          basementType:
            code: code
            value: value
          marketValueYear: marketValueYear
          formattedTaxAddress:
            unitType: unitType
            postCode2: postCode2
            postCode1: postCode1
            streetPreDirection: streetPreDirection
            streetName: streetName
            streetType: streetType
            city: city
            addressNumber: addressNumber
            streetPostDirection: streetPostDirection
            mainAddressLine: mainAddressLine
            state: state
            unitValue: unitValue
          elevator: elevator
          taxYear: taxYear
          partialBaths: partialBaths
          buildgUnitNo: buildgUnitNo
          absenteeOwner:
            code: code
            value: value
          priorSalePageNumber: priorSalePageNumber
          ownerVestType:
            code: code
            value: value
          buildgFeaturesSqFt:
          - areaIndicator: areaIndicator
            description: description
            featureAreaSqFt: featureAreaSqFt
          - areaIndicator: areaIndicator
            description: description
            featureAreaSqFt: featureAreaSqFt
          legalLotNumber: legalLotNumber
          roofCoverType:
            code: code
            value: value
          assessedLandValue: assessedLandValue
          salesDate: salesDate
          pool: pool
          propDepthFootage: propDepthFootage
          propApn: propApn
          mobileHome: mobileHome
          bedrooms: bedrooms
          taxSalesPriceCode:
            code: code
            value: value
          priorSaleFolioNumber: priorSaleFolioNumber
          coolingType:
            code: code
            value: value
          vacancy:
            code: code
            value: value
          taxRateCode: taxRateCode
          legalDistrict: legalDistrict
          amenities:
            code: code
            value: value
          assessedYear: assessedYear
          situsAddress:
            unitType: unitType
            postCode2: postCode2
            postCode1: postCode1
            streetPreDirection: streetPreDirection
            streetName: streetName
            streetType: streetType
            city: city
            addressNumber: addressNumber
            streetPostDirection: streetPostDirection
            mainAddressLine: mainAddressLine
            state: state
            unitValue: unitValue
          foundation:
            code: code
            value: value
          grossSqft: grossSqft
          legalUnitNumber: legalUnitNumber
          fireplace: fireplace
          sewerType: sewerType
          locCode:
            code: code
            value: value
          recBookNumber: recBookNumber
          legalSectionTownshipRange: legalSectionTownshipRange
          pbKey: pbKey
          propLinkId: propLinkId
          taxAddress: taxAddress
          assessedValue: assessedValue
          taxAccountNumber: taxAccountNumber
          priorSaleDocType: priorSaleDocType
          buildgCondition:
            code: code
            value: value
          interiorWall:
            code: code
            value: value
          roofFrameType:
            code: code
            value: value
          propAcres: propAcres
          exteriorWalls:
            code: code
            value: value
          buildgSqFt: buildgSqFt
          baths: baths
          fuelType:
            code: code
            value: value
          garageType:
            code: code
            value: value
          propZoning: propZoning
          priorSaleCode:
            code: code
            value: value
          marketValueImp: marketValueImp
          priorSaleDocNumber: priorSaleDocNumber
          buildgQuality:
            code: code
            value: value
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          marketValueLand: marketValueLand
          landUse:
            code: code
            value: value
          bathFixtures: bathFixtures
          basementSqFt: basementSqFt
          ownerType: ownerType
          rooms: rooms
          heatingType:
            code: code
            value: value
          recPageNumber: recPageNumber
          taxExemptions:
          - code: code
            value: value
          - code: code
            value: value
          taxDocType:
            code: code
            value: value
          replacementCost: replacementCost
          legalSubName: legalSubName
          floorType:
            code: code
            value: value
          assessedValueImp: assessedValueImp
          roofShapeType:
            code: code
            value: value
          geoId: geoId
          taxTapeCutDate: taxTapeCutDate
          legalSection: legalSection
          otherRooms:
            code: code
            value: value
          recDocNumber: recDocNumber
          appraisedValueImp: appraisedValueImp
          legalFullDesc: legalFullDesc
          legalBlock: legalBlock
          buildgView:
            code: code
            value: value
          fipsCode: fipsCode
          poolType:
            code: code
            value: value
          legalLandLot: legalLandLot
          plumbingFixtures: plumbingFixtures
          energyType:
            code: code
            value: value
          buildgName: buildgName
          propApnSequence: propApnSequence
          builtYear: builtYear
          priorSaleDate: priorSaleDate
          taxAmount: taxAmount
          appraisedValue: appraisedValue
          appraisedValueLand: appraisedValueLand
          parkingCapacity: parkingCapacity
          buildgType:
            code: code
            value: value
          parkingSqFt: parkingSqFt
          priorSalesPrice: priorSalesPrice
          waterType: waterType
          legalPhaseNumber: legalPhaseNumber
          buildgStyle:
            code: code
            value: value
          legalMapRef: legalMapRef
          subdivision: subdivision
          effectiveBuiltYear: effectiveBuiltYear
          buildgImproveArea:
          - improveArea: improveArea
            areaIndicator: areaIndicator
            description: description
          - improveArea: improveArea
            areaIndicator: areaIndicator
            description: description
          legalAssessorDesc: legalAssessorDesc
          propSiteInfluene:
            code: code
            value: value
          construction:
            code: code
            value: value
          livingSqFt: livingSqFt
          buildgImproveType:
            code: code
            value: value
          fireplaceType:
            code: code
            value: value
          taxDelYear: taxDelYear
          stories:
            description: description
            value: value
          taxSalesPrice: taxSalesPrice
          marketValue: marketValue
          extraFeatureSqft:
          - areaIndicator: areaIndicator
            description: description
            featureAreaSqFt: featureAreaSqFt
          - areaIndicator: areaIndicator
            description: description
            featureAreaSqFt: featureAreaSqFt
          adjGrossSqft: adjGrossSqft
          propType: propType
          legalTractNumber: legalTractNumber
          legalTownMuniName: legalTownMuniName
          buildgClass:
            code: code
            value: value
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        propertyAttributes:
          $ref: '#/components/schemas/PropertyAttributes'
        matchedAddress:
          $ref: '#/components/schemas/MatchedAddress'
      type: object
      xml:
        name: propertyInfoResponse
    PropertyAttributes:
      example:
        caExemptions:
          code: code
          value: value
        buildgSqFtSource:
          code: code
          value: value
        legalLotCode: legalLotCode
        propSqFt: propSqFt
        owners:
        - firstName: firstName
          lastName: lastName
          ownerName: ownerName
          middleName: middleName
          ownerId: ownerId
        - firstName: firstName
          lastName: lastName
          ownerName: ownerName
          middleName: middleName
          ownerId: ownerId
        propFrontFootage: propFrontFootage
        lastUpdated: lastUpdated
        buildgCount: buildgCount
        basementType:
          code: code
          value: value
        marketValueYear: marketValueYear
        formattedTaxAddress:
          unitType: unitType
          postCode2: postCode2
          postCode1: postCode1
          streetPreDirection: streetPreDirection
          streetName: streetName
          streetType: streetType
          city: city
          addressNumber: addressNumber
          streetPostDirection: streetPostDirection
          mainAddressLine: mainAddressLine
          state: state
          unitValue: unitValue
        elevator: elevator
        taxYear: taxYear
        partialBaths: partialBaths
        buildgUnitNo: buildgUnitNo
        absenteeOwner:
          code: code
          value: value
        priorSalePageNumber: priorSalePageNumber
        ownerVestType:
          code: code
          value: value
        buildgFeaturesSqFt:
        - areaIndicator: areaIndicator
          description: description
          featureAreaSqFt: featureAreaSqFt
        - areaIndicator: areaIndicator
          description: description
          featureAreaSqFt: featureAreaSqFt
        legalLotNumber: legalLotNumber
        roofCoverType:
          code: code
          value: value
        assessedLandValue: assessedLandValue
        salesDate: salesDate
        pool: pool
        propDepthFootage: propDepthFootage
        propApn: propApn
        mobileHome: mobileHome
        bedrooms: bedrooms
        taxSalesPriceCode:
          code: code
          value: value
        priorSaleFolioNumber: priorSaleFolioNumber
        coolingType:
          code: code
          value: value
        vacancy:
          code: code
          value: value
        taxRateCode: taxRateCode
        legalDistrict: legalDistrict
        amenities:
          code: code
          value: value
        assessedYear: assessedYear
        situsAddress:
          unitType: unitType
          postCode2: postCode2
          postCode1: postCode1
          streetPreDirection: streetPreDirection
          streetName: streetName
          streetType: streetType
          city: city
          addressNumber: addressNumber
          streetPostDirection: streetPostDirection
          mainAddressLine: mainAddressLine
          state: state
          unitValue: unitValue
        foundation:
          code: code
          value: value
        grossSqft: grossSqft
        legalUnitNumber: legalUnitNumber
        fireplace: fireplace
        sewerType: sewerType
        locCode:
          code: code
          value: value
        recBookNumber: recBookNumber
        legalSectionTownshipRange: legalSectionTownshipRange
        pbKey: pbKey
        propLinkId: propLinkId
        taxAddress: taxAddress
        assessedValue: assessedValue
        taxAccountNumber: taxAccountNumber
        priorSaleDocType: priorSaleDocType
        buildgCondition:
          code: code
          value: value
        interiorWall:
          code: code
          value: value
        roofFrameType:
          code: code
          value: value
        propAcres: propAcres
        exteriorWalls:
          code: code
          value: value
        buildgSqFt: buildgSqFt
        baths: baths
        fuelType:
          code: code
          value: value
        garageType:
          code: code
          value: value
        propZoning: propZoning
        priorSaleCode:
          code: code
          value: value
        marketValueImp: marketValueImp
        priorSaleDocNumber: priorSaleDocNumber
        buildgQuality:
          code: code
          value: value
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        marketValueLand: marketValueLand
        landUse:
          code: code
          value: value
        bathFixtures: bathFixtures
        basementSqFt: basementSqFt
        ownerType: ownerType
        rooms: rooms
        heatingType:
          code: code
          value: value
        recPageNumber: recPageNumber
        taxExemptions:
        - code: code
          value: value
        - code: code
          value: value
        taxDocType:
          code: code
          value: value
        replacementCost: replacementCost
        legalSubName: legalSubName
        floorType:
          code: code
          value: value
        assessedValueImp: assessedValueImp
        roofShapeType:
          code: code
          value: value
        geoId: geoId
        taxTapeCutDate: taxTapeCutDate
        legalSection: legalSection
        otherRooms:
          code: code
          value: value
        recDocNumber: recDocNumber
        appraisedValueImp: appraisedValueImp
        legalFullDesc: legalFullDesc
        legalBlock: legalBlock
        buildgView:
          code: code
          value: value
        fipsCode: fipsCode
        poolType:
          code: code
          value: value
        legalLandLot: legalLandLot
        plumbingFixtures: plumbingFixtures
        energyType:
          code: code
          value: value
        buildgName: buildgName
        propApnSequence: propApnSequence
        builtYear: builtYear
        priorSaleDate: priorSaleDate
        taxAmount: taxAmount
        appraisedValue: appraisedValue
        appraisedValueLand: appraisedValueLand
        parkingCapacity: parkingCapacity
        buildgType:
          code: code
          value: value
        parkingSqFt: parkingSqFt
        priorSalesPrice: priorSalesPrice
        waterType: waterType
        legalPhaseNumber: legalPhaseNumber
        buildgStyle:
          code: code
          value: value
        legalMapRef: legalMapRef
        subdivision: subdivision
        effectiveBuiltYear: effectiveBuiltYear
        buildgImproveArea:
        - improveArea: improveArea
          areaIndicator: areaIndicator
          description: description
        - improveArea: improveArea
          areaIndicator: areaIndicator
          description: description
        legalAssessorDesc: legalAssessorDesc
        propSiteInfluene:
          code: code
          value: value
        construction:
          code: code
          value: value
        livingSqFt: livingSqFt
        buildgImproveType:
          code: code
          value: value
        fireplaceType:
          code: code
          value: value
        taxDelYear: taxDelYear
        stories:
          description: description
          value: value
        taxSalesPrice: taxSalesPrice
        marketValue: marketValue
        extraFeatureSqft:
        - areaIndicator: areaIndicator
          description: description
          featureAreaSqFt: featureAreaSqFt
        - areaIndicator: areaIndicator
          description: description
          featureAreaSqFt: featureAreaSqFt
        adjGrossSqft: adjGrossSqft
        propType: propType
        legalTractNumber: legalTractNumber
        legalTownMuniName: legalTownMuniName
        buildgClass:
          code: code
          value: value
      properties:
        pbKey:
          type: string
        propApn:
          type: string
        propType:
          type: string
        propSqFt:
          type: string
        buildgSqFt:
          type: string
        buildgSqFtSource:
          $ref: '#/components/schemas/BuildingSqftSource'
        landUse:
          $ref: '#/components/schemas/LandUse'
        construction:
          $ref: '#/components/schemas/Construction'
        roofCoverType:
          $ref: '#/components/schemas/RoofCoverType'
        subdivision:
          type: string
        geometry:
          $ref: '#/components/schemas/PropertyGeometry'
        builtYear:
          type: string
        bedrooms:
          type: string
        baths:
          type: string
        partialBaths:
          type: string
        bathFixtures:
          type: string
        pool:
          type: string
        poolType:
          $ref: '#/components/schemas/PoolType'
        fireplace:
          type: string
        fireplaceType:
          $ref: '#/components/schemas/FireplaceType'
        mobileHome:
          type: string
        heatingType:
          $ref: '#/components/schemas/HeatingType'
        coolingType:
          $ref: '#/components/schemas/CoolingType'
        assessedValue:
          type: string
        marketValue:
          type: string
        appraisedValue:
          type: string
        taxAmount:
          type: string
        taxExemptions:
          items:
            $ref: '#/components/schemas/TaxExemption'
          type: array
        caExemptions:
          $ref: '#/components/schemas/CaExemptions'
        salesDate:
          type: string
        priorSaleDate:
          type: string
        priorSalesPrice:
          type: string
        priorSaleDocType:
          type: string
        priorSaleCode:
          $ref: '#/components/schemas/PriorSaleCode'
        priorSaleFolioNumber:
          type: string
        priorSalePageNumber:
          type: string
        priorSaleDocNumber:
          type: string
        stories:
          $ref: '#/components/schemas/Stories'
        livingSqFt:
          type: string
        roofFrameType:
          $ref: '#/components/schemas/RoofFrameType'
        foundation:
          $ref: '#/components/schemas/Foundation'
        buildgCondition:
          $ref: '#/components/schemas/BuildgCondition'
        buildgCount:
          type: string
        buildgUnitNo:
          type: string
        buildgFeaturesSqFt:
          items:
            $ref: '#/components/schemas/BuildgFeaturesSqft'
          type: array
          xml:
            wrapped: true
        taxAddress:
          type: string
        formattedTaxAddress:
          $ref: '#/components/schemas/FormattedTaxAddress'
        situsAddress:
          $ref: '#/components/schemas/SitusAddress'
        vacancy:
          $ref: '#/components/schemas/Vacancy'
        owners:
          items:
            $ref: '#/components/schemas/Owners'
          type: array
          xml:
            wrapped: true
        appraisedValueImp:
          type: string
        assessedValueImp:
          type: string
        buildgType:
          $ref: '#/components/schemas/BuildgType'
        basementType:
          $ref: '#/components/schemas/BasementType'
        effectiveBuiltYear:
          type: string
        exteriorWalls:
          $ref: '#/components/schemas/ExteriorWalls'
        garageType:
          $ref: '#/components/schemas/GarageType'
        lastUpdated:
          type: string
        marketValueImp:
          type: string
        absenteeOwner:
          $ref: '#/components/schemas/AbsenteeOwner'
        parkingSqFt:
          type: string
        replacementCost:
          type: string
        roofShapeType:
          $ref: '#/components/schemas/RoofShapeType'
        buildgStyle:
          $ref: '#/components/schemas/BuildgStyle'
        basementSqFt:
          type: string
        ownerType:
          type: string
        ownerVestType:
          $ref: '#/components/schemas/OwnerVestType'
        elevator:
          type: string
        propApnSequence:
          type: string
        fipsCode:
          type: string
        propZoning:
          type: string
        locCode:
          $ref: '#/components/schemas/LocCode'
        legalMapRef:
          type: string
        legalAssessorDesc:
          type: string
        legalFullDesc:
          type: string
        legalLotCode:
          type: string
        legalLotNumber:
          type: string
        legalLandLot:
          type: string
        legalTractNumber:
          type: string
        legalBlock:
          type: string
        legalSection:
          type: string
        legalDistrict:
          type: string
        legalUnitNumber:
          type: string
        legalPhaseNumber:
          type: string
        legalSubName:
          type: string
        legalTownMuniName:
          type: string
        legalSectionTownshipRange:
          type: string
        propAcres:
          type: string
        propFrontFootage:
          type: string
        propDepthFootage:
          type: string
        buildgView:
          $ref: '#/components/schemas/BuildgView'
        propSiteInfluene:
          $ref: '#/components/schemas/PropSiteInfluene'
        buildgName:
          type: string
        buildgQuality:
          $ref: '#/components/schemas/BuildgQuality'
        buildgImproveType:
          $ref: '#/components/schemas/BuildgImproveType'
        grossSqft:
          type: string
        adjGrossSqft:
          type: string
        buildgClass:
          $ref: '#/components/schemas/BuildgClass'
        interiorWall:
          $ref: '#/components/schemas/InteriorWall'
        floorType:
          $ref: '#/components/schemas/FloorType'
        rooms:
          type: string
        otherRooms:
          $ref: '#/components/schemas/OtherRooms'
        plumbingFixtures:
          type: string
        parkingCapacity:
          type: string
        energyType:
          $ref: '#/components/schemas/EnergyType'
        fuelType:
          $ref: '#/components/schemas/FuelType'
        sewerType:
          type: string
        waterType:
          type: string
        amenities:
          $ref: '#/components/schemas/Amenities'
        extraFeatureSqft:
          items:
            $ref: '#/components/schemas/ExtraFeatureSqft'
          type: array
          xml:
            wrapped: true
        buildgImproveArea:
          items:
            $ref: '#/components/schemas/BuildgImproveArea'
          type: array
          xml:
            wrapped: true
        taxAccountNumber:
          type: string
        taxTapeCutDate:
          type: string
        taxDocType:
          $ref: '#/components/schemas/TaxDocType'
        taxSalesPrice:
          type: string
        taxSalesPriceCode:
          $ref: '#/components/schemas/TaxSalesPriceCode'
        recBookNumber:
          type: string
        recPageNumber:
          type: string
        recDocNumber:
          type: string
        taxYear:
          type: string
        taxDelYear:
          type: string
        assessedYear:
          type: string
        assessedLandValue:
          type: string
        marketValueYear:
          type: string
        marketValueLand:
          type: string
        appraisedValueLand:
          type: string
        taxRateCode:
          type: string
        propLinkId:
          type: string
        geoId:
          type: string
      type: object
    BuildingSqftSource:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    LandUse:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Construction:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    RoofCoverType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    PropertyGeometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      required:
      - type
      type: object
    PoolType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    FireplaceType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    HeatingType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    CoolingType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    TaxExemption:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    CaExemptions:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    PriorSaleCode:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Stories:
      example:
        description: description
        value: value
      properties:
        value:
          type: string
        description:
          type: string
          xml:
            attribute: true
      type: object
    RoofFrameType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Foundation:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgCondition:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgFeaturesSqft:
      example:
        areaIndicator: areaIndicator
        description: description
        featureAreaSqFt: featureAreaSqFt
      properties:
        featureAreaSqFt:
          type: string
        areaIndicator:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
      type: object
    FormattedTaxAddress:
      example:
        unitType: unitType
        postCode2: postCode2
        postCode1: postCode1
        streetPreDirection: streetPreDirection
        streetName: streetName
        streetType: streetType
        city: city
        addressNumber: addressNumber
        streetPostDirection: streetPostDirection
        mainAddressLine: mainAddressLine
        state: state
        unitValue: unitValue
      properties:
        mainAddressLine:
          type: string
        addressNumber:
          type: string
        streetPreDirection:
          type: string
        streetName:
          type: string
        streetType:
          type: string
        streetPostDirection:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        city:
          type: string
        state:
          type: string
        postCode1:
          type: string
        postCode2:
          type: string
      type: object
    SitusAddress:
      example:
        unitType: unitType
        postCode2: postCode2
        postCode1: postCode1
        streetPreDirection: streetPreDirection
        streetName: streetName
        streetType: streetType
        city: city
        addressNumber: addressNumber
        streetPostDirection: streetPostDirection
        mainAddressLine: mainAddressLine
        state: state
        unitValue: unitValue
      properties:
        mainAddressLine:
          type: string
        addressNumber:
          type: string
        streetPreDirection:
          type: string
        streetName:
          type: string
        streetType:
          type: string
        streetPostDirection:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
        city:
          type: string
        state:
          type: string
        postCode1:
          type: string
        postCode2:
          type: string
      type: object
    Vacancy:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Owners:
      example:
        firstName: firstName
        lastName: lastName
        ownerName: ownerName
        middleName: middleName
        ownerId: ownerId
      properties:
        ownerId:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        ownerName:
          type: string
      type: object
    BuildgType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BasementType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    ExteriorWalls:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    GarageType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    AbsenteeOwner:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    RoofShapeType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgStyle:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    OwnerVestType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    LocCode:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgView:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    PropSiteInfluene:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgQuality:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgImproveType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    BuildgClass:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    InteriorWall:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    FloorType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    OtherRooms:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    EnergyType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    FuelType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Amenities:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    ExtraFeatureSqft:
      example:
        areaIndicator: areaIndicator
        description: description
        featureAreaSqFt: featureAreaSqFt
      properties:
        featureAreaSqFt:
          type: string
        areaIndicator:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
      type: object
    BuildgImproveArea:
      example:
        improveArea: improveArea
        areaIndicator: areaIndicator
        description: description
      properties:
        improveArea:
          type: string
        areaIndicator:
          type: string
          xml:
            attribute: true
        description:
          type: string
          xml:
            attribute: true
      type: object
    TaxDocType:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    TaxSalesPriceCode:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    MatchedAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    PropertyInfoResponses:
      example:
        propertyInfoResponses:
        - propertyAttributes:
            caExemptions:
              code: code
              value: value
            buildgSqFtSource:
              code: code
              value: value
            legalLotCode: legalLotCode
            propSqFt: propSqFt
            owners:
            - firstName: firstName
              lastName: lastName
              ownerName: ownerName
              middleName: middleName
              ownerId: ownerId
            - firstName: firstName
              lastName: lastName
              ownerName: ownerName
              middleName: middleName
              ownerId: ownerId
            propFrontFootage: propFrontFootage
            lastUpdated: lastUpdated
            buildgCount: buildgCount
            basementType:
              code: code
              value: value
            marketValueYear: marketValueYear
            formattedTaxAddress:
              unitType: unitType
              postCode2: postCode2
              postCode1: postCode1
              streetPreDirection: streetPreDirection
              streetName: streetName
              streetType: streetType
              city: city
              addressNumber: addressNumber
              streetPostDirection: streetPostDirection
              mainAddressLine: mainAddressLine
              state: state
              unitValue: unitValue
            elevator: elevator
            taxYear: taxYear
            partialBaths: partialBaths
            buildgUnitNo: buildgUnitNo
            absenteeOwner:
              code: code
              value: value
            priorSalePageNumber: priorSalePageNumber
            ownerVestType:
              code: code
              value: value
            buildgFeaturesSqFt:
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            legalLotNumber: legalLotNumber
            roofCoverType:
              code: code
              value: value
            assessedLandValue: assessedLandValue
            salesDate: salesDate
            pool: pool
            propDepthFootage: propDepthFootage
            propApn: propApn
            mobileHome: mobileHome
            bedrooms: bedrooms
            taxSalesPriceCode:
              code: code
              value: value
            priorSaleFolioNumber: priorSaleFolioNumber
            coolingType:
              code: code
              value: value
            vacancy:
              code: code
              value: value
            taxRateCode: taxRateCode
            legalDistrict: legalDistrict
            amenities:
              code: code
              value: value
            assessedYear: assessedYear
            situsAddress:
              unitType: unitType
              postCode2: postCode2
              postCode1: postCode1
              streetPreDirection: streetPreDirection
              streetName: streetName
              streetType: streetType
              city: city
              addressNumber: addressNumber
              streetPostDirection: streetPostDirection
              mainAddressLine: mainAddressLine
              state: state
              unitValue: unitValue
            foundation:
              code: code
              value: value
            grossSqft: grossSqft
            legalUnitNumber: legalUnitNumber
            fireplace: fireplace
            sewerType: sewerType
            locCode:
              code: code
              value: value
            recBookNumber: recBookNumber
            legalSectionTownshipRange: legalSectionTownshipRange
            pbKey: pbKey
            propLinkId: propLinkId
            taxAddress: taxAddress
            assessedValue: assessedValue
            taxAccountNumber: taxAccountNumber
            priorSaleDocType: priorSaleDocType
            buildgCondition:
              code: code
              value: value
            interiorWall:
              code: code
              value: value
            roofFrameType:
              code: code
              value: value
            propAcres: propAcres
            exteriorWalls:
              code: code
              value: value
            buildgSqFt: buildgSqFt
            baths: baths
            fuelType:
              code: code
              value: value
            garageType:
              code: code
              value: value
            propZoning: propZoning
            priorSaleCode:
              code: code
              value: value
            marketValueImp: marketValueImp
            priorSaleDocNumber: priorSaleDocNumber
            buildgQuality:
              code: code
              value: value
            geometry:
              coordinates:
              - 0.8008281904610115
              - 0.8008281904610115
              type: type
            marketValueLand: marketValueLand
            landUse:
              code: code
              value: value
            bathFixtures: bathFixtures
            basementSqFt: basementSqFt
            ownerType: ownerType
            rooms: rooms
            heatingType:
              code: code
              value: value
            recPageNumber: recPageNumber
            taxExemptions:
            - code: code
              value: value
            - code: code
              value: value
            taxDocType:
              code: code
              value: value
            replacementCost: replacementCost
            legalSubName: legalSubName
            floorType:
              code: code
              value: value
            assessedValueImp: assessedValueImp
            roofShapeType:
              code: code
              value: value
            geoId: geoId
            taxTapeCutDate: taxTapeCutDate
            legalSection: legalSection
            otherRooms:
              code: code
              value: value
            recDocNumber: recDocNumber
            appraisedValueImp: appraisedValueImp
            legalFullDesc: legalFullDesc
            legalBlock: legalBlock
            buildgView:
              code: code
              value: value
            fipsCode: fipsCode
            poolType:
              code: code
              value: value
            legalLandLot: legalLandLot
            plumbingFixtures: plumbingFixtures
            energyType:
              code: code
              value: value
            buildgName: buildgName
            propApnSequence: propApnSequence
            builtYear: builtYear
            priorSaleDate: priorSaleDate
            taxAmount: taxAmount
            appraisedValue: appraisedValue
            appraisedValueLand: appraisedValueLand
            parkingCapacity: parkingCapacity
            buildgType:
              code: code
              value: value
            parkingSqFt: parkingSqFt
            priorSalesPrice: priorSalesPrice
            waterType: waterType
            legalPhaseNumber: legalPhaseNumber
            buildgStyle:
              code: code
              value: value
            legalMapRef: legalMapRef
            subdivision: subdivision
            effectiveBuiltYear: effectiveBuiltYear
            buildgImproveArea:
            - improveArea: improveArea
              areaIndicator: areaIndicator
              description: description
            - improveArea: improveArea
              areaIndicator: areaIndicator
              description: description
            legalAssessorDesc: legalAssessorDesc
            propSiteInfluene:
              code: code
              value: value
            construction:
              code: code
              value: value
            livingSqFt: livingSqFt
            buildgImproveType:
              code: code
              value: value
            fireplaceType:
              code: code
              value: value
            taxDelYear: taxDelYear
            stories:
              description: description
              value: value
            taxSalesPrice: taxSalesPrice
            marketValue: marketValue
            extraFeatureSqft:
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            adjGrossSqft: adjGrossSqft
            propType: propType
            legalTractNumber: legalTractNumber
            legalTownMuniName: legalTownMuniName
            buildgClass:
              code: code
              value: value
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - propertyAttributes:
            caExemptions:
              code: code
              value: value
            buildgSqFtSource:
              code: code
              value: value
            legalLotCode: legalLotCode
            propSqFt: propSqFt
            owners:
            - firstName: firstName
              lastName: lastName
              ownerName: ownerName
              middleName: middleName
              ownerId: ownerId
            - firstName: firstName
              lastName: lastName
              ownerName: ownerName
              middleName: middleName
              ownerId: ownerId
            propFrontFootage: propFrontFootage
            lastUpdated: lastUpdated
            buildgCount: buildgCount
            basementType:
              code: code
              value: value
            marketValueYear: marketValueYear
            formattedTaxAddress:
              unitType: unitType
              postCode2: postCode2
              postCode1: postCode1
              streetPreDirection: streetPreDirection
              streetName: streetName
              streetType: streetType
              city: city
              addressNumber: addressNumber
              streetPostDirection: streetPostDirection
              mainAddressLine: mainAddressLine
              state: state
              unitValue: unitValue
            elevator: elevator
            taxYear: taxYear
            partialBaths: partialBaths
            buildgUnitNo: buildgUnitNo
            absenteeOwner:
              code: code
              value: value
            priorSalePageNumber: priorSalePageNumber
            ownerVestType:
              code: code
              value: value
            buildgFeaturesSqFt:
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            legalLotNumber: legalLotNumber
            roofCoverType:
              code: code
              value: value
            assessedLandValue: assessedLandValue
            salesDate: salesDate
            pool: pool
            propDepthFootage: propDepthFootage
            propApn: propApn
            mobileHome: mobileHome
            bedrooms: bedrooms
            taxSalesPriceCode:
              code: code
              value: value
            priorSaleFolioNumber: priorSaleFolioNumber
            coolingType:
              code: code
              value: value
            vacancy:
              code: code
              value: value
            taxRateCode: taxRateCode
            legalDistrict: legalDistrict
            amenities:
              code: code
              value: value
            assessedYear: assessedYear
            situsAddress:
              unitType: unitType
              postCode2: postCode2
              postCode1: postCode1
              streetPreDirection: streetPreDirection
              streetName: streetName
              streetType: streetType
              city: city
              addressNumber: addressNumber
              streetPostDirection: streetPostDirection
              mainAddressLine: mainAddressLine
              state: state
              unitValue: unitValue
            foundation:
              code: code
              value: value
            grossSqft: grossSqft
            legalUnitNumber: legalUnitNumber
            fireplace: fireplace
            sewerType: sewerType
            locCode:
              code: code
              value: value
            recBookNumber: recBookNumber
            legalSectionTownshipRange: legalSectionTownshipRange
            pbKey: pbKey
            propLinkId: propLinkId
            taxAddress: taxAddress
            assessedValue: assessedValue
            taxAccountNumber: taxAccountNumber
            priorSaleDocType: priorSaleDocType
            buildgCondition:
              code: code
              value: value
            interiorWall:
              code: code
              value: value
            roofFrameType:
              code: code
              value: value
            propAcres: propAcres
            exteriorWalls:
              code: code
              value: value
            buildgSqFt: buildgSqFt
            baths: baths
            fuelType:
              code: code
              value: value
            garageType:
              code: code
              value: value
            propZoning: propZoning
            priorSaleCode:
              code: code
              value: value
            marketValueImp: marketValueImp
            priorSaleDocNumber: priorSaleDocNumber
            buildgQuality:
              code: code
              value: value
            geometry:
              coordinates:
              - 0.8008281904610115
              - 0.8008281904610115
              type: type
            marketValueLand: marketValueLand
            landUse:
              code: code
              value: value
            bathFixtures: bathFixtures
            basementSqFt: basementSqFt
            ownerType: ownerType
            rooms: rooms
            heatingType:
              code: code
              value: value
            recPageNumber: recPageNumber
            taxExemptions:
            - code: code
              value: value
            - code: code
              value: value
            taxDocType:
              code: code
              value: value
            replacementCost: replacementCost
            legalSubName: legalSubName
            floorType:
              code: code
              value: value
            assessedValueImp: assessedValueImp
            roofShapeType:
              code: code
              value: value
            geoId: geoId
            taxTapeCutDate: taxTapeCutDate
            legalSection: legalSection
            otherRooms:
              code: code
              value: value
            recDocNumber: recDocNumber
            appraisedValueImp: appraisedValueImp
            legalFullDesc: legalFullDesc
            legalBlock: legalBlock
            buildgView:
              code: code
              value: value
            fipsCode: fipsCode
            poolType:
              code: code
              value: value
            legalLandLot: legalLandLot
            plumbingFixtures: plumbingFixtures
            energyType:
              code: code
              value: value
            buildgName: buildgName
            propApnSequence: propApnSequence
            builtYear: builtYear
            priorSaleDate: priorSaleDate
            taxAmount: taxAmount
            appraisedValue: appraisedValue
            appraisedValueLand: appraisedValueLand
            parkingCapacity: parkingCapacity
            buildgType:
              code: code
              value: value
            parkingSqFt: parkingSqFt
            priorSalesPrice: priorSalesPrice
            waterType: waterType
            legalPhaseNumber: legalPhaseNumber
            buildgStyle:
              code: code
              value: value
            legalMapRef: legalMapRef
            subdivision: subdivision
            effectiveBuiltYear: effectiveBuiltYear
            buildgImproveArea:
            - improveArea: improveArea
              areaIndicator: areaIndicator
              description: description
            - improveArea: improveArea
              areaIndicator: areaIndicator
              description: description
            legalAssessorDesc: legalAssessorDesc
            propSiteInfluene:
              code: code
              value: value
            construction:
              code: code
              value: value
            livingSqFt: livingSqFt
            buildgImproveType:
              code: code
              value: value
            fireplaceType:
              code: code
              value: value
            taxDelYear: taxDelYear
            stories:
              description: description
              value: value
            taxSalesPrice: taxSalesPrice
            marketValue: marketValue
            extraFeatureSqft:
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            - areaIndicator: areaIndicator
              description: description
              featureAreaSqFt: featureAreaSqFt
            adjGrossSqft: adjGrossSqft
            propType: propType
            legalTractNumber: legalTractNumber
            legalTownMuniName: legalTownMuniName
            buildgClass:
              code: code
              value: value
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        propertyInfoResponses:
          items:
            $ref: '#/components/schemas/PropertyInfoResponse'
          type: array
      type: object
      xml:
        name: propertyInfoResponses
    PropertyInfoAddressRequest:
      example:
        preferences:
          attributes: attributes
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        preferences:
          $ref: '#/components/schemas/PropertyInfoPreferences'
        addresses:
          items:
            $ref: '#/components/schemas/MatchedAddress'
          type: array
          xml:
            name: address
      required:
      - addresses
      - preferences
      type: object
      xml:
        name: propertyAttributesAddressRequestV2
    PropertyInfoPreferences:
      example:
        attributes: attributes
      properties:
        attributes:
          type: string
      type: object
    PSAPResponse:
      example:
        coverage:
          area: area
          comments: comments
          exceptions: exceptions
        agency: agency
        phone: phone
        mailingAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        count: 0
        county:
          name: name
          fips: fips
        contactPerson:
          firstName: firstName
          lastName: lastName
          comments: comments
          phone: phone
          prefix: prefix
          fullName: fullName
          title: title
          fax: fax
          additionalDetails: additionalDetails
          email: email
        fccId: fccId
        psapId: psapId
        type: type
        siteDetails:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          phone: phone
          contactName: contactName
          fax: fax
          email: email
      properties:
        psapId:
          type: string
          xml:
            attribute: true
        fccId:
          type: string
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
        count:
          format: int32
          type: integer
        agency:
          type: string
        phone:
          type: string
        county:
          $ref: '#/components/schemas/county'
        coverage:
          $ref: '#/components/schemas/coverage'
        contactPerson:
          $ref: '#/components/schemas/contactPerson'
        siteDetails:
          $ref: '#/components/schemas/siteDetails'
        mailingAddress:
          $ref: '#/components/schemas/AHJmailingAddress'
      type: object
      xml:
        name: psap
    county:
      example:
        name: name
        fips: fips
      properties:
        name:
          type: string
        fips:
          type: string
      type: object
      xml:
        name: county
    coverage:
      example:
        area: area
        comments: comments
        exceptions: exceptions
      properties:
        area:
          type: string
        comments:
          type: string
        exceptions:
          type: string
      type: object
      xml:
        name: coverage
    contactPerson:
      example:
        firstName: firstName
        lastName: lastName
        comments: comments
        phone: phone
        prefix: prefix
        fullName: fullName
        title: title
        fax: fax
        additionalDetails: additionalDetails
        email: email
      properties:
        title:
          type: string
        fullName:
          type: string
        prefix:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        fax:
          type: string
        email:
          type: string
        comments:
          type: string
        additionalDetails:
          type: string
      type: object
      xml:
        name: contactPerson
    siteDetails:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        phone: phone
        contactName: contactName
        fax: fax
        email: email
      properties:
        phone:
          type: string
        fax:
          type: string
        contactName:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/AHJmailingAddress'
      type: object
      xml:
        name: siteDetails
    AHJmailingAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    AHJPlusPSAPResponse:
      example:
        psap:
          coverage:
            area: area
            comments: comments
            exceptions: exceptions
          agency: agency
          phone: phone
          mailingAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          count: 0
          county:
            name: name
            fips: fips
          contactPerson:
            firstName: firstName
            lastName: lastName
            comments: comments
            phone: phone
            prefix: prefix
            fullName: fullName
            title: title
            fax: fax
            additionalDetails: additionalDetails
            email: email
          fccId: fccId
          psapId: psapId
          type: type
          siteDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            contactName: contactName
            fax: fax
            email: email
        count: 0
        ahjs:
          ahjs:
          - coverage:
              area: area
              comments: comments
              exceptions: exceptions
            comments: comments
            agency: agency
            phone: phone
            mailingAddress:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            ahjId: ahjId
            contactPerson:
              firstName: firstName
              lastName: lastName
              comments: comments
              phone: phone
              prefix: prefix
              fullName: fullName
              title: title
              fax: fax
              additionalDetails: additionalDetails
              email: email
            fccId: fccId
            type: type
            ahjType: ahjType
          - coverage:
              area: area
              comments: comments
              exceptions: exceptions
            comments: comments
            agency: agency
            phone: phone
            mailingAddress:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            ahjId: ahjId
            contactPerson:
              firstName: firstName
              lastName: lastName
              comments: comments
              phone: phone
              prefix: prefix
              fullName: fullName
              title: title
              fax: fax
              additionalDetails: additionalDetails
              email: email
            fccId: fccId
            type: type
            ahjType: ahjType
      properties:
        ahjs:
          $ref: '#/components/schemas/AHJList'
        psap:
          $ref: '#/components/schemas/PSAPResponse'
        count:
          format: int32
          type: integer
      type: object
      xml:
        name: ahj-psap
    AHJList:
      example:
        ahjs:
        - coverage:
            area: area
            comments: comments
            exceptions: exceptions
          comments: comments
          agency: agency
          phone: phone
          mailingAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          ahjId: ahjId
          contactPerson:
            firstName: firstName
            lastName: lastName
            comments: comments
            phone: phone
            prefix: prefix
            fullName: fullName
            title: title
            fax: fax
            additionalDetails: additionalDetails
            email: email
          fccId: fccId
          type: type
          ahjType: ahjType
        - coverage:
            area: area
            comments: comments
            exceptions: exceptions
          comments: comments
          agency: agency
          phone: phone
          mailingAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          ahjId: ahjId
          contactPerson:
            firstName: firstName
            lastName: lastName
            comments: comments
            phone: phone
            prefix: prefix
            fullName: fullName
            title: title
            fax: fax
            additionalDetails: additionalDetails
            email: email
          fccId: fccId
          type: type
          ahjType: ahjType
      properties:
        ahjs:
          items:
            $ref: '#/components/schemas/AHJ'
          type: array
          xml:
            name: ahj
      type: object
      xml:
        name: ahjs
    AHJ:
      example:
        coverage:
          area: area
          comments: comments
          exceptions: exceptions
        comments: comments
        agency: agency
        phone: phone
        mailingAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        ahjId: ahjId
        contactPerson:
          firstName: firstName
          lastName: lastName
          comments: comments
          phone: phone
          prefix: prefix
          fullName: fullName
          title: title
          fax: fax
          additionalDetails: additionalDetails
          email: email
        fccId: fccId
        type: type
        ahjType: ahjType
      properties:
        ahjType:
          type: string
          xml:
            attribute: true
        ahjId:
          type: string
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
        fccId:
          type: string
          xml:
            attribute: true
        agency:
          type: string
        phone:
          type: string
        comments:
          type: string
        coverage:
          $ref: '#/components/schemas/coverage'
        contactPerson:
          $ref: '#/components/schemas/contactPerson'
        mailingAddress:
          $ref: '#/components/schemas/AHJmailingAddress'
      type: object
      xml:
        name: ahj
    WaterBodyResponse:
      example:
        waterBody:
        - distance:
            unit: unit
            value: value
          name: name
          type:
            code: code
            value: value
        - distance:
            unit: unit
            value: value
          name: name
          type:
            code: code
            value: value
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        waterBody:
          items:
            $ref: '#/components/schemas/waterBody'
          type: array
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: waterBodies
    waterBody:
      example:
        distance:
          unit: unit
          value: value
        name: name
        type:
          code: code
          value: value
      properties:
        name:
          type: string
        distance:
          $ref: '#/components/schemas/ShoreLineDistance'
        type:
          $ref: '#/components/schemas/Type'
      type: object
      xml:
        name: waterBody
    ShoreLineDistance:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Type:
      example:
        code: code
        value: value
      properties:
        code:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    RiskAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    DistanceToFloodHazardResponse:
      example:
        waterBodies:
        - waterBody:
          - distance:
              unit: unit
              value: value
            name: name
            type:
              code: code
              value: value
          - distance:
              unit: unit
              value: value
            name: name
            type:
              code: code
              value: value
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - waterBody:
          - distance:
              unit: unit
              value: value
            name: name
            type:
              code: code
              value: value
          - distance:
              unit: unit
              value: value
            name: name
            type:
              code: code
              value: value
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        waterBodies:
          items:
            $ref: '#/components/schemas/WaterBodyResponse'
          type: array
      type: object
      xml:
        name: waterBodiesResponse
    DistanceToFloodHazardLocationRequest:
      example:
        preferences:
          waterBodyType: waterBodyType
          maxCandidates: maxCandidates
          searchDistance: searchDistance
          searchDistanceUnit: searchDistanceUnit
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/RiskLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/FloodHazardPreferences'
      required:
      - locations
      type: object
      xml:
        name: waterBodiesLocationRequest
    RiskLocations:
      example:
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        objectId: objectId
        purchaseAmount: purchaseAmount
      properties:
        geometry:
          $ref: '#/components/schemas/RiskGeometry'
        purchaseAmount:
          type: string
        objectId:
          type: string
      required:
      - geometry
      type: object
    RiskGeometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      required:
      - type
      type: object
    FloodHazardPreferences:
      example:
        waterBodyType: waterBodyType
        maxCandidates: maxCandidates
        searchDistance: searchDistance
        searchDistanceUnit: searchDistanceUnit
      properties:
        waterBodyType:
          type: string
        maxCandidates:
          type: string
        searchDistance:
          type: string
        searchDistanceUnit:
          type: string
      type: object
      xml:
        name: preferences
    DistanceToFloodHazardAddressRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          waterBodyType: waterBodyType
          maxCandidates: maxCandidates
          searchDistance: searchDistance
          searchDistanceUnit: searchDistanceUnit
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/RiskAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/FloodHazardPreferences'
      required:
      - addresses
      type: object
      xml:
        name: waterBodiesAddressRequest
    FloodRiskResponse:
      example:
        boundary:
          ref: ref
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: id
          type: type
        floodZone:
          primaryZone:
            code: code
            description: description
          code: code
          riskLevel: riskLevel
          areaType: areaType
          baseFloodElevation:
            unit: unit
            value: value
          additionalInfo: additionalInfo
        state:
          code: code
          fips: fips
        community:
          number: number
          status:
            code: code
            description: description
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        state:
          $ref: '#/components/schemas/State'
        floodZone:
          $ref: '#/components/schemas/FloodZone'
        community:
          $ref: '#/components/schemas/Community'
        boundary:
          $ref: '#/components/schemas/CrimeBoundary'
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: floodRisk
    State:
      example:
        code: code
        fips: fips
      properties:
        fips:
          type: string
          xml:
            attribute: true
        code:
          type: string
      type: object
    FloodZone:
      example:
        primaryZone:
          code: code
          description: description
        code: code
        riskLevel: riskLevel
        areaType: areaType
        baseFloodElevation:
          unit: unit
          value: value
        additionalInfo: additionalInfo
      properties:
        code:
          type: string
          xml:
            attribute: true
        areaType:
          type: string
        riskLevel:
          type: string
        primaryZone:
          $ref: '#/components/schemas/PrimaryZone'
        baseFloodElevation:
          $ref: '#/components/schemas/BaseFloodElevation'
        additionalInfo:
          type: string
      type: object
    PrimaryZone:
      example:
        code: code
        description: description
      properties:
        code:
          type: string
          xml:
            attribute: true
        description:
          type: string
      type: object
    BaseFloodElevation:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    Community:
      example:
        number: number
        status:
          code: code
          description: description
      properties:
        number:
          type: string
        status:
          $ref: '#/components/schemas/Status'
      type: object
      xml:
        name: community
    Status:
      example:
        code: code
        description: description
      properties:
        code:
          type: string
          xml:
            attribute: true
        description:
          type: string
      type: object
    CrimeBoundary:
      example:
        ref: ref
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
        id: id
        type: type
      properties:
        id:
          type: string
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
        ref:
          type: string
          xml:
            attribute: true
        geometry:
          $ref: '#/components/schemas/CommonGeometry'
      type: object
    CommonGeometry:
      example:
        crs:
          type: type
          properties:
            name: name
        coordinates: '{}'
        type: type
      properties:
        type:
          type: string
        crs:
          $ref: '#/components/schemas/RisksGeometryCRC'
        coordinates:
          type: object
      type: object
    RisksGeometryCRC:
      example:
        type: type
        properties:
          name: name
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/GeometryProperties'
      type: object
    FloodRiskResponseList:
      example:
        floodRisk:
        - boundary:
            ref: ref
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: id
            type: type
          floodZone:
            primaryZone:
              code: code
              description: description
            code: code
            riskLevel: riskLevel
            areaType: areaType
            baseFloodElevation:
              unit: unit
              value: value
            additionalInfo: additionalInfo
          state:
            code: code
            fips: fips
          community:
            number: number
            status:
              code: code
              description: description
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - boundary:
            ref: ref
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: id
            type: type
          floodZone:
            primaryZone:
              code: code
              description: description
            code: code
            riskLevel: riskLevel
            areaType: areaType
            baseFloodElevation:
              unit: unit
              value: value
            additionalInfo: additionalInfo
          state:
            code: code
            fips: fips
          community:
            number: number
            status:
              code: code
              description: description
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        floodRisk:
          items:
            $ref: '#/components/schemas/FloodRiskResponse'
          type: array
      type: object
      xml:
        name: floodRiskResponse
    FloodRiskByLocationRequest:
      example:
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/RiskLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/FloodRiskPreferences'
      required:
      - locations
      type: object
      xml:
        name: floodRiskLocationRequest
    FloodRiskPreferences:
      example:
        richterValue: richterValue
        includeZoneDesc: includeZoneDesc
        includeGeometry: includeGeometry
      properties:
        includeGeometry:
          type: string
        includeZoneDesc:
          type: string
        richterValue:
          type: string
      type: object
      xml:
        name: preferences
    FloodRiskByAddressRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/RiskAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/FloodRiskPreferences'
      required:
      - addresses
      type: object
      xml:
        name: floodRiskAddressRequest
    FireRiskResponse:
      example:
        state:
          code: code
          fips: fips
        objectId: objectId
        fireShed:
          risk:
            severity: 5
            risk50Rating: 6
            distanceToFireStation: 2
            pastFires: 5
            golfCourse: golfCourse
            roadDist: roadDist
            continuity: continuity
            description: description
            vegetation: vegetation
            waterDist: waterDist
            tierDescription: tierDescription
            type: type
            slope: slope
            frequency: 1
            nonburn: nonburn
            foehn: foehn
            tier: tier
            aspect: aspect
            adjustment: adjustment
            crownFire: crownFire
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: 0
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        state:
          $ref: '#/components/schemas/State'
        fireShed:
          $ref: '#/components/schemas/FireShed'
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: fireRisk
    FireShed:
      example:
        risk:
          severity: 5
          risk50Rating: 6
          distanceToFireStation: 2
          pastFires: 5
          golfCourse: golfCourse
          roadDist: roadDist
          continuity: continuity
          description: description
          vegetation: vegetation
          waterDist: waterDist
          tierDescription: tierDescription
          type: type
          slope: slope
          frequency: 1
          nonburn: nonburn
          foehn: foehn
          tier: tier
          aspect: aspect
          adjustment: adjustment
          crownFire: crownFire
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
        id: 0
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        risk:
          $ref: '#/components/schemas/Risk'
        geometry:
          $ref: '#/components/schemas/CommonGeometry'
      type: object
    Risk:
      example:
        severity: 5
        risk50Rating: 6
        distanceToFireStation: 2
        pastFires: 5
        golfCourse: golfCourse
        roadDist: roadDist
        continuity: continuity
        description: description
        vegetation: vegetation
        waterDist: waterDist
        tierDescription: tierDescription
        type: type
        slope: slope
        frequency: 1
        nonburn: nonburn
        foehn: foehn
        tier: tier
        aspect: aspect
        adjustment: adjustment
        crownFire: crownFire
      properties:
        type:
          type: string
          xml:
            attribute: true
        description:
          type: string
        risk50Rating:
          format: int32
          type: integer
        frequency:
          format: int32
          type: integer
        nonburn:
          type: string
        pastFires:
          format: int32
          type: integer
        severity:
          format: int32
          type: integer
        continuity:
          type: string
        adjustment:
          type: string
        aspect:
          type: string
        crownFire:
          type: string
        vegetation:
          type: string
        foehn:
          type: string
        golfCourse:
          type: string
        roadDist:
          type: string
        slope:
          type: string
        waterDist:
          type: string
        tier:
          type: string
        tierDescription:
          type: string
        distanceToFireStation:
          format: int32
          type: integer
      type: object
    FireRiskResponseList:
      example:
        fireRisk:
        - state:
            code: code
            fips: fips
          objectId: objectId
          fireShed:
            risk:
              severity: 5
              risk50Rating: 6
              distanceToFireStation: 2
              pastFires: 5
              golfCourse: golfCourse
              roadDist: roadDist
              continuity: continuity
              description: description
              vegetation: vegetation
              waterDist: waterDist
              tierDescription: tierDescription
              type: type
              slope: slope
              frequency: 1
              nonburn: nonburn
              foehn: foehn
              tier: tier
              aspect: aspect
              adjustment: adjustment
              crownFire: crownFire
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: 0
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - state:
            code: code
            fips: fips
          objectId: objectId
          fireShed:
            risk:
              severity: 5
              risk50Rating: 6
              distanceToFireStation: 2
              pastFires: 5
              golfCourse: golfCourse
              roadDist: roadDist
              continuity: continuity
              description: description
              vegetation: vegetation
              waterDist: waterDist
              tierDescription: tierDescription
              type: type
              slope: slope
              frequency: 1
              nonburn: nonburn
              foehn: foehn
              tier: tier
              aspect: aspect
              adjustment: adjustment
              crownFire: crownFire
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: 0
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        fireRisk:
          items:
            $ref: '#/components/schemas/FireRiskResponse'
          type: array
      type: object
      xml:
        name: fireRiskResponse
    FireRiskByLocationRequest:
      example:
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/RiskLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/RiskPreferences'
      required:
      - locations
      type: object
      xml:
        name: fireRiskLocationRequest
    RiskPreferences:
      example:
        richterValue: richterValue
        includeZoneDesc: includeZoneDesc
        includeGeometry: includeGeometry
      properties:
        includeGeometry:
          type: string
        includeZoneDesc:
          type: string
        richterValue:
          type: string
      type: object
      xml:
        name: preferences
    FireRiskByAddressRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/RiskAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/RiskPreferences'
      required:
      - addresses
      type: object
      xml:
        name: fireRiskAddressRequest
    EarthquakeRiskResponse:
      example:
        riskLevel: riskLevel
        grid:
          code: code
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
        eventsCount:
          r2: r2
          r1_ge: r1_ge
          r3: r3
          r4: r4
          r0_ge: r0_ge
          r5: r5
          r2_ge: r2_ge
          r3_ge: r3_ge
          r6: r6
          r4_ge: r4_ge
          r7: r7
          total: total
          r7_ge: r7_ge
          r6_ge: r6_ge
          r5_ge: r5_ge
          r0: r0
          r1: r1
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        riskLevel:
          type: string
        eventsCount:
          $ref: '#/components/schemas/EventsCount'
        grid:
          $ref: '#/components/schemas/Grid'
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: earthquakeRisk
    EventsCount:
      example:
        r2: r2
        r1_ge: r1_ge
        r3: r3
        r4: r4
        r0_ge: r0_ge
        r5: r5
        r2_ge: r2_ge
        r3_ge: r3_ge
        r6: r6
        r4_ge: r4_ge
        r7: r7
        total: total
        r7_ge: r7_ge
        r6_ge: r6_ge
        r5_ge: r5_ge
        r0: r0
        r1: r1
      properties:
        total:
          type: string
        r0:
          type: string
        r1:
          type: string
        r2:
          type: string
        r3:
          type: string
        r4:
          type: string
        r5:
          type: string
        r6:
          type: string
        r7:
          type: string
        r0_ge:
          type: string
        r1_ge:
          type: string
        r2_ge:
          type: string
        r3_ge:
          type: string
        r4_ge:
          type: string
        r5_ge:
          type: string
        r6_ge:
          type: string
        r7_ge:
          type: string
      type: object
    Grid:
      example:
        code: code
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
      properties:
        code:
          type: string
          xml:
            attribute: true
        geometry:
          $ref: '#/components/schemas/CommonGeometry'
      type: object
    EarthquakeRiskResponseList:
      example:
        earthquakeRisk:
        - riskLevel: riskLevel
          grid:
            code: code
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
          eventsCount:
            r2: r2
            r1_ge: r1_ge
            r3: r3
            r4: r4
            r0_ge: r0_ge
            r5: r5
            r2_ge: r2_ge
            r3_ge: r3_ge
            r6: r6
            r4_ge: r4_ge
            r7: r7
            total: total
            r7_ge: r7_ge
            r6_ge: r6_ge
            r5_ge: r5_ge
            r0: r0
            r1: r1
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - riskLevel: riskLevel
          grid:
            code: code
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
          eventsCount:
            r2: r2
            r1_ge: r1_ge
            r3: r3
            r4: r4
            r0_ge: r0_ge
            r5: r5
            r2_ge: r2_ge
            r3_ge: r3_ge
            r6: r6
            r4_ge: r4_ge
            r7: r7
            total: total
            r7_ge: r7_ge
            r6_ge: r6_ge
            r5_ge: r5_ge
            r0: r0
            r1: r1
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        earthquakeRisk:
          items:
            $ref: '#/components/schemas/EarthquakeRiskResponse'
          type: array
      type: object
      xml:
        name: earthquakeRiskResponse
    EarthquakeRiskByLocationRequest:
      example:
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/RiskLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/RiskPreferences'
      required:
      - locations
      type: object
      xml:
        name: earthquakeRiskLocationRequest
    EarthquakeRiskByAddressRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          richterValue: richterValue
          includeZoneDesc: includeZoneDesc
          includeGeometry: includeGeometry
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/RiskAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/RiskPreferences'
      required:
      - addresses
      type: object
      xml:
        name: earthquakeRiskAddressRequest
    CrimeRiskResponse:
      example:
        themes:
        - crimeIndexTheme:
            boundaryRef: boundaryRef
            source: source
            indexVariable:
            - score: score
              percentile: percentile
              name: name
              category: category
              stateScore: stateScore
            - score: score
              percentile: percentile
              name: name
              category: category
              stateScore: stateScore
        - crimeIndexTheme:
            boundaryRef: boundaryRef
            source: source
            indexVariable:
            - score: score
              percentile: percentile
              name: name
              category: category
              stateScore: stateScore
            - score: score
              percentile: percentile
              name: name
              category: category
              stateScore: stateScore
        boundaries:
          boundary:
          - ref: ref
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: id
            type: type
          - ref: ref
            geometry:
              crs:
                type: type
                properties:
                  name: name
              coordinates: '{}'
              type: type
            id: id
            type: type
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        themes:
          items:
            $ref: '#/components/schemas/RisksCrimeTheme'
          type: array
        boundaries:
          $ref: '#/components/schemas/RisksBoundaries'
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: crimeRisk
    RisksCrimeTheme:
      example:
        crimeIndexTheme:
          boundaryRef: boundaryRef
          source: source
          indexVariable:
          - score: score
            percentile: percentile
            name: name
            category: category
            stateScore: stateScore
          - score: score
            percentile: percentile
            name: name
            category: category
            stateScore: stateScore
      properties:
        crimeIndexTheme:
          $ref: '#/components/schemas/CrimeIndexTheme'
      type: object
    CrimeIndexTheme:
      example:
        boundaryRef: boundaryRef
        source: source
        indexVariable:
        - score: score
          percentile: percentile
          name: name
          category: category
          stateScore: stateScore
        - score: score
          percentile: percentile
          name: name
          category: category
          stateScore: stateScore
      properties:
        source:
          type: string
          xml:
            attribute: true
        boundaryRef:
          type: string
        indexVariable:
          items:
            $ref: '#/components/schemas/IndexVariable'
          type: array
      type: object
    IndexVariable:
      example:
        score: score
        percentile: percentile
        name: name
        category: category
        stateScore: stateScore
      properties:
        name:
          type: string
          xml:
            attribute: true
        score:
          type: string
        category:
          type: string
          xml:
            attribute: true
        percentile:
          type: string
          xml:
            attribute: true
        stateScore:
          type: string
          xml:
            attribute: true
      type: object
    RisksBoundaries:
      example:
        boundary:
        - ref: ref
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: id
          type: type
        - ref: ref
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: id
          type: type
      properties:
        boundary:
          items:
            $ref: '#/components/schemas/CrimeBoundary'
          type: array
      type: object
    CrimeRiskResponseList:
      example:
        crimeRisk:
        - themes:
          - crimeIndexTheme:
              boundaryRef: boundaryRef
              source: source
              indexVariable:
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
          - crimeIndexTheme:
              boundaryRef: boundaryRef
              source: source
              indexVariable:
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
          boundaries:
            boundary:
            - ref: ref
              geometry:
                crs:
                  type: type
                  properties:
                    name: name
                coordinates: '{}'
                type: type
              id: id
              type: type
            - ref: ref
              geometry:
                crs:
                  type: type
                  properties:
                    name: name
                coordinates: '{}'
                type: type
              id: id
              type: type
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - themes:
          - crimeIndexTheme:
              boundaryRef: boundaryRef
              source: source
              indexVariable:
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
          - crimeIndexTheme:
              boundaryRef: boundaryRef
              source: source
              indexVariable:
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
              - score: score
                percentile: percentile
                name: name
                category: category
                stateScore: stateScore
          boundaries:
            boundary:
            - ref: ref
              geometry:
                crs:
                  type: type
                  properties:
                    name: name
                coordinates: '{}'
                type: type
              id: id
              type: type
            - ref: ref
              geometry:
                crs:
                  type: type
                  properties:
                    name: name
                coordinates: '{}'
                type: type
              id: id
              type: type
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        crimeRisk:
          items:
            $ref: '#/components/schemas/CrimeRiskResponse'
          type: array
      type: object
      xml:
        name: crimeRiskResponse
    CrimeRiskByLocationBatchRequest:
      example:
        preferences:
          includeGeometry: includeGeometry
          type: type
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/RiskLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/CrimeRiskPreferences'
      required:
      - locations
      type: object
      xml:
        name: crimeRiskLocationRequest
    CrimeRiskPreferences:
      example:
        includeGeometry: includeGeometry
        type: type
      properties:
        includeGeometry:
          type: string
        type:
          type: string
      type: object
      xml:
        name: preferences
    CrimeRiskByAddressBatchRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          includeGeometry: includeGeometry
          type: type
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/RiskAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/CrimeRiskPreferences'
      required:
      - addresses
      type: object
      xml:
        name: crimeRiskAddressRequest
    fireStations:
      example:
        fireStation:
        - numWithinDepartment: numWithinDepartment
          travelTime:
            unit: unit
            value: value
          travelDistance:
            unit: unit
            value: value
          fireDepartment:
            name: name
            numberOfStations: 0
            administrativeOfficeOnly: true
            type: type
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              phone: phone
              fax: fax
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          locationReference: locationReference
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            fax: fax
        - numWithinDepartment: numWithinDepartment
          travelTime:
            unit: unit
            value: value
          travelDistance:
            unit: unit
            value: value
          fireDepartment:
            name: name
            numberOfStations: 0
            administrativeOfficeOnly: true
            type: type
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              phone: phone
              fax: fax
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          locationReference: locationReference
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            fax: fax
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        fireStation:
          items:
            $ref: '#/components/schemas/fireStation'
          type: array
        matchedAddress:
          $ref: '#/components/schemas/RiskAddress'
      type: object
      xml:
        name: fireStations
    fireStation:
      example:
        numWithinDepartment: numWithinDepartment
        travelTime:
          unit: unit
          value: value
        travelDistance:
          unit: unit
          value: value
        fireDepartment:
          name: name
          numberOfStations: 0
          administrativeOfficeOnly: true
          type: type
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            fax: fax
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        locationReference: locationReference
        contactDetails:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          phone: phone
          fax: fax
      properties:
        numWithinDepartment:
          type: string
        locationReference:
          type: string
        travelDistance:
          $ref: '#/components/schemas/distance'
        travelTime:
          $ref: '#/components/schemas/Time'
        contactDetails:
          $ref: '#/components/schemas/FireStationContactDetails'
        fireDepartment:
          $ref: '#/components/schemas/FireDepartment'
        geometry:
          $ref: '#/components/schemas/Geometry'
      type: object
      xml:
        name: fireStation
    Time:
      example:
        unit: unit
        value: value
      properties:
        value:
          type: string
        unit:
          type: string
          xml:
            attribute: true
      type: object
    FireStationContactDetails:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        phone: phone
        fax: fax
      properties:
        address:
          $ref: '#/components/schemas/RiskAddress'
        phone:
          type: string
        fax:
          type: string
      type: object
    FireDepartment:
      example:
        name: name
        numberOfStations: 0
        administrativeOfficeOnly: true
        type: type
        contactDetails:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          phone: phone
          fax: fax
      properties:
        name:
          type: string
        type:
          type: string
        numberOfStations:
          format: int32
          type: integer
        administrativeOfficeOnly:
          type: boolean
        contactDetails:
          $ref: '#/components/schemas/FireStationContactDetails'
      type: object
    FireHistory:
      example:
        stateCode: stateCode
        postCode: postCode
        events:
          event:
          - fireEndDate: fireEndDate
            area:
              unit: unit
              value: value
            fireName: fireName
            agency: agency
            fireStartDate: fireStartDate
          - fireEndDate: fireEndDate
            area:
              unit: unit
              value: value
            fireName: fireName
            agency: agency
            fireStartDate: fireStartDate
      properties:
        stateCode:
          type: string
        postCode:
          type: string
        events:
          $ref: '#/components/schemas/FireEventsResponse'
      type: object
      xml:
        name: fireHistory
    FireEventsResponse:
      example:
        event:
        - fireEndDate: fireEndDate
          area:
            unit: unit
            value: value
          fireName: fireName
          agency: agency
          fireStartDate: fireStartDate
        - fireEndDate: fireEndDate
          area:
            unit: unit
            value: value
          fireName: fireName
          agency: agency
          fireStartDate: fireStartDate
      properties:
        event:
          items:
            $ref: '#/components/schemas/FireEvent'
          type: array
      type: object
    FireEvent:
      example:
        fireEndDate: fireEndDate
        area:
          unit: unit
          value: value
        fireName: fireName
        agency: agency
        fireStartDate: fireStartDate
      properties:
        fireStartDate:
          type: string
        fireEndDate:
          type: string
        fireName:
          type: string
        area:
          $ref: '#/components/schemas/Area'
        agency:
          type: string
      type: object
      xml:
        name: event
    Area:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          type: string
      type: object
    earthquakeHistory:
      example:
        county: county
        stateCode: stateCode
        postCode: postCode
        events:
          earthuakeEvents:
          - dateTime:
              date: date
              time: time
            intensity: 9
            culturalEffect: culturalEffect
            depth:
              unit: unit
              value: 6
            diastrophism: diastrophism
            cause: cause
            magnitude:
              surfaceWave: 5.637376656633329
              bodyWave: 5.962133916683182
              bodyWaveValue: 7.061401241503109
              scale: scale
              surfaceWaveValue: 2.3021358869347655
              value: 1.4658129805029452
            location:
              coordinates:
              - 3.616076749251911
              - 3.616076749251911
              type: type
            miscPhenomena: miscPhenomena
            seismicRegionNumber: 0
          - dateTime:
              date: date
              time: time
            intensity: 9
            culturalEffect: culturalEffect
            depth:
              unit: unit
              value: 6
            diastrophism: diastrophism
            cause: cause
            magnitude:
              surfaceWave: 5.637376656633329
              bodyWave: 5.962133916683182
              bodyWaveValue: 7.061401241503109
              scale: scale
              surfaceWaveValue: 2.3021358869347655
              value: 1.4658129805029452
            location:
              coordinates:
              - 3.616076749251911
              - 3.616076749251911
              type: type
            miscPhenomena: miscPhenomena
            seismicRegionNumber: 0
          event:
          - dateTime:
              date: date
              time: time
            intensity: 9
            culturalEffect: culturalEffect
            depth:
              unit: unit
              value: 6
            diastrophism: diastrophism
            cause: cause
            magnitude:
              surfaceWave: 5.637376656633329
              bodyWave: 5.962133916683182
              bodyWaveValue: 7.061401241503109
              scale: scale
              surfaceWaveValue: 2.3021358869347655
              value: 1.4658129805029452
            location:
              coordinates:
              - 3.616076749251911
              - 3.616076749251911
              type: type
            miscPhenomena: miscPhenomena
            seismicRegionNumber: 0
          - dateTime:
              date: date
              time: time
            intensity: 9
            culturalEffect: culturalEffect
            depth:
              unit: unit
              value: 6
            diastrophism: diastrophism
            cause: cause
            magnitude:
              surfaceWave: 5.637376656633329
              bodyWave: 5.962133916683182
              bodyWaveValue: 7.061401241503109
              scale: scale
              surfaceWaveValue: 2.3021358869347655
              value: 1.4658129805029452
            location:
              coordinates:
              - 3.616076749251911
              - 3.616076749251911
              type: type
            miscPhenomena: miscPhenomena
            seismicRegionNumber: 0
      properties:
        stateCode:
          type: string
        county:
          type: string
        postCode:
          type: string
        events:
          $ref: '#/components/schemas/EarthquakeEventsResponse'
      type: object
      xml:
        name: earthquakeHistory
    EarthquakeEventsResponse:
      example:
        earthuakeEvents:
        - dateTime:
            date: date
            time: time
          intensity: 9
          culturalEffect: culturalEffect
          depth:
            unit: unit
            value: 6
          diastrophism: diastrophism
          cause: cause
          magnitude:
            surfaceWave: 5.637376656633329
            bodyWave: 5.962133916683182
            bodyWaveValue: 7.061401241503109
            scale: scale
            surfaceWaveValue: 2.3021358869347655
            value: 1.4658129805029452
          location:
            coordinates:
            - 3.616076749251911
            - 3.616076749251911
            type: type
          miscPhenomena: miscPhenomena
          seismicRegionNumber: 0
        - dateTime:
            date: date
            time: time
          intensity: 9
          culturalEffect: culturalEffect
          depth:
            unit: unit
            value: 6
          diastrophism: diastrophism
          cause: cause
          magnitude:
            surfaceWave: 5.637376656633329
            bodyWave: 5.962133916683182
            bodyWaveValue: 7.061401241503109
            scale: scale
            surfaceWaveValue: 2.3021358869347655
            value: 1.4658129805029452
          location:
            coordinates:
            - 3.616076749251911
            - 3.616076749251911
            type: type
          miscPhenomena: miscPhenomena
          seismicRegionNumber: 0
        event:
        - dateTime:
            date: date
            time: time
          intensity: 9
          culturalEffect: culturalEffect
          depth:
            unit: unit
            value: 6
          diastrophism: diastrophism
          cause: cause
          magnitude:
            surfaceWave: 5.637376656633329
            bodyWave: 5.962133916683182
            bodyWaveValue: 7.061401241503109
            scale: scale
            surfaceWaveValue: 2.3021358869347655
            value: 1.4658129805029452
          location:
            coordinates:
            - 3.616076749251911
            - 3.616076749251911
            type: type
          miscPhenomena: miscPhenomena
          seismicRegionNumber: 0
        - dateTime:
            date: date
            time: time
          intensity: 9
          culturalEffect: culturalEffect
          depth:
            unit: unit
            value: 6
          diastrophism: diastrophism
          cause: cause
          magnitude:
            surfaceWave: 5.637376656633329
            bodyWave: 5.962133916683182
            bodyWaveValue: 7.061401241503109
            scale: scale
            surfaceWaveValue: 2.3021358869347655
            value: 1.4658129805029452
          location:
            coordinates:
            - 3.616076749251911
            - 3.616076749251911
            type: type
          miscPhenomena: miscPhenomena
          seismicRegionNumber: 0
      properties:
        earthuakeEvents:
          items:
            $ref: '#/components/schemas/EarthquakeEvent'
          type: array
          writeOnly: true
        event:
          items:
            $ref: '#/components/schemas/EarthquakeEvent'
          type: array
      type: object
    EarthquakeEvent:
      example:
        dateTime:
          date: date
          time: time
        intensity: 9
        culturalEffect: culturalEffect
        depth:
          unit: unit
          value: 6
        diastrophism: diastrophism
        cause: cause
        magnitude:
          surfaceWave: 5.637376656633329
          bodyWave: 5.962133916683182
          bodyWaveValue: 7.061401241503109
          scale: scale
          surfaceWaveValue: 2.3021358869347655
          value: 1.4658129805029452
        location:
          coordinates:
          - 3.616076749251911
          - 3.616076749251911
          type: type
        miscPhenomena: miscPhenomena
        seismicRegionNumber: 0
      properties:
        dateTime:
          $ref: '#/components/schemas/EarthquakeDateTime'
        seismicRegionNumber:
          format: int32
          type: integer
        depth:
          $ref: '#/components/schemas/Depth'
        magnitude:
          $ref: '#/components/schemas/Magnitude'
        cause:
          type: string
        culturalEffect:
          type: string
        intensity:
          format: int32
          type: integer
        diastrophism:
          type: string
        miscPhenomena:
          type: string
        location:
          $ref: '#/components/schemas/EarthquakeLocation'
      type: object
    EarthquakeDateTime:
      example:
        date: date
        time: time
      properties:
        date:
          type: string
        time:
          type: string
      type: object
    Depth:
      example:
        unit: unit
        value: 6
      properties:
        unit:
          type: string
          xml:
            attribute: true
        value:
          format: int32
          type: integer
      type: object
    Magnitude:
      example:
        surfaceWave: 5.637376656633329
        bodyWave: 5.962133916683182
        bodyWaveValue: 7.061401241503109
        scale: scale
        surfaceWaveValue: 2.3021358869347655
        value: 1.4658129805029452
      properties:
        value:
          format: double
          type: number
        scale:
          type: string
          xml:
            attribute: true
        bodyWave:
          format: double
          type: number
        surfaceWave:
          format: double
          type: number
        surfaceWaveValue:
          format: double
          type: number
          writeOnly: true
        bodyWaveValue:
          format: double
          type: number
          writeOnly: true
      type: object
    EarthquakeLocation:
      example:
        coordinates:
        - 3.616076749251911
        - 3.616076749251911
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      type: object
    TravelCostMatrixResponse:
      example:
        matrix:
        - distanceUnit: distanceUnit
          endPoint:
            coordinates:
            - 6.027456183070403
            - 6.027456183070403
            type: type
          distance: 0.8008281904610115
          startPoint:
            coordinates:
            - 6.027456183070403
            - 6.027456183070403
            type: type
          time: 1.4658129805029452
          timeUnit: timeUnit
        - distanceUnit: distanceUnit
          endPoint:
            coordinates:
            - 6.027456183070403
            - 6.027456183070403
            type: type
          distance: 0.8008281904610115
          startPoint:
            coordinates:
            - 6.027456183070403
            - 6.027456183070403
            type: type
          time: 1.4658129805029452
          timeUnit: timeUnit
      properties:
        matrix:
          items:
            $ref: '#/components/schemas/Matrix'
          type: array
      type: object
    Matrix:
      example:
        distanceUnit: distanceUnit
        endPoint:
          coordinates:
          - 6.027456183070403
          - 6.027456183070403
          type: type
        distance: 0.8008281904610115
        startPoint:
          coordinates:
          - 6.027456183070403
          - 6.027456183070403
          type: type
        time: 1.4658129805029452
        timeUnit: timeUnit
      properties:
        distance:
          type: number
        distanceUnit:
          type: string
        endPoint:
          $ref: '#/components/schemas/StartEndPoint'
        startPoint:
          $ref: '#/components/schemas/StartEndPoint'
        time:
          type: number
        timeUnit:
          type: string
      type: object
    StartEndPoint:
      example:
        coordinates:
        - 6.027456183070403
        - 6.027456183070403
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            type: number
          type: array
      type: object
    RouteResponse:
      example:
        routeDirections:
        - distanceUnit: distanceUnit
          distance: 5.962133916683182
          instruction: instruction
          time: 5.637376656633329
          timeUnit: timeUnit
          directionGeometry:
            coordinates:
            - - 1.4658129805029452
              - 1.4658129805029452
            - - 1.4658129805029452
              - 1.4658129805029452
            type: type
        - distanceUnit: distanceUnit
          distance: 5.962133916683182
          instruction: instruction
          time: 5.637376656633329
          timeUnit: timeUnit
          directionGeometry:
            coordinates:
            - - 1.4658129805029452
              - 1.4658129805029452
            - - 1.4658129805029452
              - 1.4658129805029452
            type: type
        distanceUnit: distanceUnit
        distance: 0.8008281904610115
        directionsStyle: directionsStyle
        language: language
        geometry:
          coordinates:
          - - 1.4658129805029452
            - 1.4658129805029452
          - - 1.4658129805029452
            - 1.4658129805029452
          type: type
        time: 6.027456183070403
        intermediatePoints:
          coordinates:
          - - 2.3021358869347655
            - 2.3021358869347655
          - - 2.3021358869347655
            - 2.3021358869347655
          type: type
        timeUnit: timeUnit
      properties:
        directionsStyle:
          type: string
        distance:
          type: number
        distanceUnit:
          type: string
        language:
          type: string
        timeUnit:
          type: string
        time:
          type: number
        geometry:
          $ref: '#/components/schemas/RouteGeometry'
        routeDirections:
          items:
            $ref: '#/components/schemas/RouteDirection'
          properties:
            empty:
              type: boolean
          type: array
        intermediatePoints:
          $ref: '#/components/schemas/IntermediatePoints'
      type: object
    RouteGeometry:
      example:
        coordinates:
        - - 1.4658129805029452
          - 1.4658129805029452
        - - 1.4658129805029452
          - 1.4658129805029452
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            items:
              format: double
              type: number
            type: array
          type: array
      type: object
    RouteDirection:
      example:
        distanceUnit: distanceUnit
        distance: 5.962133916683182
        instruction: instruction
        time: 5.637376656633329
        timeUnit: timeUnit
        directionGeometry:
          coordinates:
          - - 1.4658129805029452
            - 1.4658129805029452
          - - 1.4658129805029452
            - 1.4658129805029452
          type: type
      properties:
        distance:
          type: number
        distanceUnit:
          type: string
        timeUnit:
          type: string
        time:
          type: number
        instruction:
          type: string
        directionGeometry:
          $ref: '#/components/schemas/RouteGeometry'
      type: object
    IntermediatePoints:
      example:
        coordinates:
        - - 2.3021358869347655
          - 2.3021358869347655
        - - 2.3021358869347655
          - 2.3021358869347655
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            items:
              format: double
              type: number
            type: array
          type: array
      type: object
    SchoolsNearByResponse:
      example:
        school:
        - schoolSubTypeDesc: schoolSubTypeDesc
          gender: gender
          distance:
            unit: unit
            value: value
          schoolType: schoolType
          coextensiv: coextensiv
          students: students
          schoolDistricts:
            totalSchools: totalSchools
            metro: metro
            districtUrl: districtUrl
            name: name
            districtType: districtType
            supervisoryUnionId: supervisoryUnionId
            areaInSqM: areaInSqM
            ncesDistrictId: ncesDistrictId
            districtEnrollment: districtEnrollment
          genderDesc: genderDesc
          schoolProfile:
            titleI: titleI
            freeOrReducedPriceLunches:
              reducedPriceLunchedCount: reducedPriceLunchedCount
              freeLunchesCount: freeLunchesCount
              totalCount: totalCount
            studentBelowPovertyPct: studentBelowPovertyPct
            advancePlacementClasses: advancePlacementClasses
            internationalBaccalaureate: internationalBaccalaureate
            studentEthnicity:
              twoOrMoreRaces: twoOrMoreRaces
              hawaiianPacificlslander: hawaiianPacificlslander
              white: white
              asian: asian
              hispanic: hispanic
              black: black
              indianAlaskaNative: indianAlaskaNative
            blueRibbon: blueRibbon
            expensePerStudent: expensePerStudent
          schoolSubType: schoolSubType
          educationLevel: educationLevel
          teachers: teachers
          greatschools:
            gsId: gsId
            rating: rating
            url: url
          id: id
          ncesDistrictId: ncesDistrictId
          schoolRanking:
          - avgMathScore: avgMathScore
            current: current
            statePercentileScore: statePercentileScore
            stateRank: stateRank
            numberOfSchools: numberOfSchools
            avgReadingScore: avgReadingScore
            rankYear: rankYear
          - avgMathScore: avgMathScore
            current: current
            statePercentileScore: statePercentileScore
            stateRank: stateRank
            numberOfSchools: numberOfSchools
            avgReadingScore: avgReadingScore
            rankYear: rankYear
          website: website
          ncesSchoolId: ncesSchoolId
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          schoolTypeDesc: schoolTypeDesc
          addressType: addressType
          educationLevelDesc: educationLevelDesc
          lowestGrade: lowestGrade
          studentTeacherRatio: studentTeacherRatio
          phone: phone
          highestGrade: highestGrade
          ncesDataYear: ncesDataYear
          gradeLevelsTaught:
            tenth: tenth
            eighth: eighth
            eleventh: eleventh
            second: second
            sixth: sixth
            third: third
            seventh: seventh
            twelfth: twelfth
            ninth: ninth
            fifth: fifth
            pk: pk
            fourth: fourth
            kg: kg
            first: first
          name: name
          assigned: assigned
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          choice: choice
          status: status
        - schoolSubTypeDesc: schoolSubTypeDesc
          gender: gender
          distance:
            unit: unit
            value: value
          schoolType: schoolType
          coextensiv: coextensiv
          students: students
          schoolDistricts:
            totalSchools: totalSchools
            metro: metro
            districtUrl: districtUrl
            name: name
            districtType: districtType
            supervisoryUnionId: supervisoryUnionId
            areaInSqM: areaInSqM
            ncesDistrictId: ncesDistrictId
            districtEnrollment: districtEnrollment
          genderDesc: genderDesc
          schoolProfile:
            titleI: titleI
            freeOrReducedPriceLunches:
              reducedPriceLunchedCount: reducedPriceLunchedCount
              freeLunchesCount: freeLunchesCount
              totalCount: totalCount
            studentBelowPovertyPct: studentBelowPovertyPct
            advancePlacementClasses: advancePlacementClasses
            internationalBaccalaureate: internationalBaccalaureate
            studentEthnicity:
              twoOrMoreRaces: twoOrMoreRaces
              hawaiianPacificlslander: hawaiianPacificlslander
              white: white
              asian: asian
              hispanic: hispanic
              black: black
              indianAlaskaNative: indianAlaskaNative
            blueRibbon: blueRibbon
            expensePerStudent: expensePerStudent
          schoolSubType: schoolSubType
          educationLevel: educationLevel
          teachers: teachers
          greatschools:
            gsId: gsId
            rating: rating
            url: url
          id: id
          ncesDistrictId: ncesDistrictId
          schoolRanking:
          - avgMathScore: avgMathScore
            current: current
            statePercentileScore: statePercentileScore
            stateRank: stateRank
            numberOfSchools: numberOfSchools
            avgReadingScore: avgReadingScore
            rankYear: rankYear
          - avgMathScore: avgMathScore
            current: current
            statePercentileScore: statePercentileScore
            stateRank: stateRank
            numberOfSchools: numberOfSchools
            avgReadingScore: avgReadingScore
            rankYear: rankYear
          website: website
          ncesSchoolId: ncesSchoolId
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          schoolTypeDesc: schoolTypeDesc
          addressType: addressType
          educationLevelDesc: educationLevelDesc
          lowestGrade: lowestGrade
          studentTeacherRatio: studentTeacherRatio
          phone: phone
          highestGrade: highestGrade
          ncesDataYear: ncesDataYear
          gradeLevelsTaught:
            tenth: tenth
            eighth: eighth
            eleventh: eleventh
            second: second
            sixth: sixth
            third: third
            seventh: seventh
            twelfth: twelfth
            ninth: ninth
            fifth: fifth
            pk: pk
            fourth: fourth
            kg: kg
            first: first
          name: name
          assigned: assigned
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          choice: choice
          status: status
        schoolDistrict:
          totalSchools: totalSchools
          metro: metro
          districtUrl: districtUrl
          name: name
          districtType: districtType
          supervisoryUnionId: supervisoryUnionId
          areaInSqM: areaInSqM
          ncesDistrictId: ncesDistrictId
          districtEnrollment: districtEnrollment
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        matchedAddress:
          $ref: '#/components/schemas/address'
        school:
          items:
            $ref: '#/components/schemas/School'
          type: array
        schoolDistrict:
          $ref: '#/components/schemas/SchoolDistrict'
      type: object
      xml:
        name: schoolResponse
    School:
      example:
        schoolSubTypeDesc: schoolSubTypeDesc
        gender: gender
        distance:
          unit: unit
          value: value
        schoolType: schoolType
        coextensiv: coextensiv
        students: students
        schoolDistricts:
          totalSchools: totalSchools
          metro: metro
          districtUrl: districtUrl
          name: name
          districtType: districtType
          supervisoryUnionId: supervisoryUnionId
          areaInSqM: areaInSqM
          ncesDistrictId: ncesDistrictId
          districtEnrollment: districtEnrollment
        genderDesc: genderDesc
        schoolProfile:
          titleI: titleI
          freeOrReducedPriceLunches:
            reducedPriceLunchedCount: reducedPriceLunchedCount
            freeLunchesCount: freeLunchesCount
            totalCount: totalCount
          studentBelowPovertyPct: studentBelowPovertyPct
          advancePlacementClasses: advancePlacementClasses
          internationalBaccalaureate: internationalBaccalaureate
          studentEthnicity:
            twoOrMoreRaces: twoOrMoreRaces
            hawaiianPacificlslander: hawaiianPacificlslander
            white: white
            asian: asian
            hispanic: hispanic
            black: black
            indianAlaskaNative: indianAlaskaNative
          blueRibbon: blueRibbon
          expensePerStudent: expensePerStudent
        schoolSubType: schoolSubType
        educationLevel: educationLevel
        teachers: teachers
        greatschools:
          gsId: gsId
          rating: rating
          url: url
        id: id
        ncesDistrictId: ncesDistrictId
        schoolRanking:
        - avgMathScore: avgMathScore
          current: current
          statePercentileScore: statePercentileScore
          stateRank: stateRank
          numberOfSchools: numberOfSchools
          avgReadingScore: avgReadingScore
          rankYear: rankYear
        - avgMathScore: avgMathScore
          current: current
          statePercentileScore: statePercentileScore
          stateRank: stateRank
          numberOfSchools: numberOfSchools
          avgReadingScore: avgReadingScore
          rankYear: rankYear
        website: website
        ncesSchoolId: ncesSchoolId
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        schoolTypeDesc: schoolTypeDesc
        addressType: addressType
        educationLevelDesc: educationLevelDesc
        lowestGrade: lowestGrade
        studentTeacherRatio: studentTeacherRatio
        phone: phone
        highestGrade: highestGrade
        ncesDataYear: ncesDataYear
        gradeLevelsTaught:
          tenth: tenth
          eighth: eighth
          eleventh: eleventh
          second: second
          sixth: sixth
          third: third
          seventh: seventh
          twelfth: twelfth
          ninth: ninth
          fifth: fifth
          pk: pk
          fourth: fourth
          kg: kg
          first: first
        name: name
        assigned: assigned
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        choice: choice
        status: status
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        assigned:
          type: string
          xml:
            attribute: true
        phone:
          type: string
        website:
          type: string
        addressType:
          type: string
        address:
          $ref: '#/components/schemas/address'
        lowestGrade:
          type: string
        highestGrade:
          type: string
        schoolType:
          type: string
        schoolTypeDesc:
          type: string
        schoolSubType:
          type: string
        schoolSubTypeDesc:
          type: string
        gender:
          type: string
        genderDesc:
          type: string
        educationLevel:
          type: string
        educationLevelDesc:
          type: string
        greatschools:
          $ref: '#/components/schemas/Greatschools'
        ncesSchoolId:
          type: string
        ncesDistrictId:
          type: string
        ncesDataYear:
          type: string
        schoolRanking:
          items:
            $ref: '#/components/schemas/SchoolRanking'
          type: array
        students:
          type: string
        teachers:
          type: string
        status:
          type: string
        studentTeacherRatio:
          type: string
        choice:
          type: string
        coextensiv:
          type: string
        schoolDistricts:
          $ref: '#/components/schemas/SchoolDistrict'
        schoolProfile:
          $ref: '#/components/schemas/SchoolProfile'
        gradeLevelsTaught:
          $ref: '#/components/schemas/GradeLevelsTaught'
        distance:
          $ref: '#/components/schemas/distance'
        geometry:
          $ref: '#/components/schemas/Geometry'
      type: object
      xml:
        name: school
    Greatschools:
      example:
        gsId: gsId
        rating: rating
        url: url
      properties:
        gsId:
          type: string
        url:
          type: string
        rating:
          type: string
      type: object
    SchoolRanking:
      example:
        avgMathScore: avgMathScore
        current: current
        statePercentileScore: statePercentileScore
        stateRank: stateRank
        numberOfSchools: numberOfSchools
        avgReadingScore: avgReadingScore
        rankYear: rankYear
      properties:
        current:
          type: string
          xml:
            attribute: true
        rankYear:
          type: string
        stateRank:
          type: string
        numberOfSchools:
          type: string
        avgMathScore:
          type: string
        avgReadingScore:
          type: string
        statePercentileScore:
          type: string
      type: object
      xml:
        name: schoolRanking
    SchoolDistrict:
      example:
        totalSchools: totalSchools
        metro: metro
        districtUrl: districtUrl
        name: name
        districtType: districtType
        supervisoryUnionId: supervisoryUnionId
        areaInSqM: areaInSqM
        ncesDistrictId: ncesDistrictId
        districtEnrollment: districtEnrollment
      properties:
        ncesDistrictId:
          type: string
        name:
          type: string
        totalSchools:
          type: string
        districtType:
          type: string
        metro:
          type: string
        areaInSqM:
          type: string
        supervisoryUnionId:
          type: string
        districtEnrollment:
          type: string
        districtUrl:
          type: string
      type: object
    SchoolProfile:
      example:
        titleI: titleI
        freeOrReducedPriceLunches:
          reducedPriceLunchedCount: reducedPriceLunchedCount
          freeLunchesCount: freeLunchesCount
          totalCount: totalCount
        studentBelowPovertyPct: studentBelowPovertyPct
        advancePlacementClasses: advancePlacementClasses
        internationalBaccalaureate: internationalBaccalaureate
        studentEthnicity:
          twoOrMoreRaces: twoOrMoreRaces
          hawaiianPacificlslander: hawaiianPacificlslander
          white: white
          asian: asian
          hispanic: hispanic
          black: black
          indianAlaskaNative: indianAlaskaNative
        blueRibbon: blueRibbon
        expensePerStudent: expensePerStudent
      properties:
        blueRibbon:
          type: string
        internationalBaccalaureate:
          type: string
        titleI:
          type: string
        expensePerStudent:
          type: string
        studentBelowPovertyPct:
          type: string
        advancePlacementClasses:
          type: string
        freeOrReducedPriceLunches:
          $ref: '#/components/schemas/FreeOrReducedPriceLunches'
        studentEthnicity:
          $ref: '#/components/schemas/StudentEthnicity'
      type: object
    FreeOrReducedPriceLunches:
      example:
        reducedPriceLunchedCount: reducedPriceLunchedCount
        freeLunchesCount: freeLunchesCount
        totalCount: totalCount
      properties:
        freeLunchesCount:
          type: string
        reducedPriceLunchedCount:
          type: string
        totalCount:
          type: string
      type: object
    StudentEthnicity:
      example:
        twoOrMoreRaces: twoOrMoreRaces
        hawaiianPacificlslander: hawaiianPacificlslander
        white: white
        asian: asian
        hispanic: hispanic
        black: black
        indianAlaskaNative: indianAlaskaNative
      properties:
        indianAlaskaNative:
          type: string
        asian:
          type: string
        hispanic:
          type: string
        black:
          type: string
        white:
          type: string
        hawaiianPacificlslander:
          type: string
        twoOrMoreRaces:
          type: string
      type: object
    GradeLevelsTaught:
      example:
        tenth: tenth
        eighth: eighth
        eleventh: eleventh
        second: second
        sixth: sixth
        third: third
        seventh: seventh
        twelfth: twelfth
        ninth: ninth
        fifth: fifth
        pk: pk
        fourth: fourth
        kg: kg
        first: first
      properties:
        pk:
          type: string
        kg:
          type: string
        first:
          type: string
        second:
          type: string
        third:
          type: string
        fourth:
          type: string
        fifth:
          type: string
        sixth:
          type: string
        seventh:
          type: string
        eighth:
          type: string
        ninth:
          type: string
        tenth:
          type: string
        eleventh:
          type: string
        twelfth:
          type: string
      type: object
    SpeedLimit:
      example:
        speedUnit: speedUnit
        speedVerification: speedVerification
        pmPeakAvgSpeed: pmPeakAvgSpeed
        amPeakAvgSpeed: amPeakAvgSpeed
        offPeakAvgSpeed: offPeakAvgSpeed
        road:
          endingLevel: endingLevel
          routeNumber: routeNumber
          trafficFlow: trafficFlow
          surfaceType: surfaceType
          roadClass: roadClass
          beginningLevel: beginningLevel
          name: name
          lengthInMeters: lengthInMeters
          id: id
          altName: altName
          type: type
          isToll: isToll
        nightAvgSpeed: nightAvgSpeed
        maxSpeed: maxSpeed
        weekAvgSpeed: weekAvgSpeed
      properties:
        maxSpeed:
          type: string
        speedUnit:
          type: string
        speedVerification:
          type: string
        amPeakAvgSpeed:
          type: string
        pmPeakAvgSpeed:
          type: string
        offPeakAvgSpeed:
          type: string
        nightAvgSpeed:
          type: string
        weekAvgSpeed:
          type: string
        road:
          $ref: '#/components/schemas/road'
      type: object
      xml:
        name: speedLimit
    road:
      example:
        endingLevel: endingLevel
        routeNumber: routeNumber
        trafficFlow: trafficFlow
        surfaceType: surfaceType
        roadClass: roadClass
        beginningLevel: beginningLevel
        name: name
        lengthInMeters: lengthInMeters
        id: id
        altName: altName
        type: type
        isToll: isToll
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        altName:
          type: string
        roadClass:
          type: string
        type:
          type: string
        lengthInMeters:
          type: string
        routeNumber:
          type: string
        surfaceType:
          type: string
        trafficFlow:
          type: string
        isToll:
          type: string
        beginningLevel:
          type: string
        endingLevel:
          type: string
      type: object
      xml:
        name: road
    IntersectionResponse:
      example:
        intersection:
        - driveDistance:
            unit: unit
            value: 0.8008281904610115
          distance:
            unit: unit
            value: 0.8008281904610115
          driveTime:
            unit: unit
            value: 0.8008281904610115
          roads:
          - endingLevel: endingLevel
            routeNumber: routeNumber
            trafficFlow: trafficFlow
            surfaceType: surfaceType
            roadClass: roadClass
            beginningLevel: beginningLevel
            name: name
            lengthInMeters: lengthInMeters
            id: id
            altName: altName
            type: type
            isToll: isToll
          - endingLevel: endingLevel
            routeNumber: routeNumber
            trafficFlow: trafficFlow
            surfaceType: surfaceType
            roadClass: roadClass
            beginningLevel: beginningLevel
            name: name
            lengthInMeters: lengthInMeters
            id: id
            altName: altName
            type: type
            isToll: isToll
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
        - driveDistance:
            unit: unit
            value: 0.8008281904610115
          distance:
            unit: unit
            value: 0.8008281904610115
          driveTime:
            unit: unit
            value: 0.8008281904610115
          roads:
          - endingLevel: endingLevel
            routeNumber: routeNumber
            trafficFlow: trafficFlow
            surfaceType: surfaceType
            roadClass: roadClass
            beginningLevel: beginningLevel
            name: name
            lengthInMeters: lengthInMeters
            id: id
            altName: altName
            type: type
            isToll: isToll
          - endingLevel: endingLevel
            routeNumber: routeNumber
            trafficFlow: trafficFlow
            surfaceType: surfaceType
            roadClass: roadClass
            beginningLevel: beginningLevel
            name: name
            lengthInMeters: lengthInMeters
            id: id
            altName: altName
            type: type
            isToll: isToll
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        intersection:
          items:
            $ref: '#/components/schemas/Intersection'
          type: array
        matchedAddress:
          $ref: '#/components/schemas/address'
      type: object
      xml:
        name: intersections
    Intersection:
      example:
        driveDistance:
          unit: unit
          value: 0.8008281904610115
        distance:
          unit: unit
          value: 0.8008281904610115
        driveTime:
          unit: unit
          value: 0.8008281904610115
        roads:
        - endingLevel: endingLevel
          routeNumber: routeNumber
          trafficFlow: trafficFlow
          surfaceType: surfaceType
          roadClass: roadClass
          beginningLevel: beginningLevel
          name: name
          lengthInMeters: lengthInMeters
          id: id
          altName: altName
          type: type
          isToll: isToll
        - endingLevel: endingLevel
          routeNumber: routeNumber
          trafficFlow: trafficFlow
          surfaceType: surfaceType
          roadClass: roadClass
          beginningLevel: beginningLevel
          name: name
          lengthInMeters: lengthInMeters
          id: id
          altName: altName
          type: type
          isToll: isToll
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
      properties:
        distance:
          $ref: '#/components/schemas/Unit'
        driveTime:
          $ref: '#/components/schemas/Unit'
        driveDistance:
          $ref: '#/components/schemas/Unit'
        geometry:
          $ref: '#/components/schemas/Geometry'
        roads:
          items:
            $ref: '#/components/schemas/road'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: intersection
    Unit:
      example:
        unit: unit
        value: 0.8008281904610115
      properties:
        value:
          format: double
          type: number
        unit:
          type: string
      type: object
      xml:
        name: unit
    RateCenterResponse:
      example:
        areaName1: areaName1
        name: name
        match:
          matchCode: matchCode
          confidence: confidence
          percentGeocode: percentGeocode
          locationCode: locationCode
          precisionLevel: precisionLevel
        county:
          name: name
          fips: fips
        count: 0
        alternateName: alternateName
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        id: id
        areaCodeInfoList:
        - startRange: startRange
          lata: lata
          areaName4: areaName4
          companyName: companyName
          endRange: endRange
          ocn: ocn
          ocnCategory: ocnCategory
          npa: npa
          nxx: nxx
        - startRange: startRange
          lata: lata
          areaName4: areaName4
          companyName: companyName
          endRange: endRange
          ocn: ocn
          ocnCategory: ocnCategory
          npa: npa
          nxx: nxx
        product_code: product_code
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        alternateName:
          type: string
        areaName1:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        areaCodeInfoList:
          items:
            $ref: '#/components/schemas/areaCodeInfo'
          type: array
        matchedAddress:
          $ref: '#/components/schemas/address'
        match:
          $ref: '#/components/schemas/match'
        county:
          $ref: '#/components/schemas/county'
        count:
          format: int32
          type: integer
        product_code:
          type: string
      type: object
      xml:
        name: ratecenter
    areaCodeInfo:
      example:
        startRange: startRange
        lata: lata
        areaName4: areaName4
        companyName: companyName
        endRange: endRange
        ocn: ocn
        ocnCategory: ocnCategory
        npa: npa
        nxx: nxx
      properties:
        companyName:
          type: string
        ocn:
          type: string
        ocnCategory:
          type: string
        npa:
          type: string
        nxx:
          type: string
        startRange:
          type: string
        endRange:
          type: string
        lata:
          type: string
        areaName4:
          type: string
      type: object
      xml:
        name: areaCodeInfo
    match:
      example:
        matchCode: matchCode
        confidence: confidence
        percentGeocode: percentGeocode
        locationCode: locationCode
        precisionLevel: precisionLevel
      properties:
        confidence:
          type: string
        percentGeocode:
          type: string
        precisionLevel:
          type: string
        locationCode:
          type: string
        matchCode:
          type: string
      type: object
      xml:
        name: match
    TimezoneResponse:
      example:
        tzValidFrom: tzValidFrom
        country: country
        dstEndTime: dstEndTime
        dstEndDateFormat: dstEndDateFormat
        utcOffset: 0
        dstStartDate: dstStartDate
        dstStartTime: dstStartTime
        zoneType: zoneType
        dstOffset: 6
        dstValidFrom: dstValidFrom
        tzValidUntill: tzValidUntill
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        dstRule: dstRule
        timezoneName: timezoneName
        dstStartDateFormat: dstStartDateFormat
        dstValidUntill: dstValidUntill
        objectId: objectId
        timestamp: 1
        dstEndDate: dstEndDate
      properties:
        objectId:
          type: string
        timezoneName:
          type: string
        zoneType:
          type: string
        utcOffset:
          format: int64
          type: integer
        dstOffset:
          format: int64
          type: integer
        timestamp:
          format: int64
          type: integer
        matchedAddress:
          $ref: '#/components/schemas/address'
        country:
          type: string
        tzValidFrom:
          type: string
        tzValidUntill:
          type: string
        dstRule:
          type: string
        dstValidFrom:
          type: string
        dstValidUntill:
          type: string
        dstStartDateFormat:
          type: string
        dstEndDateFormat:
          type: string
        dstStartDate:
          type: string
        dstStartTime:
          type: string
        dstEndTime:
          type: string
        dstEndDate:
          type: string
      type: object
      xml:
        name: timezone
    TimezoneResponseList:
      example:
        timezone:
        - tzValidFrom: tzValidFrom
          country: country
          dstEndTime: dstEndTime
          dstEndDateFormat: dstEndDateFormat
          utcOffset: 0
          dstStartDate: dstStartDate
          dstStartTime: dstStartTime
          zoneType: zoneType
          dstOffset: 6
          dstValidFrom: dstValidFrom
          tzValidUntill: tzValidUntill
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          dstRule: dstRule
          timezoneName: timezoneName
          dstStartDateFormat: dstStartDateFormat
          dstValidUntill: dstValidUntill
          objectId: objectId
          timestamp: 1
          dstEndDate: dstEndDate
        - tzValidFrom: tzValidFrom
          country: country
          dstEndTime: dstEndTime
          dstEndDateFormat: dstEndDateFormat
          utcOffset: 0
          dstStartDate: dstStartDate
          dstStartTime: dstStartTime
          zoneType: zoneType
          dstOffset: 6
          dstValidFrom: dstValidFrom
          tzValidUntill: tzValidUntill
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          dstRule: dstRule
          timezoneName: timezoneName
          dstStartDateFormat: dstStartDateFormat
          dstValidUntill: dstValidUntill
          objectId: objectId
          timestamp: 1
          dstEndDate: dstEndDate
      properties:
        timezone:
          items:
            $ref: '#/components/schemas/TimezoneResponse'
          type: array
      type: object
      xml:
        name: timezoneResponse
    timezoneLocationRequest:
      properties:
        locationTime:
          items:
            $ref: '#/components/schemas/locationTime'
          type: array
      type: object
      xml:
        name: timezoneLocationRequest
    locationTime:
      properties:
        geometry:
          $ref: '#/components/schemas/TimezoneGeometry'
        purchaseAmount:
          type: string
        objectId:
          type: string
        timestamp:
          type: string
      required:
      - geometry
      type: object
      xml:
        name: locationTime
    TimezoneGeometry:
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      required:
      - type
      type: object
    timezoneAddressRequest:
      properties:
        preferences:
          $ref: '#/components/schemas/PreferencTimeZone'
        addressTime:
          items:
            $ref: '#/components/schemas/addressTime'
          type: array
      type: object
      xml:
        name: timezoneAddressRequest
    PreferencTimeZone:
      properties:
        matchMode:
          type: string
      type: object
      xml:
        name: preferences
    addressTime:
      properties:
        timestamp:
          type: string
        address:
          $ref: '#/components/schemas/address'
      type: object
      xml:
        name: addressTime
    TypeaheadLocations:
      example:
        location:
        - address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          distance:
            unit: unit
            value: value
          ranges:
          - units:
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            placeName: placeName
          - units:
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            placeName: placeName
          unitTemp: unitTemp
          totalUnitCount: 0
          match:
            matchCode: matchCode
            confidence: confidence
            percentGeocode: percentGeocode
            locationCode: locationCode
            precisionLevel: precisionLevel
          valueTemp: valueTemp
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          poi:
            parentPbkey: parentPbkey
            distance:
              unit: unit
              value: value
            salesVolume:
            - currencyCode: currencyCode
              worldBaseCurrencyCode: worldBaseCurrencyCode
              value: value
            - currencyCode: currencyCode
              worldBaseCurrencyCode: worldBaseCurrencyCode
              value: value
            hierarchyCode: hierarchyCode
            businessId:
              type: type
              value: value
            open24Hours: open24Hours
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            subsidaryIndicator: subsidaryIndicator
            domesticUltimateBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            globalUltimateBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            familyMembers: familyMembers
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
                secondarySicCode: secondarySicCode
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            globalUltimateIndicator: globalUltimateIndicator
            tradeName: tradeName
            geocodeConfidence: geocodeConfidence
            goodsAgentCodeDescription: goodsAgentCodeDescription
            organizationStatusCodeDescription: organizationStatusCodeDescription
            subsidaryIndicatorDescription: subsidaryIndicatorDescription
            parentBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            id: id
            poiId: poiId
            ceoName: ceoName
            yearStart: yearStart
            franchiseName: franchiseName
            brandName: brandName
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              phone: phone
              countryAccessCode: countryAccessCode
              fax: fax
              email: email
              url: url
            ceoTitle: ceoTitle
            goodsAgentCode: goodsAgentCode
            organizationStatusCode: organizationStatusCode
            relevanceScore: relevanceScore
            pbkey: pbkey
            name: name
            exchangeName: exchangeName
            geometry:
              coordinates:
              - 0.8008281904610115
              - 0.8008281904610115
              type: type
            legalStatusCode: legalStatusCode
          place:
            level: level
            name:
            - langISOCode: langISOCode
              langType: langType
              value: value
            - langISOCode: langISOCode
              langType: langType
              value: value
            levelName: levelName
          dataset: dataset
        - address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          distance:
            unit: unit
            value: value
          ranges:
          - units:
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            placeName: placeName
          - units:
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            - formattedUnitAddress: formattedUnitAddress
              unitInfo: unitInfo
            placeName: placeName
          unitTemp: unitTemp
          totalUnitCount: 0
          match:
            matchCode: matchCode
            confidence: confidence
            percentGeocode: percentGeocode
            locationCode: locationCode
            precisionLevel: precisionLevel
          valueTemp: valueTemp
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          poi:
            parentPbkey: parentPbkey
            distance:
              unit: unit
              value: value
            salesVolume:
            - currencyCode: currencyCode
              worldBaseCurrencyCode: worldBaseCurrencyCode
              value: value
            - currencyCode: currencyCode
              worldBaseCurrencyCode: worldBaseCurrencyCode
              value: value
            hierarchyCode: hierarchyCode
            businessId:
              type: type
              value: value
            open24Hours: open24Hours
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            subsidaryIndicator: subsidaryIndicator
            domesticUltimateBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            globalUltimateBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            familyMembers: familyMembers
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
                secondarySicCode: secondarySicCode
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            globalUltimateIndicator: globalUltimateIndicator
            tradeName: tradeName
            geocodeConfidence: geocodeConfidence
            goodsAgentCodeDescription: goodsAgentCodeDescription
            organizationStatusCodeDescription: organizationStatusCodeDescription
            subsidaryIndicatorDescription: subsidaryIndicatorDescription
            parentBusiness:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              name: name
              id: id
            id: id
            poiId: poiId
            ceoName: ceoName
            yearStart: yearStart
            franchiseName: franchiseName
            brandName: brandName
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              phone: phone
              countryAccessCode: countryAccessCode
              fax: fax
              email: email
              url: url
            ceoTitle: ceoTitle
            goodsAgentCode: goodsAgentCode
            organizationStatusCode: organizationStatusCode
            relevanceScore: relevanceScore
            pbkey: pbkey
            name: name
            exchangeName: exchangeName
            geometry:
              coordinates:
              - 0.8008281904610115
              - 0.8008281904610115
              type: type
            legalStatusCode: legalStatusCode
          place:
            level: level
            name:
            - langISOCode: langISOCode
              langType: langType
              value: value
            - langISOCode: langISOCode
              langType: langType
              value: value
            levelName: levelName
          dataset: dataset
      properties:
        location:
          items:
            $ref: '#/components/schemas/TypeaheadLocation'
          type: array
      type: object
      xml:
        name: locations
    TypeaheadLocation:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        distance:
          unit: unit
          value: value
        ranges:
        - units:
          - formattedUnitAddress: formattedUnitAddress
            unitInfo: unitInfo
          - formattedUnitAddress: formattedUnitAddress
            unitInfo: unitInfo
          placeName: placeName
        - units:
          - formattedUnitAddress: formattedUnitAddress
            unitInfo: unitInfo
          - formattedUnitAddress: formattedUnitAddress
            unitInfo: unitInfo
          placeName: placeName
        unitTemp: unitTemp
        totalUnitCount: 0
        match:
          matchCode: matchCode
          confidence: confidence
          percentGeocode: percentGeocode
          locationCode: locationCode
          precisionLevel: precisionLevel
        valueTemp: valueTemp
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        poi:
          parentPbkey: parentPbkey
          distance:
            unit: unit
            value: value
          salesVolume:
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          - currencyCode: currencyCode
            worldBaseCurrencyCode: worldBaseCurrencyCode
            value: value
          hierarchyCode: hierarchyCode
          businessId:
            type: type
            value: value
          open24Hours: open24Hours
          employeeCount:
            inLocalBranch: inLocalBranch
            inOrganization: inOrganization
          subsidaryIndicator: subsidaryIndicator
          domesticUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          globalUltimateBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          familyMembers: familyMembers
          poiClassification:
            alternateIndustryCode: alternateIndustryCode
            sic:
              sicCode: sicCode
              primarySicCode: primarySicCode
              businessLine: businessLine
              sicCodeDescription: sicCodeDescription
              secondarySicCode: secondarySicCode
            category:
              tradeGroup: tradeGroup
              subClass: subClass
              tradeDivision: tradeDivision
              categoryCode: categoryCode
              class: class
          globalUltimateIndicator: globalUltimateIndicator
          tradeName: tradeName
          geocodeConfidence: geocodeConfidence
          goodsAgentCodeDescription: goodsAgentCodeDescription
          organizationStatusCodeDescription: organizationStatusCodeDescription
          subsidaryIndicatorDescription: subsidaryIndicatorDescription
          parentBusiness:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            name: name
            id: id
          id: id
          poiId: poiId
          ceoName: ceoName
          yearStart: yearStart
          franchiseName: franchiseName
          brandName: brandName
          tickerSymbol: tickerSymbol
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            phone: phone
            countryAccessCode: countryAccessCode
            fax: fax
            email: email
            url: url
          ceoTitle: ceoTitle
          goodsAgentCode: goodsAgentCode
          organizationStatusCode: organizationStatusCode
          relevanceScore: relevanceScore
          pbkey: pbkey
          name: name
          exchangeName: exchangeName
          geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          legalStatusCode: legalStatusCode
        place:
          level: level
          name:
          - langISOCode: langISOCode
            langType: langType
            value: value
          - langISOCode: langISOCode
            langType: langType
            value: value
          levelName: levelName
        dataset: dataset
      properties:
        dataset:
          type: string
        match:
          $ref: '#/components/schemas/match'
        address:
          $ref: '#/components/schemas/address'
        poi:
          $ref: '#/components/schemas/poi'
        distance:
          $ref: '#/components/schemas/distance'
        unitTemp:
          type: string
        valueTemp:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        totalUnitCount:
          format: int32
          type: integer
        ranges:
          items:
            $ref: '#/components/schemas/TypeaheadRange'
          type: array
          xml:
            wrapped: true
        place:
          $ref: '#/components/schemas/place'
      type: object
      xml:
        name: location
    TypeaheadRange:
      example:
        units:
        - formattedUnitAddress: formattedUnitAddress
          unitInfo: unitInfo
        - formattedUnitAddress: formattedUnitAddress
          unitInfo: unitInfo
        placeName: placeName
      properties:
        placeName:
          type: string
        units:
          items:
            $ref: '#/components/schemas/TypeaheadUnit'
          type: array
          xml:
            name: unit
      type: object
      xml:
        name: range
    TypeaheadUnit:
      example:
        formattedUnitAddress: formattedUnitAddress
        unitInfo: unitInfo
      properties:
        unitInfo:
          type: string
        formattedUnitAddress:
          type: string
      type: object
      xml:
        name: unit
    poiBoundary:
      example:
        countyfips: countyfips
        center:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        poiList:
        - brandName: brandName
          open24Hours: open24Hours
          tickerSymbol: tickerSymbol
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            propertyAddress:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
          employeeCount:
            inLocalBranch: inLocalBranch
            inOrganization: inOrganization
          poiClassification:
            alternateIndustryCode: alternateIndustryCode
            sic:
              sicCode: sicCode
              primarySicCode: primarySicCode
              businessLine: businessLine
              sicCodeDescription: sicCodeDescription
            category:
              tradeGroup: tradeGroup
              subClass: subClass
              tradeDivision: tradeDivision
              categoryCode: categoryCode
              class: class
          organizationStatusCode: organizationStatusCode
          tradeName: tradeName
          organizationStatusCodeDescription: organizationStatusCodeDescription
          name: name
          parentBusiness:
            name: name
          exchangeName: exchangeName
          id: id
          franchiseName: franchiseName
        - brandName: brandName
          open24Hours: open24Hours
          tickerSymbol: tickerSymbol
          contactDetails:
            address:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
            propertyAddress:
              country: country
              streetSide: streetSide
              city: city
              displayName: displayName
              postalCode: postalCode
              latitude: latitude
              businessName: businessName
              county: county
              unitType: unitType
              streetName: streetName
              formattedAddress: formattedAddress
              addressLine1: addressLine1
              mainAddressLine: mainAddressLine
              addressLine2: addressLine2
              addressLine3: addressLine3
              objectId: objectId
              addressLastLine: addressLastLine
              longitude: longitude
              unitValue: unitValue
              stateProvince: stateProvince
              urbanizationName: urbanizationName
              areaName1: areaName1
              areaName2: areaName2
              areaName3: areaName3
              areaName4: areaName4
              addressNumber: addressNumber
              postCode: postCode
              postCodeExt: postCodeExt
              placeName: placeName
              status: status
          employeeCount:
            inLocalBranch: inLocalBranch
            inOrganization: inOrganization
          poiClassification:
            alternateIndustryCode: alternateIndustryCode
            sic:
              sicCode: sicCode
              primarySicCode: primarySicCode
              businessLine: businessLine
              sicCodeDescription: sicCodeDescription
            category:
              tradeGroup: tradeGroup
              subClass: subClass
              tradeDivision: tradeDivision
              categoryCode: categoryCode
              class: class
          organizationStatusCode: organizationStatusCode
          tradeName: tradeName
          organizationStatusCodeDescription: organizationStatusCodeDescription
          name: name
          parentBusiness:
            name: name
          exchangeName: exchangeName
          id: id
          franchiseName: franchiseName
        geometry:
          crs:
            type: type
            properties:
              name: name
          coordinates: '{}'
          type: type
        id: id
        objectId: objectId
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        objectId:
          type: string
        center:
          $ref: '#/components/schemas/Center'
        countyfips:
          type: string
        geometry:
          $ref: '#/components/schemas/ZonesPoiGeometry'
        poiList:
          items:
            $ref: '#/components/schemas/ZonesPoi'
          type: array
          xml:
            wrapped: true
        matchedAddress:
          $ref: '#/components/schemas/ZonesAddress'
        id:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: poiBoundary
    Center:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      type: object
    ZonesPoiGeometry:
      example:
        crs:
          type: type
          properties:
            name: name
        coordinates: '{}'
        type: type
      properties:
        type:
          type: string
        crs:
          $ref: '#/components/schemas/GeometryCRC'
        coordinates:
          type: object
      type: object
    GeometryCRC:
      example:
        type: type
        properties:
          name: name
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/GeometryProperties'
      type: object
    ZonesPoi:
      example:
        brandName: brandName
        open24Hours: open24Hours
        tickerSymbol: tickerSymbol
        contactDetails:
          address:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
          propertyAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        employeeCount:
          inLocalBranch: inLocalBranch
          inOrganization: inOrganization
        poiClassification:
          alternateIndustryCode: alternateIndustryCode
          sic:
            sicCode: sicCode
            primarySicCode: primarySicCode
            businessLine: businessLine
            sicCodeDescription: sicCodeDescription
          category:
            tradeGroup: tradeGroup
            subClass: subClass
            tradeDivision: tradeDivision
            categoryCode: categoryCode
            class: class
        organizationStatusCode: organizationStatusCode
        tradeName: tradeName
        organizationStatusCodeDescription: organizationStatusCodeDescription
        name: name
        parentBusiness:
          name: name
        exchangeName: exchangeName
        id: id
        franchiseName: franchiseName
      properties:
        id:
          type: string
        name:
          type: string
        brandName:
          type: string
        tradeName:
          type: string
        franchiseName:
          type: string
        open24Hours:
          type: string
        contactDetails:
          $ref: '#/components/schemas/ZonesContactDetails'
        poiClassification:
          $ref: '#/components/schemas/ZonesPoiClassification'
        employeeCount:
          $ref: '#/components/schemas/EmployeeCount'
        organizationStatusCode:
          type: string
        organizationStatusCodeDescription:
          type: string
        parentBusiness:
          $ref: '#/components/schemas/ZonesParentBusiness'
        tickerSymbol:
          type: string
        exchangeName:
          type: string
      type: object
      xml:
        name: poi
    ZonesContactDetails:
      example:
        address:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        propertyAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        address:
          $ref: '#/components/schemas/ZonesAddress'
        propertyAddress:
          $ref: '#/components/schemas/ZonesAddress'
      type: object
    ZonesAddress:
      example:
        country: country
        streetSide: streetSide
        city: city
        displayName: displayName
        postalCode: postalCode
        latitude: latitude
        businessName: businessName
        county: county
        unitType: unitType
        streetName: streetName
        formattedAddress: formattedAddress
        addressLine1: addressLine1
        mainAddressLine: mainAddressLine
        addressLine2: addressLine2
        addressLine3: addressLine3
        objectId: objectId
        addressLastLine: addressLastLine
        longitude: longitude
        unitValue: unitValue
        stateProvince: stateProvince
        urbanizationName: urbanizationName
        areaName1: areaName1
        areaName2: areaName2
        areaName3: areaName3
        areaName4: areaName4
        addressNumber: addressNumber
        postCode: postCode
        postCodeExt: postCodeExt
        placeName: placeName
        status: status
      properties:
        objectId:
          type: string
        displayName:
          type: string
        streetSide:
          type: string
        businessName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        county:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        status:
          type: string
        urbanizationName:
          type: string
        formattedAddress:
          type: string
        mainAddressLine:
          type: string
        addressLastLine:
          type: string
        placeName:
          type: string
        areaName1:
          type: string
        areaName2:
          type: string
        areaName3:
          type: string
        areaName4:
          type: string
        postCode:
          type: string
        postCodeExt:
          type: string
        country:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        unitType:
          type: string
        unitValue:
          type: string
      type: object
      xml:
        name: address
    ZonesPoiClassification:
      example:
        alternateIndustryCode: alternateIndustryCode
        sic:
          sicCode: sicCode
          primarySicCode: primarySicCode
          businessLine: businessLine
          sicCodeDescription: sicCodeDescription
        category:
          tradeGroup: tradeGroup
          subClass: subClass
          tradeDivision: tradeDivision
          categoryCode: categoryCode
          class: class
      properties:
        sic:
          $ref: '#/components/schemas/ZonesSic'
        category:
          $ref: '#/components/schemas/Category'
        alternateIndustryCode:
          type: string
      type: object
    ZonesSic:
      example:
        sicCode: sicCode
        primarySicCode: primarySicCode
        businessLine: businessLine
        sicCodeDescription: sicCodeDescription
      properties:
        businessLine:
          type: string
        sicCode:
          type: string
        sicCodeDescription:
          type: string
        primarySicCode:
          type: string
      type: object
    ZonesParentBusiness:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    POIBoundaryResponse:
      example:
        poiBoundary:
        - countyfips: countyfips
          center:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          poiList:
          - brandName: brandName
            open24Hours: open24Hours
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              propertyAddress:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            organizationStatusCode: organizationStatusCode
            tradeName: tradeName
            organizationStatusCodeDescription: organizationStatusCodeDescription
            name: name
            parentBusiness:
              name: name
            exchangeName: exchangeName
            id: id
            franchiseName: franchiseName
          - brandName: brandName
            open24Hours: open24Hours
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              propertyAddress:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            organizationStatusCode: organizationStatusCode
            tradeName: tradeName
            organizationStatusCodeDescription: organizationStatusCodeDescription
            name: name
            parentBusiness:
              name: name
            exchangeName: exchangeName
            id: id
            franchiseName: franchiseName
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: id
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
        - countyfips: countyfips
          center:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          poiList:
          - brandName: brandName
            open24Hours: open24Hours
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              propertyAddress:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            organizationStatusCode: organizationStatusCode
            tradeName: tradeName
            organizationStatusCodeDescription: organizationStatusCodeDescription
            name: name
            parentBusiness:
              name: name
            exchangeName: exchangeName
            id: id
            franchiseName: franchiseName
          - brandName: brandName
            open24Hours: open24Hours
            tickerSymbol: tickerSymbol
            contactDetails:
              address:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
              propertyAddress:
                country: country
                streetSide: streetSide
                city: city
                displayName: displayName
                postalCode: postalCode
                latitude: latitude
                businessName: businessName
                county: county
                unitType: unitType
                streetName: streetName
                formattedAddress: formattedAddress
                addressLine1: addressLine1
                mainAddressLine: mainAddressLine
                addressLine2: addressLine2
                addressLine3: addressLine3
                objectId: objectId
                addressLastLine: addressLastLine
                longitude: longitude
                unitValue: unitValue
                stateProvince: stateProvince
                urbanizationName: urbanizationName
                areaName1: areaName1
                areaName2: areaName2
                areaName3: areaName3
                areaName4: areaName4
                addressNumber: addressNumber
                postCode: postCode
                postCodeExt: postCodeExt
                placeName: placeName
                status: status
            employeeCount:
              inLocalBranch: inLocalBranch
              inOrganization: inOrganization
            poiClassification:
              alternateIndustryCode: alternateIndustryCode
              sic:
                sicCode: sicCode
                primarySicCode: primarySicCode
                businessLine: businessLine
                sicCodeDescription: sicCodeDescription
              category:
                tradeGroup: tradeGroup
                subClass: subClass
                tradeDivision: tradeDivision
                categoryCode: categoryCode
                class: class
            organizationStatusCode: organizationStatusCode
            tradeName: tradeName
            organizationStatusCodeDescription: organizationStatusCodeDescription
            name: name
            parentBusiness:
              name: name
            exchangeName: exchangeName
            id: id
            franchiseName: franchiseName
          geometry:
            crs:
              type: type
              properties:
                name: name
            coordinates: '{}'
            type: type
          id: id
          objectId: objectId
          matchedAddress:
            country: country
            streetSide: streetSide
            city: city
            displayName: displayName
            postalCode: postalCode
            latitude: latitude
            businessName: businessName
            county: county
            unitType: unitType
            streetName: streetName
            formattedAddress: formattedAddress
            addressLine1: addressLine1
            mainAddressLine: mainAddressLine
            addressLine2: addressLine2
            addressLine3: addressLine3
            objectId: objectId
            addressLastLine: addressLastLine
            longitude: longitude
            unitValue: unitValue
            stateProvince: stateProvince
            urbanizationName: urbanizationName
            areaName1: areaName1
            areaName2: areaName2
            areaName3: areaName3
            areaName4: areaName4
            addressNumber: addressNumber
            postCode: postCode
            postCodeExt: postCodeExt
            placeName: placeName
            status: status
      properties:
        poiBoundary:
          items:
            $ref: '#/components/schemas/poiBoundary'
          type: array
      type: object
      xml:
        name: poiBoundaryResponse
    POIBoundaryLocationRequest:
      example:
        preferences:
          sicCode: sicCode
          categoryCode: categoryCode
          naicsCode: naicsCode
        locations:
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
        - geometry:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            type: type
          objectId: objectId
          purchaseAmount: purchaseAmount
      properties:
        locations:
          items:
            $ref: '#/components/schemas/POIBoundaryLocations'
          type: array
          xml:
            name: location
        preferences:
          $ref: '#/components/schemas/POIBoundaryPreferences'
      required:
      - locations
      type: object
      xml:
        name: poiBoundaryLocationRequest
    POIBoundaryLocations:
      example:
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        objectId: objectId
        purchaseAmount: purchaseAmount
      properties:
        geometry:
          $ref: '#/components/schemas/ZonesGeometry'
        purchaseAmount:
          type: string
        objectId:
          type: string
      required:
      - geometry
      type: object
    ZonesGeometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      required:
      - type
      type: object
    POIBoundaryPreferences:
      example:
        sicCode: sicCode
        categoryCode: categoryCode
        naicsCode: naicsCode
      properties:
        categoryCode:
          type: string
        sicCode:
          type: string
        naicsCode:
          type: string
      type: object
      xml:
        name: preferences
    POIBoundaryAddressRequest:
      example:
        addresses:
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        - country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
        preferences:
          sicCode: sicCode
          categoryCode: categoryCode
          naicsCode: naicsCode
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/ZonesAddress'
          type: array
          xml:
            name: address
        preferences:
          $ref: '#/components/schemas/POIBoundaryPreferences'
      required:
      - addresses
      type: object
      xml:
        name: poiBoundaryAddressRequest
    TravelBoundaries:
      example:
        travelBoundary:
          costs:
          - costUnit: costUnit
            cost: 0.8008281904610115
            geometry:
              coordinates:
              - - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
                - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
              - - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
                - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
              type: type
          - costUnit: costUnit
            cost: 0.8008281904610115
            geometry:
              coordinates:
              - - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
                - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
              - - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
                - - - 6.027456183070403
                    - 6.027456183070403
                  - - 6.027456183070403
                    - 6.027456183070403
              type: type
      properties:
        travelBoundary:
          $ref: '#/components/schemas/TravelBoundary'
      type: object
    TravelBoundary:
      example:
        costs:
        - costUnit: costUnit
          cost: 0.8008281904610115
          geometry:
            coordinates:
            - - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
              - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
            - - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
              - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
            type: type
        - costUnit: costUnit
          cost: 0.8008281904610115
          geometry:
            coordinates:
            - - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
              - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
            - - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
              - - - 6.027456183070403
                  - 6.027456183070403
                - - 6.027456183070403
                  - 6.027456183070403
            type: type
      properties:
        costs:
          items:
            $ref: '#/components/schemas/Cost'
          properties:
            empty:
              type: boolean
          type: array
      type: object
    Cost:
      example:
        costUnit: costUnit
        cost: 0.8008281904610115
        geometry:
          coordinates:
          - - - - 6.027456183070403
                - 6.027456183070403
              - - 6.027456183070403
                - 6.027456183070403
            - - - 6.027456183070403
                - 6.027456183070403
              - - 6.027456183070403
                - 6.027456183070403
          - - - - 6.027456183070403
                - 6.027456183070403
              - - 6.027456183070403
                - 6.027456183070403
            - - - 6.027456183070403
                - 6.027456183070403
              - - 6.027456183070403
                - 6.027456183070403
          type: type
      properties:
        cost:
          type: number
        costUnit:
          type: string
        geometry:
          $ref: '#/components/schemas/DirectionGeometry'
      type: object
    DirectionGeometry:
      example:
        coordinates:
        - - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
          - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
        - - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
          - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            items:
              items:
                items:
                  format: double
                  type: number
                type: array
              type: array
            type: array
          type: array
      type: object
    basicBoundary:
      example:
        distance:
          unit: unit
          value: value
        center:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        geometry:
          coordinates:
          - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
          - - - 6.027456183070403
              - 6.027456183070403
            - - 6.027456183070403
              - 6.027456183070403
          type: type
        matchedAddress:
          country: country
          streetSide: streetSide
          city: city
          displayName: displayName
          postalCode: postalCode
          latitude: latitude
          businessName: businessName
          county: county
          unitType: unitType
          streetName: streetName
          formattedAddress: formattedAddress
          addressLine1: addressLine1
          mainAddressLine: mainAddressLine
          addressLine2: addressLine2
          addressLine3: addressLine3
          objectId: objectId
          addressLastLine: addressLastLine
          longitude: longitude
          unitValue: unitValue
          stateProvince: stateProvince
          urbanizationName: urbanizationName
          areaName1: areaName1
          areaName2: areaName2
          areaName3: areaName3
          areaName4: areaName4
          addressNumber: addressNumber
          postCode: postCode
          postCodeExt: postCodeExt
          placeName: placeName
          status: status
      properties:
        center:
          $ref: '#/components/schemas/BoundaryPoint'
        distance:
          $ref: '#/components/schemas/distance'
        geometry:
          $ref: '#/components/schemas/ZonesBoundaryGeometry'
        matchedAddress:
          $ref: '#/components/schemas/ZonesAddress'
      type: object
      xml:
        name: basicBoundary
    BoundaryPoint:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      type: object
      xml:
        name: center
    ZonesBoundaryGeometry:
      example:
        coordinates:
        - - - 6.027456183070403
            - 6.027456183070403
          - - 6.027456183070403
            - 6.027456183070403
        - - - 6.027456183070403
            - 6.027456183070403
          - - 6.027456183070403
            - 6.027456183070403
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          type: array
      type: object
    GetPostalCodesAPIResponse:
      example:
        Output:
        - Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          PostalCode: PostalCode
          Status.Description: Status.Description
          Status.Code: Status.Code
          City.Type: City.Type
        - Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          PostalCode: PostalCode
          Status.Description: Status.Description
          Status.Code: Status.Code
          City.Type: City.Type
      properties:
        Output:
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput'
          type: array
      type: object
    GetPostalCodesAPIOutput:
      example:
        Status: Status
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        PostalCode: PostalCode
        Status.Description: Status.Description
        Status.Code: Status.Code
        City.Type: City.Type
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
        City.Type:
          description: City.Type
          type: string
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.Description:
          description: Description of the problem, if there is one.
          type: string
      type: object
    GetPostalCodesAPIRequest:
      example:
        Input:
          Row:
          - user_fields:
            - name: name
              value: value
            - name: name
              value: value
            StateProvince: StateProvince
            City: City
          - user_fields:
            - name: name
              value: value
            - name: name
              value: value
            StateProvince: StateProvince
            City: City
        options:
          OutputVanityCity: "N"
          OutputCityType: "N"
      properties:
        options:
          $ref: '#/components/schemas/GetPostalCodesAPIOptions'
        Input:
          $ref: '#/components/schemas/GetPostalCodesAPIInput'
      type: object
    GetPostalCodesAPIOptions:
      example:
        OutputVanityCity: "N"
        OutputCityType: "N"
      properties:
        OutputCityType:
          default: "N"
          description: Output CityType.
          type: string
        OutputVanityCity:
          default: "N"
          description: Output VanityCity.
          type: string
      type: object
    GetPostalCodesAPIInput:
      example:
        Row:
        - user_fields:
          - name: name
            value: value
          - name: name
            value: value
          StateProvince: StateProvince
          City: City
        - user_fields:
          - name: name
            value: value
          - name: name
            value: value
          StateProvince: StateProvince
          City: City
      properties:
        Row:
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIInputRow'
          type: array
      type: object
    GetPostalCodesAPIInputRow:
      example:
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        StateProvince: StateProvince
        City: City
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        City:
          description: The city name.
          type: string
        StateProvince:
          description: The state or province.
          type: string
      type: object
    GetCityStateProvinceAPIResponse:
      example:
        Output:
        - Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          StateProvince: StateProvince
          PostalCode: PostalCode
          Status.Description: Status.Description
          City: City
          Status.Code: Status.Code
          City.Type: City.Type
        - Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          StateProvince: StateProvince
          PostalCode: PostalCode
          Status.Description: Status.Description
          City: City
          Status.Code: Status.Code
          City.Type: City.Type
      properties:
        Output:
          items:
            $ref: '#/components/schemas/GetCityStateProvinceAPIOutput'
          type: array
      type: object
    GetCityStateProvinceAPIOutput:
      example:
        Status: Status
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        StateProvince: StateProvince
        PostalCode: PostalCode
        Status.Description: Status.Description
        City: City
        Status.Code: Status.Code
        City.Type: City.Type
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
        City:
          description: City
          type: string
        City.Type:
          description: City.Type
          type: string
        StateProvince:
          description: The state or province.
          type: string
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.Description:
          description: Description of the problem, if there is one.
          type: string
      type: object
    GetCityStateProvinceAPIRequest:
      example:
        Input:
          Row:
          - user_fields:
            - name: name
              value: value
            - name: name
              value: value
            PostalCode: PostalCode
          - user_fields:
            - name: name
              value: value
            - name: name
              value: value
            PostalCode: PostalCode
        options:
          OutputVanityCity: "N"
          PerformCanadianProcessing: "Y"
          MaximumResults: "10"
          PerformUSProcessing: "Y"
      properties:
        options:
          $ref: '#/components/schemas/GetCityStateProvinceAPIOptions'
        Input:
          $ref: '#/components/schemas/GetCityStateProvinceAPIInput'
      type: object
    GetCityStateProvinceAPIOptions:
      example:
        OutputVanityCity: "N"
        PerformCanadianProcessing: "Y"
        MaximumResults: "10"
        PerformUSProcessing: "Y"
      properties:
        OutputVanityCity:
          default: "N"
          description: Output VanityCity.
          type: string
        PerformCanadianProcessing:
          default: "Y"
          description: PerformCanadianProcessing.
          type: string
        MaximumResults:
          default: "10"
          description: MaximumResults.
          type: string
        PerformUSProcessing:
          default: "Y"
          description: PerformUSProcessing.
          type: string
      type: object
    GetCityStateProvinceAPIInput:
      example:
        Row:
        - user_fields:
          - name: name
            value: value
          - name: name
            value: value
          PostalCode: PostalCode
        - user_fields:
          - name: name
            value: value
          - name: name
            value: value
          PostalCode: PostalCode
      properties:
        Row:
          items:
            $ref: '#/components/schemas/GetCityStateProvinceAPIInputRow'
          type: array
      type: object
    GetCityStateProvinceAPIInputRow:
      example:
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        PostalCode: PostalCode
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
      type: object
    ValidateMailingAddressUSCANAPIResponse:
      example:
        Output:
        - PostalBarCode: PostalBarCode
          Country.Input: Country.Input
          CMRA: CMRA
          StreetSuffix: StreetSuffix
          USFIPSCountyNumber: USFIPSCountyNumber
          LeadingDirectional: LeadingDirectional
          USUrbanName.Result: USUrbanName.Result
          FirmName.Input: FirmName.Input
          RRHC: RRHC
          Status: Status
          PostalCode.Result: PostalCode.Result
          Country.Result: Country.Result
          StateProvince: StateProvince
          LeadingDirectional.Input: LeadingDirectional.Input
          PostalCode.Type: PostalCode.Type
          AddressLine3: AddressLine3
          StateProvince.Result: StateProvince.Result
          AddressBlock5: AddressBlock5
          AddressLine2: AddressLine2
          AddressBlock6: AddressBlock6
          AddressLine1: AddressLine1
          AddressBlock7: AddressBlock7
          USUrbanName.Input: USUrbanName.Input
          AddressBlock8: AddressBlock8
          AddressBlock1: AddressBlock1
          AddressBlock2: AddressBlock2
          AddressBlock3: AddressBlock3
          AddressLine4: AddressLine4
          HouseNumber.Input: HouseNumber.Input
          AddressBlock4: AddressBlock4
          Country: Country
          HouseNumber.Result: HouseNumber.Result
          LeadingDirectional.Result: LeadingDirectional.Result
          PostalCode.AddOn: PostalCode.AddOn
          StreetSuffix.Result: StreetSuffix.Result
          TrailingDirectional.Input: TrailingDirectional.Input
          USAltAddr: USAltAddr
          FirmName.Result: FirmName.Result
          HouseNumber: HouseNumber
          BlockAddress: BlockAddress
          ApartmentLabel: ApartmentLabel
          ApartmentLabel.Input: ApartmentLabel.Input
          USCongressionalDistrict: USCongressionalDistrict
          DPV: DPV
          AddressBlock9: AddressBlock9
          POBox.Result: POBox.Result
          PostalCodeCity.Result: PostalCodeCity.Result
          ApartmentNumber.Result: ApartmentNumber.Result
          PrivateMailbox.Type: PrivateMailbox.Type
          RRHC.Result: RRHC.Result
          RDI: RDI
          USCarrierRouteCode: USCarrierRouteCode
          ApartmentNumber.Input: ApartmentNumber.Input
          City.Input: City.Input
          PostalCode.Input: PostalCode.Input
          USFinanceNumber: USFinanceNumber
          SuiteLinkFidelity: SuiteLinkFidelity
          USLastLineNumber: USLastLineNumber
          USUrbanName: USUrbanName
          Status.description: Status.description
          StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
          USLACS.ReturnCode: USLACS.ReturnCode
          City.Result: City.Result
          StreetName: StreetName
          USLACS: USLACS
          POBox.Input: POBox.Input
          RRHC.Input: RRHC.Input
          TrailingDirectional: TrailingDirectional
          Street.Result: Street.Result
          PrivateMailbox: PrivateMailbox
          PrivateMailbox.Input: PrivateMailbox.Input
          DPVVacant: DPVVacant
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Confidence: Confidence
          StreetName.Input: StreetName.Input
          StateProvince.Input: StateProvince.Input
          MatchScore: MatchScore
          FirmName: FirmName
          ApartmentLabel.Result: ApartmentLabel.Result
          StreetName.Alias.Type: StreetName.Alias.Type
          CountryLevel: CountryLevel
          City: City
          CouldNotValidate: CouldNotValidate
          MultimatchCount: MultimatchCount
          USCountyName: USCountyName
          TrailingDirectional.Result: TrailingDirectional.Result
          POBox: POBox
          StreetName.Result: StreetName.Result
          PostalCode: PostalCode
          ApartmentNumber: ApartmentNumber
          AdditionalInputData: AdditionalInputData
          PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
          RecordType: RecordType
          StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
          AddressRecord.Result: AddressRecord.Result
          DPVFootnote: DPVFootnote
          StreetSuffix.Input: StreetSuffix.Input
          DPVNoStat: DPVNoStat
          AddressFormat: AddressFormat
          PostalCode.Source: PostalCode.Source
          Status.Code: Status.Code
          CanLanguage: CanLanguage
          SuiteLinkMatchCode: SuiteLinkMatchCode
          SuiteLinkReturnCode: SuiteLinkReturnCode
          USBCCheckDigit: USBCCheckDigit
          RRHC.Type: RRHC.Type
          RecordType.Default: RecordType.Default
          MultipleMatches: MultipleMatches
        - PostalBarCode: PostalBarCode
          Country.Input: Country.Input
          CMRA: CMRA
          StreetSuffix: StreetSuffix
          USFIPSCountyNumber: USFIPSCountyNumber
          LeadingDirectional: LeadingDirectional
          USUrbanName.Result: USUrbanName.Result
          FirmName.Input: FirmName.Input
          RRHC: RRHC
          Status: Status
          PostalCode.Result: PostalCode.Result
          Country.Result: Country.Result
          StateProvince: StateProvince
          LeadingDirectional.Input: LeadingDirectional.Input
          PostalCode.Type: PostalCode.Type
          AddressLine3: AddressLine3
          StateProvince.Result: StateProvince.Result
          AddressBlock5: AddressBlock5
          AddressLine2: AddressLine2
          AddressBlock6: AddressBlock6
          AddressLine1: AddressLine1
          AddressBlock7: AddressBlock7
          USUrbanName.Input: USUrbanName.Input
          AddressBlock8: AddressBlock8
          AddressBlock1: AddressBlock1
          AddressBlock2: AddressBlock2
          AddressBlock3: AddressBlock3
          AddressLine4: AddressLine4
          HouseNumber.Input: HouseNumber.Input
          AddressBlock4: AddressBlock4
          Country: Country
          HouseNumber.Result: HouseNumber.Result
          LeadingDirectional.Result: LeadingDirectional.Result
          PostalCode.AddOn: PostalCode.AddOn
          StreetSuffix.Result: StreetSuffix.Result
          TrailingDirectional.Input: TrailingDirectional.Input
          USAltAddr: USAltAddr
          FirmName.Result: FirmName.Result
          HouseNumber: HouseNumber
          BlockAddress: BlockAddress
          ApartmentLabel: ApartmentLabel
          ApartmentLabel.Input: ApartmentLabel.Input
          USCongressionalDistrict: USCongressionalDistrict
          DPV: DPV
          AddressBlock9: AddressBlock9
          POBox.Result: POBox.Result
          PostalCodeCity.Result: PostalCodeCity.Result
          ApartmentNumber.Result: ApartmentNumber.Result
          PrivateMailbox.Type: PrivateMailbox.Type
          RRHC.Result: RRHC.Result
          RDI: RDI
          USCarrierRouteCode: USCarrierRouteCode
          ApartmentNumber.Input: ApartmentNumber.Input
          City.Input: City.Input
          PostalCode.Input: PostalCode.Input
          USFinanceNumber: USFinanceNumber
          SuiteLinkFidelity: SuiteLinkFidelity
          USLastLineNumber: USLastLineNumber
          USUrbanName: USUrbanName
          Status.description: Status.description
          StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
          USLACS.ReturnCode: USLACS.ReturnCode
          City.Result: City.Result
          StreetName: StreetName
          USLACS: USLACS
          POBox.Input: POBox.Input
          RRHC.Input: RRHC.Input
          TrailingDirectional: TrailingDirectional
          Street.Result: Street.Result
          PrivateMailbox: PrivateMailbox
          PrivateMailbox.Input: PrivateMailbox.Input
          DPVVacant: DPVVacant
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Confidence: Confidence
          StreetName.Input: StreetName.Input
          StateProvince.Input: StateProvince.Input
          MatchScore: MatchScore
          FirmName: FirmName
          ApartmentLabel.Result: ApartmentLabel.Result
          StreetName.Alias.Type: StreetName.Alias.Type
          CountryLevel: CountryLevel
          City: City
          CouldNotValidate: CouldNotValidate
          MultimatchCount: MultimatchCount
          USCountyName: USCountyName
          TrailingDirectional.Result: TrailingDirectional.Result
          POBox: POBox
          StreetName.Result: StreetName.Result
          PostalCode: PostalCode
          ApartmentNumber: ApartmentNumber
          AdditionalInputData: AdditionalInputData
          PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
          RecordType: RecordType
          StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
          AddressRecord.Result: AddressRecord.Result
          DPVFootnote: DPVFootnote
          StreetSuffix.Input: StreetSuffix.Input
          DPVNoStat: DPVNoStat
          AddressFormat: AddressFormat
          PostalCode.Source: PostalCode.Source
          Status.Code: Status.Code
          CanLanguage: CanLanguage
          SuiteLinkMatchCode: SuiteLinkMatchCode
          SuiteLinkReturnCode: SuiteLinkReturnCode
          USBCCheckDigit: USBCCheckDigit
          RRHC.Type: RRHC.Type
          RecordType.Default: RecordType.Default
          MultipleMatches: MultipleMatches
      properties:
        Output:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIOutput'
          type: array
      type: object
    ValidateMailingAddressUSCANAPIOutput:
      example:
        PostalBarCode: PostalBarCode
        Country.Input: Country.Input
        CMRA: CMRA
        StreetSuffix: StreetSuffix
        USFIPSCountyNumber: USFIPSCountyNumber
        LeadingDirectional: LeadingDirectional
        USUrbanName.Result: USUrbanName.Result
        FirmName.Input: FirmName.Input
        RRHC: RRHC
        Status: Status
        PostalCode.Result: PostalCode.Result
        Country.Result: Country.Result
        StateProvince: StateProvince
        LeadingDirectional.Input: LeadingDirectional.Input
        PostalCode.Type: PostalCode.Type
        AddressLine3: AddressLine3
        StateProvince.Result: StateProvince.Result
        AddressBlock5: AddressBlock5
        AddressLine2: AddressLine2
        AddressBlock6: AddressBlock6
        AddressLine1: AddressLine1
        AddressBlock7: AddressBlock7
        USUrbanName.Input: USUrbanName.Input
        AddressBlock8: AddressBlock8
        AddressBlock1: AddressBlock1
        AddressBlock2: AddressBlock2
        AddressBlock3: AddressBlock3
        AddressLine4: AddressLine4
        HouseNumber.Input: HouseNumber.Input
        AddressBlock4: AddressBlock4
        Country: Country
        HouseNumber.Result: HouseNumber.Result
        LeadingDirectional.Result: LeadingDirectional.Result
        PostalCode.AddOn: PostalCode.AddOn
        StreetSuffix.Result: StreetSuffix.Result
        TrailingDirectional.Input: TrailingDirectional.Input
        USAltAddr: USAltAddr
        FirmName.Result: FirmName.Result
        HouseNumber: HouseNumber
        BlockAddress: BlockAddress
        ApartmentLabel: ApartmentLabel
        ApartmentLabel.Input: ApartmentLabel.Input
        USCongressionalDistrict: USCongressionalDistrict
        DPV: DPV
        AddressBlock9: AddressBlock9
        POBox.Result: POBox.Result
        PostalCodeCity.Result: PostalCodeCity.Result
        ApartmentNumber.Result: ApartmentNumber.Result
        PrivateMailbox.Type: PrivateMailbox.Type
        RRHC.Result: RRHC.Result
        RDI: RDI
        USCarrierRouteCode: USCarrierRouteCode
        ApartmentNumber.Input: ApartmentNumber.Input
        City.Input: City.Input
        PostalCode.Input: PostalCode.Input
        USFinanceNumber: USFinanceNumber
        SuiteLinkFidelity: SuiteLinkFidelity
        USLastLineNumber: USLastLineNumber
        USUrbanName: USUrbanName
        Status.description: Status.description
        StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
        USLACS.ReturnCode: USLACS.ReturnCode
        City.Result: City.Result
        StreetName: StreetName
        USLACS: USLACS
        POBox.Input: POBox.Input
        RRHC.Input: RRHC.Input
        TrailingDirectional: TrailingDirectional
        Street.Result: Street.Result
        PrivateMailbox: PrivateMailbox
        PrivateMailbox.Input: PrivateMailbox.Input
        DPVVacant: DPVVacant
        PostalCode.Base: PostalCode.Base
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        Confidence: Confidence
        StreetName.Input: StreetName.Input
        StateProvince.Input: StateProvince.Input
        MatchScore: MatchScore
        FirmName: FirmName
        ApartmentLabel.Result: ApartmentLabel.Result
        StreetName.Alias.Type: StreetName.Alias.Type
        CountryLevel: CountryLevel
        City: City
        CouldNotValidate: CouldNotValidate
        MultimatchCount: MultimatchCount
        USCountyName: USCountyName
        TrailingDirectional.Result: TrailingDirectional.Result
        POBox: POBox
        StreetName.Result: StreetName.Result
        PostalCode: PostalCode
        ApartmentNumber: ApartmentNumber
        AdditionalInputData: AdditionalInputData
        PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
        RecordType: RecordType
        StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
        AddressRecord.Result: AddressRecord.Result
        DPVFootnote: DPVFootnote
        StreetSuffix.Input: StreetSuffix.Input
        DPVNoStat: DPVNoStat
        AddressFormat: AddressFormat
        PostalCode.Source: PostalCode.Source
        Status.Code: Status.Code
        CanLanguage: CanLanguage
        SuiteLinkMatchCode: SuiteLinkMatchCode
        SuiteLinkReturnCode: SuiteLinkReturnCode
        USBCCheckDigit: USBCCheckDigit
        RRHC.Type: RRHC.Type
        RecordType.Default: RecordType.Default
        MultipleMatches: MultipleMatches
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.description:
          description: Specifies the description of the problem, if there is one.
          type: string
        AddressLine1:
          description: Specifies the first line of the validated and standardized
            address.
          type: string
        AddressLine2:
          description: Specifies the second line of the validated and standardized
            address.
          type: string
        City:
          description: Specifies the validated city name.
          type: string
        StateProvince:
          description: Specifies the validated state or province abbreviation.
          type: string
        PostalCode:
          description: Specifies the validated ZIP Code or postal code.
          type: string
        Country:
          description: Specifies the country in the format determined by the selection
            from ISO or UPO or English.
          type: string
        FirmName:
          description: Specifies the validated firm or company name.
          type: string
        BlockAddress:
          description: 'Specifies the formatted address, as it would appear on a physical
            mail piece. '
          type: string
        PostalCode.Base:
          description: Specifies the 5-digit ZIP Code.
          type: string
        PostalCode.AddOn:
          description: Specifies the 4-digit add-on part of the ZIP Code.
          type: string
        AdditionalInputData:
          description: Specifies input data not used by the address validation process.
          type: string
        CouldNotValidate:
          description: 'Specifies the address component that could not be validated,
            in case no match is found. '
          type: string
        AddressFormat:
          description: Specifies the type of address data being returned.
          type: string
        AddressLine3:
          description: Specifies the third line of the validated and standardized
            address. If the address could not be validated, the third line of the
            input address without any changes.
          type: string
        AddressLine4:
          description: Specifies the fourth line of the validated and standardized
            address. If the address could not be validated, the fourth line of the
            input address without any changes.
          type: string
        AddressRecord.Result:
          description: Specifies the result codes that apply to international addresses
            only.
          type: string
        ApartmentLabel:
          description: Specifies the apartment designator such as STE or APT.
          type: string
        ApartmentLabel.Input:
          description: Specifies the apartment designator such as STE or APT.
          type: string
        ApartmentLabel.Result:
          description: Specifies the result of apartment label.
          type: string
        ApartmentNumber:
          description: Specifies the apartment number.
          type: string
        ApartmentNumber.Input:
          description: Specifies the apartment number.
          type: string
        ApartmentNumber.Result:
          description: Specifies the result of apartment number.
          type: string
        City.Input:
          description: Specifies the validated city name.
          type: string
        City.Result:
          description: Specifies the result of the validated city name.
          type: string
        Confidence:
          description: Specifies the the level of confidence assigned to the address
            being returned.
          type: string
        Country.Input:
          description: Specifies the name of the country.
          type: string
        Country.Result:
          description: Specifies the result code for the country.
          type: string
        CountryLevel:
          description: Specifies the category of address matching available.
          type: string
        FirmName.Input:
          description: Specifies the validated firm or company name.
          type: string
        FirmName.Result:
          description: Specifies if the firm name got validated.
          type: string
        HouseNumber:
          description: Specifies the house number.
          type: string
        HouseNumber.Input:
          description: Specifies the house number.
          type: string
        HouseNumber.Result:
          description: Specifies the result for house number.
          type: string
        LeadingDirectional:
          description: Specifies the leading directional.
          type: string
        LeadingDirectional.Input:
          description: Specifies the leading directional.
          type: string
        LeadingDirectional.Result:
          description: Specifies the result of leading directional.
          type: string
        MultipleMatches:
          description: 'Specifies the address component with multiple matches, if
            multiple matches were found: '
          type: string
        POBox:
          description: Specifies the post office box number.
          type: string
        POBox.Input:
          description: Specifies the post office box number.
          type: string
        POBox.Result:
          description: Specifies the result of post office box number.
          type: string
        PostalCode.Input:
          description: Specifies the validated postal code. For U.S. addresses, this
            is the ZIP code.
          type: string
        PostalCode.Result:
          description: Specifies the result of validated postal code.
          type: string
        PostalCode.Source:
          description: Specifies the result code.
          type: string
        PostalCode.Type:
          description: Specifies the type of postal code returned.
          type: string
        PostalCodeCity.Result:
          description: Specifies the international result code.
          type: string
        PrivateMailbox:
          description: Specifies the private mailbox indicator.
          type: string
        PrivateMailbox.Input:
          description: Specifies the private mailbox indicator.
          type: string
        PrivateMailbox.Type:
          description: Specifies the type of private mailbox.
          type: string
        PrivateMailbox.Type.Input:
          description: Specifies the type of private mailbox.
          type: string
        RecordType:
          description: Specifies the type of address record, as defined by U.S. and
            Canadian postal authorities.
          type: string
        RecordType.Default:
          description: Specifies the code indicating the default match.
          type: string
        RRHC:
          description: Specifies the Rural Route/Highway Contract indicator.
          type: string
        RRHC.Input:
          description: Specifies the Rural Route/Highway Contract indicator.
          type: string
        RRHC.Result:
          description: Specifies the result for Rural Route/Highway Contract indicator.
          type: string
        RRHC.Type:
          description: Specifies the result code for Rural Route/Highway Contract
            indicator.
          type: string
        StateProvince.Input:
          description: Specifies the validated state or province abbreviation.
          type: string
        StateProvince.Result:
          description: Specifies the result of validated state or province abbreviation.
          type: string
        Street.Result:
          description: Specifies the result codes for international addresses.
          type: string
        StreetName:
          description: Specifies the street name.
          type: string
        StreetName.Alias.Type:
          description: Specifies result code that applies to U.S. addresses only.
          type: string
        StreetName.Input:
          description: Specifies the street name.
          type: string
        StreetName.Result:
          description: Specifies the result of the street name.
          type: string
        StreetNameAbbreviatedAlias.Result:
          description: Indicates the result of abbreviated alias processing.
          type: string
        StreetNamePreferredAlias.Result:
          description: Specifies the result of preferred alias processing.
          type: string
        StreetSuffix:
          description: Specifies the street suffix.
          type: string
        StreetSuffix.Input:
          description: Specifies the street suffix.
          type: string
        StreetSuffix.Result:
          description: Specifies the result of the street suffix.
          type: string
        TrailingDirectional:
          description: Specifies the trailing directional.
          type: string
        TrailingDirectional.Input:
          description: Specifies the trailing directional.
          type: string
        TrailingDirectional.Result:
          description: Specifies the result of the trailing directional.
          type: string
        MatchScore:
          description: Specifies an indication of the degree to which the output address
            is correct.
          type: string
        USLACS:
          description: Specifies whether the address is a candidate for LACS conversion.
            This is for U.S. addresses only).
          type: string
        USLACS.ReturnCode:
          description: Specifies the the success or failure of LACS processing. This
            is for U.S. addresses only).
          type: string
        RDI:
          description: Specifies the values indicating address type.
          type: string
        CMRA:
          description: Specifies if the address is a Commercial Mail Receiving Agency
            (CMRA).
          type: string
        DPV:
          description: Specifies the results of Delivery Point Validation (DPV) processing.
          type: string
        DPVFootnote:
          description: Specifies the DPV footnote codes.
          type: string
        SuiteLinkReturnCode:
          description: 'Indicates whether or not API corrected the secondary address
            information (U.S. addresses only). '
          type: string
        SuiteLinkMatchCode:
          description: Provides additional information on the SuiteLink match attempt.
            (U.S. addresses only)
          type: string
        SuiteLinkFidelity:
          description: Indicates how well ValidateAddress matched the firm name to
            the firm names in the SuiteLink database.
          type: string
        USBCCheckDigit:
          description: Specifies the check-digit portion of the 11-digit delivery
            point barcode.
          type: string
        PostalBarCode:
          description: Specifies the delivery point portion of the delivery point
            barcode.
          type: string
        USCarrierRouteCode:
          description: Specifies carrier route code.
          type: string
        USFIPSCountyNumber:
          description: Specifies FIPS (Federal Information Processing Standards) county
            number (U.S. addresses only).
          type: string
        USCountyName:
          description: Specifies the county name (U.S. addresses only).
          type: string
        USCongressionalDistrict:
          description: Specifies congressional district (U.S. addresses only).
          type: string
        USAltAddr:
          description: Specifies whether the alternate address matching logic was
            used, and if so which logic was used (U.S. addresses only).
          type: string
        USLastLineNumber:
          description: Specifies a six-character alphanumeric value that groups together
            ZIP Codes that share the same primary city.
          type: string
        USFinanceNumber:
          description: Specifies the finance number in which the address resides (U.S.
            addresses only).
          type: string
        USUrbanName:
          description: U.S. address urbanization name. Used primarily for Puerto Rico
            addresses.
          type: string
        USUrbanName.Input:
          description: U.S. address urbanization name. Used primarily for Puerto Rico
            addresses.
          type: string
        USUrbanName.Result:
          description: U.S. address urbanization name. Used primarily for Puerto Rico
            addresses.
          type: string
        MultimatchCount:
          description: If the address was matched to multiple candidate addresses
            in the reference data, this field contains the number of candidate matches
            found.
          type: string
        AddressBlock1:
          description: AddressBlock1
          type: string
        AddressBlock2:
          description: AddressBlock2
          type: string
        AddressBlock3:
          description: AddressBlock3
          type: string
        AddressBlock4:
          description: AddressBlock4
          type: string
        AddressBlock5:
          description: AddressBlock5
          type: string
        AddressBlock6:
          description: AddressBlock6
          type: string
        AddressBlock7:
          description: AddressBlock7
          type: string
        AddressBlock8:
          description: AddressBlock8
          type: string
        AddressBlock9:
          description: AddressBlock9
          type: string
        CanLanguage:
          description: Specifies whether the address is in English or French. This
            is for Canadian address only.
          type: string
        DPVNoStat:
          description: Specifies whether the building is a no stat building and therefore
            unable to receive mail.
          type: string
        DPVVacant:
          description: Specifies whether the building is vacant, unoccupied for 90
            days.
          type: string
      type: object
    ValidateMailingAddressUSCANAPIRequest:
      example:
        Input:
          Row:
          - AddressLine3: AddressLine3
            AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            USUrbanName: USUrbanName
            AddressLine4: AddressLine4
            Country: Country
            PostalCode: PostalCode
            City: City
            CanLanguage: CanLanguage
          - AddressLine3: AddressLine3
            AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            USUrbanName: USUrbanName
            AddressLine4: AddressLine4
            Country: Country
            PostalCode: PostalCode
            City: City
            CanLanguage: CanLanguage
        options:
          CanOutputCityFormat: D
          StandardAddressFormat: C
          OutputPostalCodeSeparator: "Y"
          OutputCasing: M
          CanSSLVRFlg: "N"
          CanDualAddressLogic: D
          CanEnglishApartmentLabel: Apt
          DPVDetermineNoStat: "N"
          OutputPreferredCity: Z
          PerformUSProcessing: "Y"
          PerformLACSLink: "Y"
          DPVSuccessfulStatusCondition: A
          OutputFormattedOnFail: "N"
          DPVDetermineVacancy: "N"
          DualAddressLogic: "N"
          PerformEWS: "N"
          OutputMultinationalCharacters: "N"
          OutputCountryFormat: E
          ExtractUrb: "N"
          StreetMatchingStrictness: M
          CanOutputCityAlias: "N"
          FailOnCMRAMatch: "N"
          OutputRecordType: A
          FirmMatchingStrictness: M
          CanPreferHouseNum: "N"
          OutputAddressBlocks: "Y"
          OutputShortCityName: "N"
          CanStandardAddressFormat: D
          OutputAbbreviatedAlias: "N"
          OutputFieldLevelReturnCodes: "N"
          KeepMultimatch: "N"
          MaximumResults: "10"
          StandardAddressPMBLine: "N"
          CanNonCivicFormat: A
          CanRuralRouteFormat: A
          CanFrenchFormat: C
          OutputStreetNameAlias: "Y"
          CanFrenchApartmentLabel: Appartement
          SuppressZplusPhantomCarrierR777: "N"
          ExtractFirm: "N"
          CanDeliveryOfficeFormat: I
          OutputPreferredAlias: "N"
          DirectionalMatchingStrictness: M
          PerformDPV: "N"
          PerformSuiteLink: "N"
      properties:
        options:
          $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIOptions'
        Input:
          $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIInput'
      type: object
    ValidateMailingAddressUSCANAPIOptions:
      example:
        CanOutputCityFormat: D
        StandardAddressFormat: C
        OutputPostalCodeSeparator: "Y"
        OutputCasing: M
        CanSSLVRFlg: "N"
        CanDualAddressLogic: D
        CanEnglishApartmentLabel: Apt
        DPVDetermineNoStat: "N"
        OutputPreferredCity: Z
        PerformUSProcessing: "Y"
        PerformLACSLink: "Y"
        DPVSuccessfulStatusCondition: A
        OutputFormattedOnFail: "N"
        DPVDetermineVacancy: "N"
        DualAddressLogic: "N"
        PerformEWS: "N"
        OutputMultinationalCharacters: "N"
        OutputCountryFormat: E
        ExtractUrb: "N"
        StreetMatchingStrictness: M
        CanOutputCityAlias: "N"
        FailOnCMRAMatch: "N"
        OutputRecordType: A
        FirmMatchingStrictness: M
        CanPreferHouseNum: "N"
        OutputAddressBlocks: "Y"
        OutputShortCityName: "N"
        CanStandardAddressFormat: D
        OutputAbbreviatedAlias: "N"
        OutputFieldLevelReturnCodes: "N"
        KeepMultimatch: "N"
        MaximumResults: "10"
        StandardAddressPMBLine: "N"
        CanNonCivicFormat: A
        CanRuralRouteFormat: A
        CanFrenchFormat: C
        OutputStreetNameAlias: "Y"
        CanFrenchApartmentLabel: Appartement
        SuppressZplusPhantomCarrierR777: "N"
        ExtractFirm: "N"
        CanDeliveryOfficeFormat: I
        OutputPreferredAlias: "N"
        DirectionalMatchingStrictness: M
        PerformDPV: "N"
        PerformSuiteLink: "N"
      properties:
        OutputAddressBlocks:
          default: "Y"
          description: Specifies whether to return a formatted version of the address.
          type: string
        PerformUSProcessing:
          default: "Y"
          description: Specifies whether or not to process U.S. addresses.
          type: string
        PerformDPV:
          default: "N"
          description: Delivery Point Validation (DPV®) validates that a specific
            address exists
          type: string
        OutputFormattedOnFail:
          default: "N"
          description: Specifies whether to return a formatted address when an address
            cannot be validated.
          type: string
        OutputPostalCodeSeparator:
          default: "Y"
          description: Specifies whether to use separators (spaces or hyphens) in
            ZIP™ Codes or Canadian postal codes.
          type: string
        OutputCountryFormat:
          default: E
          description: Specifies the format to use for the country name returned in
            the Country output field.
          type: string
        KeepMultimatch:
          default: "N"
          description: Indicates whether to return multiple address for input addresses
            that have more than one possible matches.
          type: string
        OutputCasing:
          default: M
          description: Specifies the casing of the output address. M for mixed case
            and U for upper case.
          type: string
        MaximumResults:
          default: "10"
          description: Specifies a number between 1 and 10 that indicates the maximum
            number of addresses to be returned.
          type: string
        OutputRecordType:
          default: A
          description: Specifies the type of the output record.
          type: string
        OutputFieldLevelReturnCodes:
          default: "N"
          description: Identifies which output addresses are candidate addresses as
            value if Y for OutputFieldLevelReturnCodes.
          type: string
        DPVDetermineNoStat:
          default: "N"
          description: Determines the no stat status of an address which means it
            exists but cannot receive mails.
          type: string
        StreetMatchingStrictness:
          default: M
          description: Specifies the algorithm to determe if an input address matches
            in the postal database.
          type: string
        CanFrenchApartmentLabel:
          default: Appartement
          description: 'Specifies the default apartment label for the output if there
            is no apartment label in the input address. This is specific to French
            address. '
          type: string
        OutputAbbreviatedAlias:
          default: "N"
          description: Specifies whether to use a street's abbreviated alias in the
            output if the output address line is longer than 31 characters.
          type: string
        DPVSuccessfulStatusCondition:
          default: A
          description: Selecting the match condition where a DPV result does NOT cause
            a record to fail.
          type: string
        StandardAddressPMBLine:
          default: "N"
          description: Specifies where Private Mailbox (PMB) information is placed.
          type: string
        FirmMatchingStrictness:
          default: M
          description: Specifies the algorithm to determining if an input address
            matches in the postal database.
          type: string
        CanRuralRouteFormat:
          default: A
          description: Specifies where to place rural route delivery information.
          type: string
        CanPreferHouseNum:
          default: "N"
          description: Specifies whether to select a house number of postal code in
            case of conflict.
          type: string
        OutputPreferredAlias:
          default: "N"
          description: Specifies whether to use a street's preferred alias in the
            output.
          type: string
        DirectionalMatchingStrictness:
          default: M
          description: Specifies the algorithm to determine if an input address matches
            in the postal database.
          type: string
        ExtractFirm:
          default: "N"
          description: Specifies whether to extract the firm name from AddressLine1
            through AddressLine4 and place it in the FirmName output field.
          type: string
        FailOnCMRAMatch:
          default: "N"
          description: Specifies whether to consider Treat Commercial Mail Receiving
            Agency (CMRA) matches as failures?
          type: string
        CanNonCivicFormat:
          default: A
          description: 'Specifies whether or not non-civic keywords are abbreviated
            in the output. '
          type: string
        CanSSLVRFlg:
          default: "N"
          description: Changes the civic and/or suite information to match the LVR
            or single-single record.
          type: string
        OutputStreetNameAlias:
          default: "Y"
          description: Specifies how to handle street name aliases used in the input.
            This is specific to US.
          type: string
        PerformEWS:
          default: "N"
          description: Specifies the Early Warning System (EWS) that uses the USPS
            EWS File to validate addresses that are not in the ZIP + 4 database.
          type: string
        CanOutputCityFormat:
          default: D
          description: Specifies whether to use the long, medium, or short version
            of the city if the city has a long name.
          type: string
        DualAddressLogic:
          default: "N"
          description: Specifies how to return a match if multiple non-blank address
            lines are present or multiple address types are on the same address line.
            (U.S. addresses only.)
          type: string
        PerformSuiteLink:
          default: "N"
          description: Specifies whether to perform SuiteLink processing.
          type: string
        CanStandardAddressFormat:
          default: D
          description: Specifies where to place secondary address information in the
            output address.
          type: string
        OutputPreferredCity:
          default: Z
          description: Specifies whether the preferred last line city name should
            be stored.
          type: string
        OutputMultinationalCharacters:
          default: "N"
          description: Specifies whether to return multinational characters, including
            diacritical marks such as umlauts or accents.
          type: string
        CanDeliveryOfficeFormat:
          default: I
          description: Specifies where to place station information.
          type: string
        PerformLACSLink:
          default: "Y"
          description: Facilitates the conversion of rural route address converting
            into street-style address using the LACS.
          type: string
        CanDualAddressLogic:
          default: D
          description: Specifies whether ValidateMailingAddressUSCAN should return
            a street match or a PO Box/non-civic match when the address contains both
            civic and non-civic information.
          type: string
        ExtractUrb:
          default: "N"
          description: 'Specifies whether to extract the urbanization name from AddressLine1
            through AddressLine4 and place it in the USUrbanName output field. '
          type: string
        StandardAddressFormat:
          default: C
          description: Specifies where to place secondary address information for
            U.S. addresses.
          type: string
        CanFrenchFormat:
          default: C
          description: Specifies how to determine the language (English or French)
            to use to format the address and directional.
          type: string
        DPVDetermineVacancy:
          default: "N"
          description: Determines if the location has been unoccupied for at least
            90 days.
          type: string
        CanEnglishApartmentLabel:
          default: Apt
          description: Specifies the default apartment label to use in the output
            if there is no apartment label in the input address. rhis is specific
            to English addresses.
          type: string
        SuppressZplusPhantomCarrierR777:
          default: "N"
          description: Specifies whether to supress addresses with Carrier Route R777.
          type: string
        CanOutputCityAlias:
          default: "N"
          description: Specifies whether or not to return the city alias when the
            alias is in the input address.
          type: string
        OutputShortCityName:
          default: "N"
          description: Specifies how to format city names that have short city name
            or non-mailing city name alternatives.
          type: string
      type: object
    ValidateMailingAddressUSCANAPIInput:
      example:
        Row:
        - AddressLine3: AddressLine3
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          USUrbanName: USUrbanName
          AddressLine4: AddressLine4
          Country: Country
          PostalCode: PostalCode
          City: City
          CanLanguage: CanLanguage
        - AddressLine3: AddressLine3
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          USUrbanName: USUrbanName
          AddressLine4: AddressLine4
          Country: Country
          PostalCode: PostalCode
          City: City
          CanLanguage: CanLanguage
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressUSCANAPIInputRow'
          type: array
      type: object
    ValidateMailingAddressUSCANAPIInputRow:
      example:
        AddressLine3: AddressLine3
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        FirmName: FirmName
        StateProvince: StateProvince
        USUrbanName: USUrbanName
        AddressLine4: AddressLine4
        Country: Country
        PostalCode: PostalCode
        City: City
        CanLanguage: CanLanguage
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first address line.
          type: string
        AddressLine2:
          description: The second address line.
          type: string
        AddressLine3:
          description: The third address line.
          type: string
        AddressLine4:
          description: The fourth address line.
          type: string
        FirmName:
          description: The company or firm name.
          type: string
        City:
          description: The city name.
          type: string
        StateProvince:
          description: The state or province.
          type: string
        Country:
          description: The country code or name.
          type: string
        PostalCode:
          description: The postal code for the address.
          type: string
        USUrbanName:
          description: U.S. address urbanization name. Used primarily for Puerto Rico
            addresses.
          type: string
        CanLanguage:
          description: Canadian language.
          type: string
      type: object
    ValidateMailingAddressResponse:
      example:
        Output:
        - Status: Status
          BlockAddress: BlockAddress
          FirmName: FirmName
          StateProvince: StateProvince
          PostalCode: PostalCode
          City: City
          Status.Code: Status.Code
          AdditionalInputData: AdditionalInputData
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Country: Country
          Status.Description: Status.Description
          PostalCode.AddOn: PostalCode.AddOn
        - Status: Status
          BlockAddress: BlockAddress
          FirmName: FirmName
          StateProvince: StateProvince
          PostalCode: PostalCode
          City: City
          Status.Code: Status.Code
          AdditionalInputData: AdditionalInputData
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Country: Country
          Status.Description: Status.Description
          PostalCode.AddOn: PostalCode.AddOn
      properties:
        Output:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressOutput'
          type: array
      type: object
    ValidateMailingAddressOutput:
      example:
        Status: Status
        BlockAddress: BlockAddress
        FirmName: FirmName
        StateProvince: StateProvince
        PostalCode: PostalCode
        City: City
        Status.Code: Status.Code
        AdditionalInputData: AdditionalInputData
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        PostalCode.Base: PostalCode.Base
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        Country: Country
        Status.Description: Status.Description
        PostalCode.AddOn: PostalCode.AddOn
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first line of the validated address.
          type: string
        AddressLine2:
          description: The second line of the validated address.
          type: string
        FirmName:
          description: The validated firm or company name.
          type: string
        City:
          description: The validated city name.
          type: string
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
        Country:
          description: The country name in English.
          type: string
        StateProvince:
          description: The validated state or province abbreviation.
          type: string
        BlockAddress:
          description: The formatted address, as it would appear on a physical mail
            piece.
          type: string
        AdditionalInputData:
          description: Input data not used by the address validation process.
          type: string
        PostalCode.Base:
          description: The 5-digit ZIP Code.
          type: string
        PostalCode.AddOn:
          description: The 4-digit add-on part of the ZIP Code.
          type: string
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.Description:
          description: Description of the problem, if there is one.
          type: string
      type: object
    ValidateMailingAddressRequest:
      example:
        Input:
          Row:
          - AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            Country: Country
            PostalCode: PostalCode
            City: City
          - AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            Country: Country
            PostalCode: PostalCode
            City: City
        options:
          OutputCasing: M
      properties:
        options:
          $ref: '#/components/schemas/ValidateMailingAddressOptions'
        Input:
          $ref: '#/components/schemas/ValidateMailingAddressInput'
      type: object
    ValidateMailingAddressOptions:
      example:
        OutputCasing: M
      properties:
        OutputCasing:
          default: M
          description: Specify the casing of the output data.
          type: string
      type: object
    ValidateMailingAddressInput:
      example:
        Row:
        - AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          Country: Country
          PostalCode: PostalCode
          City: City
        - AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          Country: Country
          PostalCode: PostalCode
          City: City
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressInputRow'
          type: array
      type: object
    ValidateMailingAddressInputRow:
      example:
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        FirmName: FirmName
        StateProvince: StateProvince
        Country: Country
        PostalCode: PostalCode
        City: City
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first address line.
          type: string
        AddressLine2:
          description: The second address line.
          type: string
        FirmName:
          description: The company or firm name.
          type: string
        City:
          description: The city name.
          type: string
        StateProvince:
          description: The state or province.
          type: string
        Country:
          description: The country code or name.
          type: string
        PostalCode:
          description: The postal code for the address.
          type: string
      type: object
    ValidateMailingAddressProResponse:
      example:
        Output:
        - Status: Status
          BlockAddress: BlockAddress
          FirmName: FirmName
          Suburb: Suburb
          Locality: Locality
          StateProvince: StateProvince
          AddressQuality: AddressQuality
          PostalCode: PostalCode
          City: City
          Status.Code: Status.Code
          CouldNotValidate: CouldNotValidate
          Deliverability: Deliverability
          AdditionalInputData: AdditionalInputData
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          ChangeScore: ChangeScore
          Country: Country
          Status.Description: Status.Description
          AddressType: AddressType
          PostalCode.AddOn: PostalCode.AddOn
        - Status: Status
          BlockAddress: BlockAddress
          FirmName: FirmName
          Suburb: Suburb
          Locality: Locality
          StateProvince: StateProvince
          AddressQuality: AddressQuality
          PostalCode: PostalCode
          City: City
          Status.Code: Status.Code
          CouldNotValidate: CouldNotValidate
          Deliverability: Deliverability
          AdditionalInputData: AdditionalInputData
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          ChangeScore: ChangeScore
          Country: Country
          Status.Description: Status.Description
          AddressType: AddressType
          PostalCode.AddOn: PostalCode.AddOn
      properties:
        Output:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressProOutput'
          type: array
      type: object
    ValidateMailingAddressProOutput:
      example:
        Status: Status
        BlockAddress: BlockAddress
        FirmName: FirmName
        Suburb: Suburb
        Locality: Locality
        StateProvince: StateProvince
        AddressQuality: AddressQuality
        PostalCode: PostalCode
        City: City
        Status.Code: Status.Code
        CouldNotValidate: CouldNotValidate
        Deliverability: Deliverability
        AdditionalInputData: AdditionalInputData
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        PostalCode.Base: PostalCode.Base
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        ChangeScore: ChangeScore
        Country: Country
        Status.Description: Status.Description
        AddressType: AddressType
        PostalCode.AddOn: PostalCode.AddOn
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first line of the validated address.
          type: string
        AddressLine2:
          description: The second line of the validated address.
          type: string
        FirmName:
          description: The validated firm or company name.
          type: string
        ChangeScore:
          description: A value of 0 and 100 that reflects how much the address has
            changed to make it valid.
          type: string
        Locality:
          description: Generally a locality is a village in rural areas or it may
            be a suburb in urban areas.
          type: string
        Suburb:
          description: The suburb name.
          type: string
        AddressType:
          description: A single letter code that indicates the type of address.
          type: string
        Deliverability:
          description: An estimate of confidence that an item mailed or shipped to
            this address would be successfully delivered.
          type: string
        AddressQuality:
          description: A two character code indicating overall quality of the resulting
            address.
          type: string
        CouldNotValidate:
          description: Mentions the address component that could not be validated,
            in case no match is found.
          type: string
        City:
          description: The validated city name.
          type: string
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
        Country:
          description: The country in the format determined by what you selected.
          type: string
        StateProvince:
          description: The validated state or province abbreviation.
          type: string
        BlockAddress:
          description: The formatted address, as it would appear on a physical mail
            piece.
          type: string
        AdditionalInputData:
          description: Input data that could not be matched to a particular address
            component.
          type: string
        PostalCode.Base:
          description: The 5-digit ZIP Code.
          type: string
        PostalCode.AddOn:
          description: The 4-digit add-on part of the ZIP Code.
          type: string
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.Description:
          description: Description of the problem, if there is one.
          type: string
      type: object
    ValidateMailingAddressProRequest:
      example:
        Input:
          Row:
          - AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            Country: Country
            PostalCode: PostalCode
            City: City
          - AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            StateProvince: StateProvince
            Country: Country
            PostalCode: PostalCode
            City: City
        options:
          OutputCasing: M
          OutputAddressBlocks: "Y"
          OutputCountryFormat: E
          OutputScript: InputScript
          KeepMultimatch: "N"
          MaximumResults: "10"
      properties:
        options:
          $ref: '#/components/schemas/ValidateMailingAddressProOptions'
        Input:
          $ref: '#/components/schemas/ValidateMailingAddressProInput'
      type: object
    ValidateMailingAddressProOptions:
      example:
        OutputCasing: M
        OutputAddressBlocks: "Y"
        OutputCountryFormat: E
        OutputScript: InputScript
        KeepMultimatch: "N"
        MaximumResults: "10"
      properties:
        OutputAddressBlocks:
          default: "Y"
          description: Specifies whether to return a formatted version of the address
            as it would be printed on a physical mail piece.
          type: string
        KeepMultimatch:
          default: "N"
          description: Specifies whether to return multiple address for those input
            addresses that have more than one possible match.
          type: string
        OutputCountryFormat:
          default: E
          description: Specifies the format to use for the country name returned in
            the Country output field.
          type: string
        OutputScript:
          default: InputScript
          description: Specifies the alphabet or script in which the output should
            be returned.
          type: string
        OutputCasing:
          default: M
          description: Specify the casing of the output data.
          type: string
        MaximumResults:
          default: "10"
          description: A number between 1 and 10 that indicates the maximum number
            of addresses to return.
          type: string
      type: object
    ValidateMailingAddressProInput:
      example:
        Row:
        - AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          Country: Country
          PostalCode: PostalCode
          City: City
        - AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          StateProvince: StateProvince
          Country: Country
          PostalCode: PostalCode
          City: City
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressProInputRow'
          type: array
      type: object
    ValidateMailingAddressProInputRow:
      example:
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        FirmName: FirmName
        StateProvince: StateProvince
        Country: Country
        PostalCode: PostalCode
        City: City
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first address line.
          type: string
        AddressLine2:
          description: The second address line.
          type: string
        FirmName:
          description: The company or firm name.
          type: string
        City:
          description: The city name.
          type: string
        StateProvince:
          description: The state or province.
          type: string
        Country:
          description: The country code or name.
          type: string
        PostalCode:
          description: The postal code for the address.
          type: string
      type: object
    ValidateMailingAddressPremiumResponse:
      example:
        Output:
        - StreetName: StreetName
          ApartmentLabel2.Result: ApartmentLabel2.Result
          POBox.Input: POBox.Input
          Suburb: Suburb
          Country.Input: Country.Input
          RRHC.Input: RRHC.Input
          TrailingDirectional: TrailingDirectional
          Latitude: Latitude
          Street.Result: Street.Result
          PrivateMailbox: PrivateMailbox
          PrivateMailbox.Input: PrivateMailbox.Input
          StreetSuffix: StreetSuffix
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Confidence: Confidence
          StreetName.Input: StreetName.Input
          LeadingDirectional: LeadingDirectional
          FirmName.Input: FirmName.Input
          RRHC: RRHC
          Status: Status
          PostalCode.Result: PostalCode.Result
          StateProvince.Input: StateProvince.Input
          FirmName: FirmName
          Country.Result: Country.Result
          StreetName.Alias.Type: StreetName.Alias.Type
          ApartmentLabel.Result: ApartmentLabel.Result
          Locality: Locality
          StateProvince: StateProvince
          LeadingDirectional.Input: LeadingDirectional.Input
          CountryLevel: CountryLevel
          AddressQuality: AddressQuality
          City: City
          CouldNotValidate: CouldNotValidate
          Longitude: Longitude
          PostalCode.Type: PostalCode.Type
          AddressLine3: AddressLine3
          StateProvince.Result: StateProvince.Result
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          TrailingDirectional.Result: TrailingDirectional.Result
          AddressLine5: AddressLine5
          AddressLine4: AddressLine4
          HouseNumber.Input: HouseNumber.Input
          Country: Country
          HouseNumber.Result: HouseNumber.Result
          ChangeScore: ChangeScore
          Status.Description: Status.Description
          ApartmentNumber2: ApartmentNumber2
          LeadingDirectional.Result: LeadingDirectional.Result
          PostalCode.AddOn: PostalCode.AddOn
          POBox: POBox
          TrailingDirectional.Input: TrailingDirectional.Input
          StreetSuffix.Result: StreetSuffix.Result
          ApartmentNumber2.Result: ApartmentNumber2.Result
          HouseNumber: HouseNumber
          StreetName.Result: StreetName.Result
          FirmName.Result: FirmName.Result
          BlockAddress: BlockAddress
          ApartmentLabel: ApartmentLabel
          ApartmentLabel.Input: ApartmentLabel.Input
          PostalCode: PostalCode
          ApartmentNumber: ApartmentNumber
          AdditionalInputData: AdditionalInputData
          POBox.Result: POBox.Result
          PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
          PostalCodeCity.Result: PostalCodeCity.Result
          RecordType: RecordType
          PrivateMailbox.Type: PrivateMailbox.Type
          ApartmentNumber.Result: ApartmentNumber.Result
          RRHC.Result: RRHC.Result
          StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
          ApartmentNumber.Input: ApartmentNumber.Input
          AddressRecord.Result: AddressRecord.Result
          City.Input: City.Input
          ApartmentLabel2: ApartmentLabel2
          StreetSuffix.Input: StreetSuffix.Input
          PostalCode.Input: PostalCode.Input
          AddressFormat: AddressFormat
          PostalCode.Source: PostalCode.Source
          Status.Code: Status.Code
          Deliverability: Deliverability
          StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
          RRHC.Type: RRHC.Type
          City.Result: City.Result
          AddressType: AddressType
          RecordType.Default: RecordType.Default
          MultipleMatches: MultipleMatches
        - StreetName: StreetName
          ApartmentLabel2.Result: ApartmentLabel2.Result
          POBox.Input: POBox.Input
          Suburb: Suburb
          Country.Input: Country.Input
          RRHC.Input: RRHC.Input
          TrailingDirectional: TrailingDirectional
          Latitude: Latitude
          Street.Result: Street.Result
          PrivateMailbox: PrivateMailbox
          PrivateMailbox.Input: PrivateMailbox.Input
          StreetSuffix: StreetSuffix
          PostalCode.Base: PostalCode.Base
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          Confidence: Confidence
          StreetName.Input: StreetName.Input
          LeadingDirectional: LeadingDirectional
          FirmName.Input: FirmName.Input
          RRHC: RRHC
          Status: Status
          PostalCode.Result: PostalCode.Result
          StateProvince.Input: StateProvince.Input
          FirmName: FirmName
          Country.Result: Country.Result
          StreetName.Alias.Type: StreetName.Alias.Type
          ApartmentLabel.Result: ApartmentLabel.Result
          Locality: Locality
          StateProvince: StateProvince
          LeadingDirectional.Input: LeadingDirectional.Input
          CountryLevel: CountryLevel
          AddressQuality: AddressQuality
          City: City
          CouldNotValidate: CouldNotValidate
          Longitude: Longitude
          PostalCode.Type: PostalCode.Type
          AddressLine3: AddressLine3
          StateProvince.Result: StateProvince.Result
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          TrailingDirectional.Result: TrailingDirectional.Result
          AddressLine5: AddressLine5
          AddressLine4: AddressLine4
          HouseNumber.Input: HouseNumber.Input
          Country: Country
          HouseNumber.Result: HouseNumber.Result
          ChangeScore: ChangeScore
          Status.Description: Status.Description
          ApartmentNumber2: ApartmentNumber2
          LeadingDirectional.Result: LeadingDirectional.Result
          PostalCode.AddOn: PostalCode.AddOn
          POBox: POBox
          TrailingDirectional.Input: TrailingDirectional.Input
          StreetSuffix.Result: StreetSuffix.Result
          ApartmentNumber2.Result: ApartmentNumber2.Result
          HouseNumber: HouseNumber
          StreetName.Result: StreetName.Result
          FirmName.Result: FirmName.Result
          BlockAddress: BlockAddress
          ApartmentLabel: ApartmentLabel
          ApartmentLabel.Input: ApartmentLabel.Input
          PostalCode: PostalCode
          ApartmentNumber: ApartmentNumber
          AdditionalInputData: AdditionalInputData
          POBox.Result: POBox.Result
          PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
          PostalCodeCity.Result: PostalCodeCity.Result
          RecordType: RecordType
          PrivateMailbox.Type: PrivateMailbox.Type
          ApartmentNumber.Result: ApartmentNumber.Result
          RRHC.Result: RRHC.Result
          StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
          ApartmentNumber.Input: ApartmentNumber.Input
          AddressRecord.Result: AddressRecord.Result
          City.Input: City.Input
          ApartmentLabel2: ApartmentLabel2
          StreetSuffix.Input: StreetSuffix.Input
          PostalCode.Input: PostalCode.Input
          AddressFormat: AddressFormat
          PostalCode.Source: PostalCode.Source
          Status.Code: Status.Code
          Deliverability: Deliverability
          StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
          RRHC.Type: RRHC.Type
          City.Result: City.Result
          AddressType: AddressType
          RecordType.Default: RecordType.Default
          MultipleMatches: MultipleMatches
      properties:
        Output:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressPremiumOutput'
          type: array
      type: object
    ValidateMailingAddressPremiumOutput:
      example:
        StreetName: StreetName
        ApartmentLabel2.Result: ApartmentLabel2.Result
        POBox.Input: POBox.Input
        Suburb: Suburb
        Country.Input: Country.Input
        RRHC.Input: RRHC.Input
        TrailingDirectional: TrailingDirectional
        Latitude: Latitude
        Street.Result: Street.Result
        PrivateMailbox: PrivateMailbox
        PrivateMailbox.Input: PrivateMailbox.Input
        StreetSuffix: StreetSuffix
        PostalCode.Base: PostalCode.Base
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        Confidence: Confidence
        StreetName.Input: StreetName.Input
        LeadingDirectional: LeadingDirectional
        FirmName.Input: FirmName.Input
        RRHC: RRHC
        Status: Status
        PostalCode.Result: PostalCode.Result
        StateProvince.Input: StateProvince.Input
        FirmName: FirmName
        Country.Result: Country.Result
        StreetName.Alias.Type: StreetName.Alias.Type
        ApartmentLabel.Result: ApartmentLabel.Result
        Locality: Locality
        StateProvince: StateProvince
        LeadingDirectional.Input: LeadingDirectional.Input
        CountryLevel: CountryLevel
        AddressQuality: AddressQuality
        City: City
        CouldNotValidate: CouldNotValidate
        Longitude: Longitude
        PostalCode.Type: PostalCode.Type
        AddressLine3: AddressLine3
        StateProvince.Result: StateProvince.Result
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        TrailingDirectional.Result: TrailingDirectional.Result
        AddressLine5: AddressLine5
        AddressLine4: AddressLine4
        HouseNumber.Input: HouseNumber.Input
        Country: Country
        HouseNumber.Result: HouseNumber.Result
        ChangeScore: ChangeScore
        Status.Description: Status.Description
        ApartmentNumber2: ApartmentNumber2
        LeadingDirectional.Result: LeadingDirectional.Result
        PostalCode.AddOn: PostalCode.AddOn
        POBox: POBox
        TrailingDirectional.Input: TrailingDirectional.Input
        StreetSuffix.Result: StreetSuffix.Result
        ApartmentNumber2.Result: ApartmentNumber2.Result
        HouseNumber: HouseNumber
        StreetName.Result: StreetName.Result
        FirmName.Result: FirmName.Result
        BlockAddress: BlockAddress
        ApartmentLabel: ApartmentLabel
        ApartmentLabel.Input: ApartmentLabel.Input
        PostalCode: PostalCode
        ApartmentNumber: ApartmentNumber
        AdditionalInputData: AdditionalInputData
        POBox.Result: POBox.Result
        PrivateMailbox.Type.Input: PrivateMailbox.Type.Input
        PostalCodeCity.Result: PostalCodeCity.Result
        RecordType: RecordType
        PrivateMailbox.Type: PrivateMailbox.Type
        ApartmentNumber.Result: ApartmentNumber.Result
        RRHC.Result: RRHC.Result
        StreetNamePreferredAlias.Result: StreetNamePreferredAlias.Result
        ApartmentNumber.Input: ApartmentNumber.Input
        AddressRecord.Result: AddressRecord.Result
        City.Input: City.Input
        ApartmentLabel2: ApartmentLabel2
        StreetSuffix.Input: StreetSuffix.Input
        PostalCode.Input: PostalCode.Input
        AddressFormat: AddressFormat
        PostalCode.Source: PostalCode.Source
        Status.Code: Status.Code
        Deliverability: Deliverability
        StreetNameAbbreviatedAlias.Result: StreetNameAbbreviatedAlias.Result
        RRHC.Type: RRHC.Type
        City.Result: City.Result
        AddressType: AddressType
        RecordType.Default: RecordType.Default
        MultipleMatches: MultipleMatches
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        Status:
          description: Reports the success or failure of the match attempt.
          type: string
        Status.Code:
          description: Reason for failure, if there is one.
          type: string
        Status.Description:
          description: Description of the problem, if there is one.
          type: string
        Confidence:
          description: The level of confidence assigned to the address being returned.
          type: string
        RecordType:
          description: Type of address record.
          type: string
        RecordType.Default:
          description: Code indicating the default match.
          type: string
        MultipleMatches:
          description: Indicates which address component had multiple matches.
          type: string
        CouldNotValidate:
          description: Mentions the address component that could not be validated,
            in case no match is found.
          type: string
        CountryLevel:
          description: The category of address matching available.
          type: string
        AddressFormat:
          description: The type of address data being returned.
          type: string
        AddressLine1:
          description: The first line of the validated address.
          type: string
        AddressLine2:
          description: The second line of the validated address.
          type: string
        AddressLine3:
          description: The third line of the validated address.
          type: string
        AddressLine4:
          description: The fourth line of the validated address.
          type: string
        City:
          description: The validated city name.
          type: string
        StateProvince:
          description: The validated state or province abbreviation.
          type: string
        PostalCode:
          description: The validated ZIP Code or postal code.
          type: string
        PostalCode.Base:
          description: The 5-digit ZIP Code.
          type: string
        PostalCode.AddOn:
          description: The 4-digit add-on part of the ZIP Code.
          type: string
        Country:
          description: The country in the format determined by what you selected.
          type: string
        AdditionalInputData:
          description: Input data that could not be matched to a particular address
            component.
          type: string
        FirmName:
          description: The validated firm or company name.
          type: string
        HouseNumber:
          description: House number.
          type: string
        LeadingDirectional:
          description: Leading directional.
          type: string
        StreetName:
          description: Street name.
          type: string
        StreetSuffix:
          description: Street suffix.
          type: string
        TrailingDirectional:
          description: Trailing directional.
          type: string
        ApartmentLabel:
          description: Apartment designator (such as STE or APT).
          type: string
        ApartmentNumber:
          description: Apartment number.
          type: string
        ApartmentLabel2:
          description: Secondary apartment designator.
          type: string
        ApartmentNumber2:
          description: Secondary apartment number.
          type: string
        RRHC:
          description: Rural Route/Highway Contract indicator.
          type: string
        POBox:
          description: Post office box number.
          type: string
        PrivateMailbox:
          description: Private mailbox indicator.
          type: string
        PrivateMailbox.Type:
          description: The type of private mailbox.
          type: string
        HouseNumber.Input:
          description: House number.
          type: string
        LeadingDirectional.Input:
          description: Leading directional.
          type: string
        StreetName.Input:
          description: Street name.
          type: string
        StreetSuffix.Input:
          description: Street suffix.
          type: string
        TrailingDirectional.Input:
          description: Trailing directional.
          type: string
        ApartmentLabel.Input:
          description: Apartment designator (such as STE or APT).
          type: string
        ApartmentNumber.Input:
          description: Apartment number.
          type: string
        RRHC.Input:
          description: Rural Route/Highway Contract indicator.
          type: string
        POBox.Input:
          description: Post office box number.
          type: string
        PrivateMailbox.Input:
          description: Private mailbox indicator.
          type: string
        PrivateMailbox.Type.Input:
          description: The type of private mailbox.
          type: string
        City.Input:
          description: Validated city name.
          type: string
        StateProvince.Input:
          description: Validated state or province name.
          type: string
        PostalCode.Input:
          description: Validated postal code.
          type: string
        Country.Input:
          description: Country. Format is determined by what you selected in OutputCountryFormat.
          type: string
        FirmName.Input:
          description: The validated firm or company name.
          type: string
        HouseNumber.Result:
          description: The field-level result indicator for HouseNumber.
          type: string
        LeadingDirectional.Result:
          description: The field-level result indicator for LeadingDirectional.
          type: string
        Street.Result:
          description: The field-level result indicator for Street.
          type: string
        StreetName.Result:
          description: The field-level result indicator for StreetName.
          type: string
        StreetName.Alias.Type:
          description: The field-level result indicator for StreetName Alias.
          type: string
        StreetSuffix.Result:
          description: The field-level result indicator for StreetSuffix.
          type: string
        TrailingDirectional.Result:
          description: The field-level result indicator for TrailingDirectional.
          type: string
        ApartmentLabel.Result:
          description: The field-level result indicator for ApartmentLabel.
          type: string
        ApartmentNumber.Result:
          description: The field-level result indicator for ApartmentNumber.
          type: string
        ApartmentLabel2.Result:
          description: The field-level result indicator for ApartmentLabel2.
          type: string
        ApartmentNumber2.Result:
          description: The field-level result indicator for ApartmentNumber2.
          type: string
        RRHC.Result:
          description: The field-level result indicator for RRHC.
          type: string
        RRHC.Type:
          description: The field-level result indicator for RRHC Type.
          type: string
        POBox.Result:
          description: The field-level result indicator for POBox.
          type: string
        City.Result:
          description: The field-level result indicator for City.
          type: string
        StateProvince.Result:
          description: The field-level result indicator for StateProvince.
          type: string
        PostalCode.Result:
          description: The field-level result indicator for PostalCode.
          type: string
        PostalCodeCity.Result:
          description: The field-level result indicator for PostalCodeCity.
          type: string
        AddressRecord.Result:
          description: The field-level result indicator for AddressRecord.
          type: string
        PostalCode.Source:
          description: The field-level result indicator for PostalCode Source.
          type: string
        PostalCode.Type:
          description: Indicates the type of postal code returned.
          type: string
        Country.Result:
          description: The validated firm or company name.
          type: string
        FirmName.Result:
          description: Indicates if the firm name got validated.
          type: string
        StreetNamePreferredAlias.Result:
          description: Indicates the result of preferred alias processing.
          type: string
        StreetNameAbbreviatedAlias.Result:
          description: Indicates the result of abbreviated alias processing.
          type: string
        AddressLine5:
          description: The fifth line of the validated address.
          type: string
        AddressQuality:
          description: A two character code indicating overall quality of the resulting
            address.
          type: string
        Deliverability:
          description: An estimate of confidence that an item mailed or shipped to
            this address would be successfully delivered.
          type: string
        AddressType:
          description: A single letter code that indicates the type of address.
          type: string
        Locality:
          description: A locality is a village in rural areas or it may be a suburb
            in urban areas.
          type: string
        ChangeScore:
          description: A value of 0 and 100 that reflects how much the address has
            changed to make it valid.
          type: string
        Suburb:
          description: The validated firm or company name.
          type: string
        BlockAddress:
          description: It is the formatted address, as it would appear on a physical
            mail piece.
          type: string
        Latitude:
          description: Seven-digit number in degrees, calculated to four decimal places.
          type: string
        Longitude:
          description: Seven-digit number in degrees, calculated to four decimal places.
          type: string
      type: object
    ValidateMailingAddressPremiumRequest:
      example:
        Input:
          Row:
          - AddressLine3: AddressLine3
            AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            AddressLine5: AddressLine5
            StateProvince: StateProvince
            AddressLine4: AddressLine4
            Country: Country
            PostalCode: PostalCode
            City: City
          - AddressLine3: AddressLine3
            AddressLine2: AddressLine2
            AddressLine1: AddressLine1
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            FirmName: FirmName
            AddressLine5: AddressLine5
            StateProvince: StateProvince
            AddressLine4: AddressLine4
            Country: Country
            PostalCode: PostalCode
            City: City
        options:
          OutputRecordType: A
          OutputCasing: M
          OutputAddressBlocks: "Y"
          OutputCountryFormat: E
          OutputFieldLevelReturnCodes: "N"
          OutputScript: InputScript
          KeepMultimatch: "N"
          MaximumResults: "10"
      properties:
        options:
          $ref: '#/components/schemas/ValidateMailingAddressPremiumOptions'
        Input:
          $ref: '#/components/schemas/ValidateMailingAddressPremiumInput'
      type: object
    ValidateMailingAddressPremiumOptions:
      example:
        OutputRecordType: A
        OutputCasing: M
        OutputAddressBlocks: "Y"
        OutputCountryFormat: E
        OutputFieldLevelReturnCodes: "N"
        OutputScript: InputScript
        KeepMultimatch: "N"
        MaximumResults: "10"
      properties:
        OutputAddressBlocks:
          default: "Y"
          description: Specifies whether to return a formatted version of the address
            as it would be printed on a physical mail piece.
          type: string
        KeepMultimatch:
          default: "N"
          description: Specifies whether to return multiple address for those input
            addresses that have more than one possible match.
          type: string
        OutputCountryFormat:
          default: E
          description: Specifies the format to use for the country name returned in
            the Country output field.
          type: string
        OutputRecordType:
          default: A
          description: Specifies the type of output record you get.
          type: string
        OutputFieldLevelReturnCodes:
          default: "N"
          description: Specifies whether to include field-level result indicators.
          type: string
        OutputScript:
          default: InputScript
          description: Specifies the alphabet or script in which the output should
            be returned.
          type: string
        OutputCasing:
          default: M
          description: Specify the casing of the output data.
          type: string
        MaximumResults:
          default: "10"
          description: A number between 1 and 10 that indicates the maximum number
            of addresses to return.
          type: string
      type: object
    ValidateMailingAddressPremiumInput:
      example:
        Row:
        - AddressLine3: AddressLine3
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          AddressLine5: AddressLine5
          StateProvince: StateProvince
          AddressLine4: AddressLine4
          Country: Country
          PostalCode: PostalCode
          City: City
        - AddressLine3: AddressLine3
          AddressLine2: AddressLine2
          AddressLine1: AddressLine1
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FirmName: FirmName
          AddressLine5: AddressLine5
          StateProvince: StateProvince
          AddressLine4: AddressLine4
          Country: Country
          PostalCode: PostalCode
          City: City
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidateMailingAddressPremiumInputRow'
          type: array
      type: object
    ValidateMailingAddressPremiumInputRow:
      example:
        AddressLine3: AddressLine3
        AddressLine2: AddressLine2
        AddressLine1: AddressLine1
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        FirmName: FirmName
        AddressLine5: AddressLine5
        StateProvince: StateProvince
        AddressLine4: AddressLine4
        Country: Country
        PostalCode: PostalCode
        City: City
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        AddressLine1:
          description: The first address line.
          type: string
        AddressLine2:
          description: The second address line.
          type: string
        AddressLine3:
          description: The third address line.
          type: string
        AddressLine4:
          description: The fourth address line.
          type: string
        AddressLine5:
          description: The fifth address line.
          type: string
        FirmName:
          description: The company or firm name.
          type: string
        City:
          description: The city name.
          type: string
        StateProvince:
          description: The state or province.
          type: string
        Country:
          description: The country code or name.
          type: string
        PostalCode:
          description: The postal code for the address.
          type: string
      type: object
    ValidateEmailAddressAPIResponse:
      example:
        Output:
        - SUGG_COMMENT: SUGG_COMMENT
          Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FINDING: FINDING
          ERROR_RESPONSE: ERROR_RESPONSE
          ERROR: ERROR
          Status.Description: Status.Description
          COMMENT_CODE: COMMENT_CODE
          Status.Code: Status.Code
          EMAIL: EMAIL
          SUGG_EMAIL: SUGG_EMAIL
          COMMENT: COMMENT
        - SUGG_COMMENT: SUGG_COMMENT
          Status: Status
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          FINDING: FINDING
          ERROR_RESPONSE: ERROR_RESPONSE
          ERROR: ERROR
          Status.Description: Status.Description
          COMMENT_CODE: COMMENT_CODE
          Status.Code: Status.Code
          EMAIL: EMAIL
          SUGG_EMAIL: SUGG_EMAIL
          COMMENT: COMMENT
      properties:
        Output:
          items:
            $ref: '#/components/schemas/ValidateEmailAddressOutput'
          type: array
      type: object
    ValidateEmailAddressOutput:
      example:
        SUGG_COMMENT: SUGG_COMMENT
        Status: Status
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        FINDING: FINDING
        ERROR_RESPONSE: ERROR_RESPONSE
        ERROR: ERROR
        Status.Description: Status.Description
        COMMENT_CODE: COMMENT_CODE
        Status.Code: Status.Code
        EMAIL: EMAIL
        SUGG_EMAIL: SUGG_EMAIL
        COMMENT: COMMENT
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        EMAIL:
          description: The email address submitted for verification.
          type: string
        FINDING:
          description: One character code indicating the validity of the submitted
            email address.
          type: string
        COMMENT:
          description: The comment string pertaining to the result of the submitted
            email address.
          type: string
        COMMENT_CODE:
          description: A short code which maps to each returned COMMENT field value.
          type: string
        SUGG_EMAIL:
          description: Suggested correction for submitted email address, if found.
            A suggestion will only be provided if it is valid and SafeToDeliver.
          type: string
        SUGG_COMMENT:
          description: This field contains suggestion not SafeToDeliver when ValidateEmailAddress
            corrected the address and the corrected version of the email address failed
            one or more SafeToDeliver process checks.
          type: string
        ERROR_RESPONSE:
          description: Pre-formatted response intended to be provided to user.
          type: string
        ERROR:
          description: Field reserved for special features only.
          type: string
        Status:
          type: string
        Status.Code:
          type: string
        Status.Description:
          type: string
      type: object
    ValidateEmailAddressAPIRequest:
      example:
        Input:
          Row:
          - rtc: rtc
            bogus: bogus
            atc: atc
            emailAddress: emailAddress
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            role: role
            emps: emps
            fccwireless: fccwireless
            rtc_timeout: rtc_timeout
            language: language
            complain: complain
            disposable: disposable
          - rtc: rtc
            bogus: bogus
            atc: atc
            emailAddress: emailAddress
            user_fields:
            - name: name
              value: value
            - name: name
              value: value
            role: role
            emps: emps
            fccwireless: fccwireless
            rtc_timeout: rtc_timeout
            language: language
            complain: complain
            disposable: disposable
        options: '{}'
      properties:
        options:
          type: object
        Input:
          $ref: '#/components/schemas/ValidateEmailAddressInput'
      type: object
    ValidateEmailAddressOptions:
      type: object
    ValidateEmailAddressInput:
      example:
        Row:
        - rtc: rtc
          bogus: bogus
          atc: atc
          emailAddress: emailAddress
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          role: role
          emps: emps
          fccwireless: fccwireless
          rtc_timeout: rtc_timeout
          language: language
          complain: complain
          disposable: disposable
        - rtc: rtc
          bogus: bogus
          atc: atc
          emailAddress: emailAddress
          user_fields:
          - name: name
            value: value
          - name: name
            value: value
          role: role
          emps: emps
          fccwireless: fccwireless
          rtc_timeout: rtc_timeout
          language: language
          complain: complain
          disposable: disposable
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidateEmailAddressInputRow'
          type: array
      type: object
    ValidateEmailAddressInputRow:
      example:
        rtc: rtc
        bogus: bogus
        atc: atc
        emailAddress: emailAddress
        user_fields:
        - name: name
          value: value
        - name: name
          value: value
        role: role
        emps: emps
        fccwireless: fccwireless
        rtc_timeout: rtc_timeout
        language: language
        complain: complain
        disposable: disposable
      properties:
        user_fields:
          description: These fields are returned, unmodified, in the user_fields section
            of the response.
          items:
            $ref: '#/components/schemas/GetPostalCodesAPIOutput_user_fields'
          type: array
        rtc:
          description: Enables or disables real-time confirmation. If the deliverability
            of an email address cannot be determined via our knowledge base, a real-time
            confirmation can be attempted.
          type: string
        bogus:
          description: Specifies whether to check if the email address is fictitious.
            For example, bgates@microsoft.com.
          type: string
        role:
          description: Specifies whether to check if the email address has a non-personal
            handle, such as info@, sales@, or webmaster@. For example, sales@example.com.
          type: string
        emps:
          description: Specifies whether to check if the email address appears on
            the Direct Marketing Association's Do Not Email list (Electronic Mail
            Preference Service).
          type: string
        fccwireless:
          description: Specifies whether to check if the email address is associated
            with a domain that has restrictions on commercial email per the FCC.
          type: string
        language:
          description: Specifies whether to check if the email address handle contains
            derogatory words.
          type: string
        complain:
          description: Specifies whether to check if the owner of the email address
            is known to submit spam complaints.
          type: string
        disposable:
          description: Specifies whether to check if the email address originates
            from a website that provides temporary email addresses, or if the email
            address appears to be temporary
          type: string
        atc:
          description: 'One character code controlling the advanced suggestion behavior.The
            possible values are: a, c, and n'
          type: string
        emailAddress:
          description: The email address you want to validate.
          type: string
        rtc_timeout:
          description: Specifies the timeout for real-time confirmation. See the description
            of the rtc parameter. Specify the timeout value in milliseconds. Valid
            values are 0 to 4000. By default, the system allows 1200 milliseconds
            for this check.
          type: string
      type: object
    PhoneVerification:
      example:
        Output:
        - CarrierName: CarrierName
          MNC: MNC
          user_fields:
          - user_fields
          - user_fields
          PhoneType: PhoneType
          PhoneNumberFormatted: PhoneNumberFormatted
          PhoneNumber: PhoneNumber
          MCC: MCC
          CountryCode: CountryCode
          ResultCode: ResultCode
        - CarrierName: CarrierName
          MNC: MNC
          user_fields:
          - user_fields
          - user_fields
          PhoneType: PhoneType
          PhoneNumberFormatted: PhoneNumberFormatted
          PhoneNumber: PhoneNumber
          MCC: MCC
          CountryCode: CountryCode
          ResultCode: ResultCode
      properties:
        Output:
          items:
            $ref: '#/components/schemas/PhoneVerification_Output'
          type: array
      type: object
    ValidatePhoneNumberAPIRequest:
      example:
        Input:
          Row:
          - PhoneNumber: PhoneNumber
            Country: Country
          - PhoneNumber: PhoneNumber
            Country: Country
      properties:
        Input:
          $ref: '#/components/schemas/ValidatePhoneNumberAPIRequest_Input'
      type: object
    GeoLocationIpAddr:
      example:
        accuracy:
          unit: unit
          value: value
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
        ipInfo:
          proxy:
            level: level
            anonymizerStatus: anonymizerStatus
            lastDetected: lastDetected
            type: type
          ipAddress: ipAddress
          place:
            continent: continent
            country:
              code: code
              confidence: confidence
              value: value
            postCodeConfidence: postCodeConfidence
            city:
              confidence: confidence
              value: value
            postCode: postCode
            state:
              confidence: confidence
              value: value
            consistencyCode:
              description: description
              value: value
            region: region
          network:
            organizationType:
              isicCode: isicCode
              value: value
              naicsCode: naicsCode
            carrier:
              asn: asn
              value: value
            ipRouteType: ipRouteType
            connectionFromHome: connectionFromHome
            lineSpeed: lineSpeed
            organization: organization
            hostingFacility: hostingFacility
            connectionType: connectionType
      properties:
        geometry:
          $ref: '#/components/schemas/GeolocationGeometry'
        accuracy:
          $ref: '#/components/schemas/Accuracy'
        ipInfo:
          $ref: '#/components/schemas/IpInfo'
      type: object
    GeolocationGeometry:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        type: type
      properties:
        type:
          type: string
        coordinates:
          items:
            format: double
            type: number
          type: array
      type: object
    Accuracy:
      example:
        unit: unit
        value: value
      properties:
        unit:
          type: string
        value:
          type: string
      type: object
    IpInfo:
      example:
        proxy:
          level: level
          anonymizerStatus: anonymizerStatus
          lastDetected: lastDetected
          type: type
        ipAddress: ipAddress
        place:
          continent: continent
          country:
            code: code
            confidence: confidence
            value: value
          postCodeConfidence: postCodeConfidence
          city:
            confidence: confidence
            value: value
          postCode: postCode
          state:
            confidence: confidence
            value: value
          consistencyCode:
            description: description
            value: value
          region: region
        network:
          organizationType:
            isicCode: isicCode
            value: value
            naicsCode: naicsCode
          carrier:
            asn: asn
            value: value
          ipRouteType: ipRouteType
          connectionFromHome: connectionFromHome
          lineSpeed: lineSpeed
          organization: organization
          hostingFacility: hostingFacility
          connectionType: connectionType
      properties:
        ipAddress:
          type: string
        proxy:
          $ref: '#/components/schemas/Proxy'
        network:
          $ref: '#/components/schemas/Network'
        place:
          $ref: '#/components/schemas/GeoLocationPlace'
      type: object
    Proxy:
      example:
        level: level
        anonymizerStatus: anonymizerStatus
        lastDetected: lastDetected
        type: type
      properties:
        anonymizerStatus:
          type: string
        level:
          type: string
        lastDetected:
          type: string
        type:
          type: string
      type: object
    Network:
      example:
        organizationType:
          isicCode: isicCode
          value: value
          naicsCode: naicsCode
        carrier:
          asn: asn
          value: value
        ipRouteType: ipRouteType
        connectionFromHome: connectionFromHome
        lineSpeed: lineSpeed
        organization: organization
        hostingFacility: hostingFacility
        connectionType: connectionType
      properties:
        connectionFromHome:
          type: string
        organization:
          type: string
        carrier:
          $ref: '#/components/schemas/Carrier'
        organizationType:
          $ref: '#/components/schemas/OrganizationType'
        connectionType:
          type: string
        lineSpeed:
          type: string
        ipRouteType:
          type: string
        hostingFacility:
          type: string
      type: object
    Carrier:
      example:
        asn: asn
        value: value
      properties:
        asn:
          type: string
        value:
          type: string
      type: object
    OrganizationType:
      example:
        isicCode: isicCode
        value: value
        naicsCode: naicsCode
      properties:
        naicsCode:
          type: string
        isicCode:
          type: string
        value:
          type: string
      type: object
    GeoLocationPlace:
      example:
        continent: continent
        country:
          code: code
          confidence: confidence
          value: value
        postCodeConfidence: postCodeConfidence
        city:
          confidence: confidence
          value: value
        postCode: postCode
        state:
          confidence: confidence
          value: value
        consistencyCode:
          description: description
          value: value
        region: region
      properties:
        continent:
          type: string
        country:
          $ref: '#/components/schemas/GeoLocationCountry'
        consistencyCode:
          $ref: '#/components/schemas/ConsistencyCode'
        region:
          type: string
        state:
          $ref: '#/components/schemas/GeoLocationState'
        city:
          $ref: '#/components/schemas/City'
        postCode:
          type: string
        postCodeConfidence:
          type: string
      type: object
    GeoLocationCountry:
      example:
        code: code
        confidence: confidence
        value: value
      properties:
        code:
          type: string
        confidence:
          type: string
        value:
          type: string
      type: object
    ConsistencyCode:
      example:
        description: description
        value: value
      properties:
        description:
          type: string
        value:
          type: string
      type: object
    GeoLocationState:
      example:
        confidence: confidence
        value: value
      properties:
        confidence:
          type: string
        value:
          type: string
      type: object
    City:
      example:
        confidence: confidence
        value: value
      properties:
        confidence:
          type: string
        value:
          type: string
      type: object
    GeoLocationAccessPoint:
      example:
        accuracy:
          unit: unit
          value: value
        geometry:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          type: type
      properties:
        geometry:
          $ref: '#/components/schemas/GeolocationGeometry'
        accuracy:
          $ref: '#/components/schemas/Accuracy'
      type: object
    GetPostalCodesAPIOutput_user_fields:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    PhoneVerification_Output:
      example:
        CarrierName: CarrierName
        MNC: MNC
        user_fields:
        - user_fields
        - user_fields
        PhoneType: PhoneType
        PhoneNumberFormatted: PhoneNumberFormatted
        PhoneNumber: PhoneNumber
        MCC: MCC
        CountryCode: CountryCode
        ResultCode: ResultCode
      properties:
        MNC:
          type: string
        MCC:
          type: string
        CarrierName:
          type: string
        PhoneType:
          type: string
        PhoneNumberFormatted:
          type: string
        CountryCode:
          type: string
        PhoneNumber:
          type: string
        ResultCode:
          type: string
        user_fields:
          items:
            type: string
          type: array
      type: object
    ValidatePhoneNumberAPIRequest_Input_Row:
      example:
        PhoneNumber: PhoneNumber
        Country: Country
      properties:
        PhoneNumber:
          type: string
        Country:
          type: string
      type: object
    ValidatePhoneNumberAPIRequest_Input:
      example:
        Row:
        - PhoneNumber: PhoneNumber
          Country: Country
        - PhoneNumber: PhoneNumber
          Country: Country
      properties:
        Row:
          items:
            $ref: '#/components/schemas/ValidatePhoneNumberAPIRequest_Input_Row'
          type: array
      type: object
  securitySchemes:
    oAuth2Password:
      flows:
        implicit:
          authorizationUrl: https://api.precisely.com/oauth/token
          scopes:
            bearer token: put your bearer token here.
      type: oauth2

