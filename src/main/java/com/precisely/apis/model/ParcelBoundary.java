/*
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 11.9.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.precisely.apis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.precisely.apis.model.Center;
import com.precisely.apis.model.MatchedAddress;
import com.precisely.apis.model.Parcel;
import com.precisely.apis.model.PropertyInformationGeometry;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ParcelBoundary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-01T17:17:01.735+05:30[Asia/Calcutta]")
public class ParcelBoundary {
  public static final String SERIALIZED_NAME_OBJECT_ID = "objectId";
  @SerializedName(SERIALIZED_NAME_OBJECT_ID)
  private String objectId;

  public static final String SERIALIZED_NAME_APN = "apn";
  @SerializedName(SERIALIZED_NAME_APN)
  private String apn;

  public static final String SERIALIZED_NAME_PID = "pid";
  @SerializedName(SERIALIZED_NAME_PID)
  private String pid;

  public static final String SERIALIZED_NAME_CENTER = "center";
  @SerializedName(SERIALIZED_NAME_CENTER)
  private Center center;

  public static final String SERIALIZED_NAME_COUNTYFIPS = "countyfips";
  @SerializedName(SERIALIZED_NAME_COUNTYFIPS)
  private String countyfips;

  public static final String SERIALIZED_NAME_GEOMETRY = "geometry";
  @SerializedName(SERIALIZED_NAME_GEOMETRY)
  private PropertyInformationGeometry geometry;

  public static final String SERIALIZED_NAME_PARCEL_LIST = "parcelList";
  @SerializedName(SERIALIZED_NAME_PARCEL_LIST)
  private List<Parcel> parcelList = null;

  public static final String SERIALIZED_NAME_ADJACENT_PARCEL_BOUNDARY = "adjacentParcelBoundary";
  @SerializedName(SERIALIZED_NAME_ADJACENT_PARCEL_BOUNDARY)
  private List<ParcelBoundary> adjacentParcelBoundary = null;

  public static final String SERIALIZED_NAME_MATCHED_ADDRESS = "matchedAddress";
  @SerializedName(SERIALIZED_NAME_MATCHED_ADDRESS)
  private MatchedAddress matchedAddress;

  public ParcelBoundary() { 
  }

  public ParcelBoundary objectId(String objectId) {
    
    this.objectId = objectId;
    return this;
  }

   /**
   * Get objectId
   * @return objectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObjectId() {
    return objectId;
  }


  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }


  public ParcelBoundary apn(String apn) {
    
    this.apn = apn;
    return this;
  }

   /**
   * Get apn
   * @return apn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApn() {
    return apn;
  }


  public void setApn(String apn) {
    this.apn = apn;
  }


  public ParcelBoundary pid(String pid) {
    
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPid() {
    return pid;
  }


  public void setPid(String pid) {
    this.pid = pid;
  }


  public ParcelBoundary center(Center center) {
    
    this.center = center;
    return this;
  }

   /**
   * Get center
   * @return center
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Center getCenter() {
    return center;
  }


  public void setCenter(Center center) {
    this.center = center;
  }


  public ParcelBoundary countyfips(String countyfips) {
    
    this.countyfips = countyfips;
    return this;
  }

   /**
   * Get countyfips
   * @return countyfips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountyfips() {
    return countyfips;
  }


  public void setCountyfips(String countyfips) {
    this.countyfips = countyfips;
  }


  public ParcelBoundary geometry(PropertyInformationGeometry geometry) {
    
    this.geometry = geometry;
    return this;
  }

   /**
   * Get geometry
   * @return geometry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PropertyInformationGeometry getGeometry() {
    return geometry;
  }


  public void setGeometry(PropertyInformationGeometry geometry) {
    this.geometry = geometry;
  }


  public ParcelBoundary parcelList(List<Parcel> parcelList) {
    
    this.parcelList = parcelList;
    return this;
  }

  public ParcelBoundary addParcelListItem(Parcel parcelListItem) {
    if (this.parcelList == null) {
      this.parcelList = new ArrayList<Parcel>();
    }
    this.parcelList.add(parcelListItem);
    return this;
  }

   /**
   * Get parcelList
   * @return parcelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Parcel> getParcelList() {
    return parcelList;
  }


  public void setParcelList(List<Parcel> parcelList) {
    this.parcelList = parcelList;
  }


  public ParcelBoundary adjacentParcelBoundary(List<ParcelBoundary> adjacentParcelBoundary) {
    
    this.adjacentParcelBoundary = adjacentParcelBoundary;
    return this;
  }

  public ParcelBoundary addAdjacentParcelBoundaryItem(ParcelBoundary adjacentParcelBoundaryItem) {
    if (this.adjacentParcelBoundary == null) {
      this.adjacentParcelBoundary = new ArrayList<ParcelBoundary>();
    }
    this.adjacentParcelBoundary.add(adjacentParcelBoundaryItem);
    return this;
  }

   /**
   * Get adjacentParcelBoundary
   * @return adjacentParcelBoundary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ParcelBoundary> getAdjacentParcelBoundary() {
    return adjacentParcelBoundary;
  }


  public void setAdjacentParcelBoundary(List<ParcelBoundary> adjacentParcelBoundary) {
    this.adjacentParcelBoundary = adjacentParcelBoundary;
  }


  public ParcelBoundary matchedAddress(MatchedAddress matchedAddress) {
    
    this.matchedAddress = matchedAddress;
    return this;
  }

   /**
   * Get matchedAddress
   * @return matchedAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MatchedAddress getMatchedAddress() {
    return matchedAddress;
  }


  public void setMatchedAddress(MatchedAddress matchedAddress) {
    this.matchedAddress = matchedAddress;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParcelBoundary parcelBoundary = (ParcelBoundary) o;
    return Objects.equals(this.objectId, parcelBoundary.objectId) &&
        Objects.equals(this.apn, parcelBoundary.apn) &&
        Objects.equals(this.pid, parcelBoundary.pid) &&
        Objects.equals(this.center, parcelBoundary.center) &&
        Objects.equals(this.countyfips, parcelBoundary.countyfips) &&
        Objects.equals(this.geometry, parcelBoundary.geometry) &&
        Objects.equals(this.parcelList, parcelBoundary.parcelList) &&
        Objects.equals(this.adjacentParcelBoundary, parcelBoundary.adjacentParcelBoundary) &&
        Objects.equals(this.matchedAddress, parcelBoundary.matchedAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectId, apn, pid, center, countyfips, geometry, parcelList, adjacentParcelBoundary, matchedAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParcelBoundary {\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    apn: ").append(toIndentedString(apn)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    center: ").append(toIndentedString(center)).append("\n");
    sb.append("    countyfips: ").append(toIndentedString(countyfips)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    parcelList: ").append(toIndentedString(parcelList)).append("\n");
    sb.append("    adjacentParcelBoundary: ").append(toIndentedString(adjacentParcelBoundary)).append("\n");
    sb.append("    matchedAddress: ").append(toIndentedString(matchedAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

