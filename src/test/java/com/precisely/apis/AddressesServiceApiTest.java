/*
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 11.9.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.precisely.apis;

import com.precisely.ApiException;
import com.precisely.apis.model.AddressesByBoundaryRequest;
import com.precisely.apis.model.AddressesCount;
import com.precisely.apis.model.AddressesResponse;
import com.precisely.apis.model.ErrorInfo;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressesServiceApi
 */
@Ignore
public class AddressesServiceApiTest {

    private final AddressesServiceApi api = new AddressesServiceApi();

    
    /**
     * Addresses Count by Boundary Name.
     *
     * This service accepts zip code, neighborhood, county, or city names, and returns the total number of addresses associated with these names.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressesCountByBoundaryNameTest() throws ApiException {
        String country = null;
        String areaName1 = null;
        String areaName2 = null;
        String areaName3 = null;
        String areaName4 = null;
        String postCode = null;
                AddressesCount response = api.getAddressesCountByBoundaryName(country, areaName1, areaName2, areaName3, areaName4, postCode);
        // TODO: test validations
    }
    
    /**
     * Addresses count by Boundary.
     *
     * This service accepts custom geographic boundaries or drive time &amp; drive distance, returns the total number of addresses within these boundaries.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressesCountbyBoundaryTest() throws ApiException {
        AddressesByBoundaryRequest addressesByBoundaryRequest = null;
                AddressesCount response = api.getAddressesCountbyBoundary(addressesByBoundaryRequest);
        // TODO: test validations
    }
    
    /**
     * Addresses by Boundary.
     *
     * This service accepts custom geographic boundaries or drive time &amp; drive distance, returns all known &amp; valid addresses within these boundaries.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressesbyBoundaryTest() throws ApiException {
        AddressesByBoundaryRequest addressesByBoundaryRequest = null;
                AddressesResponse response = api.getAddressesbyBoundary(addressesByBoundaryRequest);
        // TODO: test validations
    }
    
    /**
     * Addresses by Boundary Name.
     *
     * This service accepts zip code, neighborhood, county, or city names, and returns all known &amp; valid addresses associated with these names.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAddressesbyBoundaryNameTest() throws ApiException {
        String country = null;
        String areaName1 = null;
        String areaName2 = null;
        String areaName3 = null;
        String areaName4 = null;
        String postCode = null;
        String maxCandidates = null;
        String page = null;
                AddressesResponse response = api.getAddressesbyBoundaryName(country, areaName1, areaName2, areaName3, areaName4, postCode, maxCandidates, page);
        // TODO: test validations
    }
    
}
