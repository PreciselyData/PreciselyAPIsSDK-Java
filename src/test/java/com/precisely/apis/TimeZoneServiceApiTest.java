/*
 * Precisely APIs
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 11.9.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.precisely.apis;

import com.precisely.ApiException;
import com.precisely.apis.model.ErrorInfo;
import com.precisely.apis.model.TimezoneAddressRequest;
import com.precisely.apis.model.TimezoneLocationRequest;
import com.precisely.apis.model.TimezoneResponse;
import com.precisely.apis.model.TimezoneResponseList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimeZoneServiceApi
 */
@Ignore
public class TimeZoneServiceApiTest {

    private final TimeZoneServiceApi api = new TimeZoneServiceApi();

    
    /**
     * Timezone Batch by Location.
     *
     * Identifies and retrieves the local time of any location in the world for a given latitude, longitude and time. The input and retrieved time format is in milliseconds.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBatchTimezoneByLocationTest() throws ApiException {
        TimezoneLocationRequest timezoneLocationRequest = null;
                TimezoneResponseList response = api.getBatchTimezoneByLocation(timezoneLocationRequest);
        // TODO: test validations
    }
    
    /**
     * Timezone By Address.
     *
     * Identifies and retrieves the local time of any location in the world for a given address and time. The input and retrieved time format is in milliseconds.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTimezoneByAddressTest() throws ApiException {
        String timestamp = null;
        String address = null;
        String matchMode = null;
        String country = null;
                TimezoneResponse response = api.getTimezoneByAddress(timestamp, address, matchMode, country);
        // TODO: test validations
    }
    
    /**
     * Timezone Batch by Address.
     *
     * Identifies and retrieves the local time of any location in the world for a given address and time. The input and retrieved time format is in milliseconds.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTimezoneByAddressBatchTest() throws ApiException {
        TimezoneAddressRequest timezoneAddressRequest = null;
                TimezoneResponseList response = api.getTimezoneByAddressBatch(timezoneAddressRequest);
        // TODO: test validations
    }
    
    /**
     * Timezone By Location.
     *
     * Identifies and retrieves the local time of any location in the world for a given latitude, longitude and time. The input and retrieved time format is in milliseconds.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTimezoneByLocationTest() throws ApiException {
        String timestamp = null;
        String longitude = null;
        String latitude = null;
                TimezoneResponse response = api.getTimezoneByLocation(timestamp, longitude, latitude);
        // TODO: test validations
    }
    
}
